remark,"CSV-Import-Export"
remark,"Date = Thu Mar 21 13:57:12 2019"
remark,"Version = RSLogix 5000 v30.01"
remark,"Owner = Windows User"
remark,"Company = Brock Solutions"
0.3
TYPE,SCOPE,NAME,DESCRIPTION,DATATYPE,SPECIFIER,ATTRIBUTES
TAG,,AM_Adapter:C,"","AB:ETHERNET_MODULE:C:0","","(ExternalAccess := Read/Write)"
TAG,,AM_Adapter:I,"","AB:ETHERNET_MODULE_INT_80Bytes:I:0","","(ExternalAccess := Read/Write)"
TAG,,AM_Adapter:O,"","AB:ETHERNET_MODULE_INT_80Bytes:O:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK2_S0:10:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:10:I,"","","MCP_03_RK2_S0:I.Slot[10]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:10:O,"","","MCP_03_RK2_S0:O.Slot[10]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK2_S0:1:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:1:I,"","","MCP_03_RK2_S0:I.Slot[1]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:1:O,"","","MCP_03_RK2_S0:O.Slot[1]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK2_S0:2:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:2:I,"","","MCP_03_RK2_S0:I.Slot[2]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:2:O,"","","MCP_03_RK2_S0:O.Slot[2]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK2_S0:3:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:3:I,"","","MCP_03_RK2_S0:I.Slot[3]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:3:O,"","","MCP_03_RK2_S0:O.Slot[3]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK2_S0:4:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:4:I,"","","MCP_03_RK2_S0:I.Slot[4]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:4:O,"","","MCP_03_RK2_S0:O.Slot[4]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK2_S0:5:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:5:I,"","","MCP_03_RK2_S0:I.Slot[5]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:5:O,"","","MCP_03_RK2_S0:O.Slot[5]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK2_S0:6:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:6:I,"","","MCP_03_RK2_S0:I.Slot[6]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:6:O,"","","MCP_03_RK2_S0:O.Slot[6]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK2_S0:7:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:7:I,"","","MCP_03_RK2_S0:I.Slot[7]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:7:O,"","","MCP_03_RK2_S0:O.Slot[7]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK2_S0:8:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:8:I,"","","MCP_03_RK2_S0:I.Slot[8]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:8:O,"","","MCP_03_RK2_S0:O.Slot[8]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK2_S0:9:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:9:I,"","","MCP_03_RK2_S0:I.Slot[9]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK2_S0:9:O,"","","MCP_03_RK2_S0:O.Slot[9]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK2_S0:I,"","AB:1756_CNB_17SLOT:I:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK2_S0:O,"","AB:1756_CNB_17SLOT:O:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:10:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:10:I,"","","MCP_BM1_RK2_S0:I.Slot[10]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:11:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:11:I,"","","MCP_BM1_RK2_S0:I.Slot[11]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:12:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:12:I,"","","MCP_BM1_RK2_S0:I.Slot[12]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:13:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:13:I,"","","MCP_BM1_RK2_S0:I.Slot[13]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:14:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:14:I,"","","MCP_BM1_RK2_S0:I.Slot[14]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:14:O,"","","MCP_BM1_RK2_S0:O.Slot[14]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:15:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:15:I,"","","MCP_BM1_RK2_S0:I.Slot[15]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:15:O,"","","MCP_BM1_RK2_S0:O.Slot[15]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:1:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:1:I,"","","MCP_BM1_RK2_S0:I.Slot[1]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:1:O,"","","MCP_BM1_RK2_S0:O.Slot[1]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:2:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:2:I,"","","MCP_BM1_RK2_S0:I.Slot[2]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:2:O,"","","MCP_BM1_RK2_S0:O.Slot[2]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:3:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:3:I,"","","MCP_BM1_RK2_S0:I.Slot[3]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:3:O,"","","MCP_BM1_RK2_S0:O.Slot[3]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:4:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:4:I,"","","MCP_BM1_RK2_S0:I.Slot[4]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:4:O,"","","MCP_BM1_RK2_S0:O.Slot[4]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:5:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:5:I,"","","MCP_BM1_RK2_S0:I.Slot[5]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:5:O,"","","MCP_BM1_RK2_S0:O.Slot[5]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:6:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:6:I,"","","MCP_BM1_RK2_S0:I.Slot[6]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:6:O,"","","MCP_BM1_RK2_S0:O.Slot[6]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:7:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:7:I,"","","MCP_BM1_RK2_S0:I.Slot[7]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:7:O,"","","MCP_BM1_RK2_S0:O.Slot[7]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:8:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:8:I,"","","MCP_BM1_RK2_S0:I.Slot[8]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:8:O,"","","MCP_BM1_RK2_S0:O.Slot[8]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:9:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:9:I,"","","MCP_BM1_RK2_S0:I.Slot[9]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK2_S0:9:O,"","","MCP_BM1_RK2_S0:O.Slot[9]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:I,"","AB:1756_CNB_17SLOT:I:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK2_S0:O,"","AB:1756_CNB_17SLOT:O:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:10:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:10:I,"","","MCP_01_RK1_S0:I.Slot[10]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:10:O,"","","MCP_01_RK1_S0:O.Slot[10]","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:11:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:11:I,"","","MCP_01_RK1_S0:I.Slot[11]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:11:O,"","","MCP_01_RK1_S0:O.Slot[11]","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:1:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:1:I,"","","MCP_01_RK1_S0:I.Slot[1]","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:2:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:2:I,"","","MCP_01_RK1_S0:I.Slot[2]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:2:O,"","","MCP_01_RK1_S0:O.Slot[2]","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:3:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:3:I,"","","MCP_01_RK1_S0:I.Slot[3]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:3:O,"","","MCP_01_RK1_S0:O.Slot[3]","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:4:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:4:I,"","","MCP_01_RK1_S0:I.Slot[4]","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:5:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:5:I,"","","MCP_01_RK1_S0:I.Slot[5]","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:6:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:6:I,"","","MCP_01_RK1_S0:I.Slot[6]","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:7:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:7:I,"","","MCP_01_RK1_S0:I.Slot[7]","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:8:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:8:I,"","","MCP_01_RK1_S0:I.Slot[8]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:8:O,"","","MCP_01_RK1_S0:O.Slot[8]","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:9:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:9:I,"","","MCP_01_RK1_S0:I.Slot[9]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_01_RK1_S0:9:O,"","","MCP_01_RK1_S0:O.Slot[9]","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:I,"","AB:1756_CNB_17SLOT:I:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_01_RK1_S0:O,"","AB:1756_CNB_17SLOT:O:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:10:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:10:I,"","","MCP_BM1_RK1_S16:I.Slot[10]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:11:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:11:I,"","","MCP_BM1_RK1_S16:I.Slot[11]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:12:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:12:I,"","","MCP_BM1_RK1_S16:I.Slot[12]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:13:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:13:I,"","","MCP_BM1_RK1_S16:I.Slot[13]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:14:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:14:I,"","","MCP_BM1_RK1_S16:I.Slot[14]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:14:O,"","","MCP_BM1_RK1_S16:O.Slot[14]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:1:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:1:I,"","","MCP_BM1_RK1_S16:I.Slot[1]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:2:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:2:I,"","","MCP_BM1_RK1_S16:I.Slot[2]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:3:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:3:I,"","","MCP_BM1_RK1_S16:I.Slot[3]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:4:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:4:I,"","","MCP_BM1_RK1_S16:I.Slot[4]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:5:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:5:I,"","","MCP_BM1_RK1_S16:I.Slot[5]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:6:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:6:I,"","","MCP_BM1_RK1_S16:I.Slot[6]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:7:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:7:I,"","","MCP_BM1_RK1_S16:I.Slot[7]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:8:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:8:I,"","","MCP_BM1_RK1_S16:I.Slot[8]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:9:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_BM1_RK1_S16:9:I,"","","MCP_BM1_RK1_S16:I.Slot[9]","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:I,"","AB:1756_CNB_17SLOT:I:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_BM1_RK1_S16:O,"","AB:1756_CNB_17SLOT:O:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK2_S0:1:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:1:I,"","","MCP_02_RK2_S0:I.Slot[1]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:1:O,"","","MCP_02_RK2_S0:O.Slot[1]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK2_S0:2:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:2:I,"","","MCP_02_RK2_S0:I.Slot[2]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:2:O,"","","MCP_02_RK2_S0:O.Slot[2]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK2_S0:3:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:3:I,"","","MCP_02_RK2_S0:I.Slot[3]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:3:O,"","","MCP_02_RK2_S0:O.Slot[3]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK2_S0:4:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:4:I,"","","MCP_02_RK2_S0:I.Slot[4]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:4:O,"","","MCP_02_RK2_S0:O.Slot[4]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK2_S0:5:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:5:I,"","","MCP_02_RK2_S0:I.Slot[5]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:5:O,"","","MCP_02_RK2_S0:O.Slot[5]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK2_S0:6:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:6:I,"","","MCP_02_RK2_S0:I.Slot[6]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:6:O,"","","MCP_02_RK2_S0:O.Slot[6]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK2_S0:7:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:7:I,"","","MCP_02_RK2_S0:I.Slot[7]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:7:O,"","","MCP_02_RK2_S0:O.Slot[7]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK2_S0:8:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:8:I,"","","MCP_02_RK2_S0:I.Slot[8]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:8:O,"","","MCP_02_RK2_S0:O.Slot[8]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK2_S0:9:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:9:I,"","","MCP_02_RK2_S0:I.Slot[9]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK2_S0:9:O,"","","MCP_02_RK2_S0:O.Slot[9]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK2_S0:I,"","AB:1756_CNB_17SLOT:I:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK2_S0:O,"","AB:1756_CNB_17SLOT:O:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_16_RK1_S0:1:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_16_RK1_S0:1:I,"","","MCP_16_RK1_S0:I.Slot[1]","(ExternalAccess := Read/Write)"
TAG,,MCP_16_RK1_S0:2:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_16_RK1_S0:2:I,"","","MCP_16_RK1_S0:I.Slot[2]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_16_RK1_S0:2:O,"","","MCP_16_RK1_S0:O.Slot[2]","(ExternalAccess := Read/Write)"
TAG,,MCP_16_RK1_S0:3:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_16_RK1_S0:3:I,"","","MCP_16_RK1_S0:I.Slot[3]","(ExternalAccess := Read/Write)"
TAG,,MCP_16_RK1_S0:4:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_16_RK1_S0:4:I,"","","MCP_16_RK1_S0:I.Slot[4]","(ExternalAccess := Read/Write)"
TAG,,MCP_16_RK1_S0:5:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_16_RK1_S0:5:I,"","","MCP_16_RK1_S0:I.Slot[5]","(ExternalAccess := Read/Write)"
TAG,,MCP_16_RK1_S0:6:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_16_RK1_S0:6:I,"","","MCP_16_RK1_S0:I.Slot[6]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_16_RK1_S0:6:O,"","","MCP_16_RK1_S0:O.Slot[6]","(ExternalAccess := Read/Write)"
TAG,,MCP_16_RK1_S0:7:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_16_RK1_S0:7:I,"","","MCP_16_RK1_S0:I.Slot[7]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_16_RK1_S0:7:O,"","","MCP_16_RK1_S0:O.Slot[7]","(ExternalAccess := Read/Write)"
TAG,,MCP_16_RK1_S0:8:C,"","AB:1756_DO:C:0","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_16_RK1_S0:8:I,"","","MCP_16_RK1_S0:I.Slot[8]","(ExternalAccess := Read/Write)"
ALIAS,,MCP_16_RK1_S0:8:O,"","","MCP_16_RK1_S0:O.Slot[8]","(ExternalAccess := Read/Write)"
TAG,,MCP_16_RK1_S0:I,"","AB:1756_CNB_17SLOT:I:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_16_RK1_S0:O,"","AB:1756_CNB_17SLOT:O:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK1_S0:1:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK1_S0:1:I,"","","MCP_03_RK1_S0:I.Slot[1]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK1_S0:2:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK1_S0:2:I,"","","MCP_03_RK1_S0:I.Slot[2]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK1_S0:3:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK1_S0:3:I,"","","MCP_03_RK1_S0:I.Slot[3]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK1_S0:4:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK1_S0:4:I,"","","MCP_03_RK1_S0:I.Slot[4]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK1_S0:5:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK1_S0:5:I,"","","MCP_03_RK1_S0:I.Slot[5]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK1_S0:6:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK1_S0:6:I,"","","MCP_03_RK1_S0:I.Slot[6]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK1_S0:7:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK1_S0:7:I,"","","MCP_03_RK1_S0:I.Slot[7]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK1_S0:8:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_03_RK1_S0:8:I,"","","MCP_03_RK1_S0:I.Slot[8]","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK1_S0:I,"","AB:1756_CNB_17SLOT:I:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_03_RK1_S0:O,"","AB:1756_CNB_17SLOT:O:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK1_S0:1:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK1_S0:1:I,"","","MCP_02_RK1_S0:I.Slot[1]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK1_S0:2:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK1_S0:2:I,"","","MCP_02_RK1_S0:I.Slot[2]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK1_S0:3:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK1_S0:3:I,"","","MCP_02_RK1_S0:I.Slot[3]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK1_S0:4:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK1_S0:4:I,"","","MCP_02_RK1_S0:I.Slot[4]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK1_S0:5:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK1_S0:5:I,"","","MCP_02_RK1_S0:I.Slot[5]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK1_S0:6:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK1_S0:6:I,"","","MCP_02_RK1_S0:I.Slot[6]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK1_S0:7:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK1_S0:7:I,"","","MCP_02_RK1_S0:I.Slot[7]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK1_S0:8:C,"","AB:1756_DI:C:1","","(ExternalAccess := Read/Write)"
ALIAS,,MCP_02_RK1_S0:8:I,"","","MCP_02_RK1_S0:I.Slot[8]","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK1_S0:I,"","AB:1756_CNB_17SLOT:I:0","","(ExternalAccess := Read/Write)"
TAG,,MCP_02_RK1_S0:O,"","AB:1756_CNB_17SLOT:O:0","","(ExternalAccess := Read/Write)"
TAG,,AM_DELAY_TIMER,"","TIMER","","(Constant := false, ExternalAccess := Read Only)"
ALIAS,,AM_I_HSD_HSD_XO1_EXT,"","","AM_Adapter:I.Data[8].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_HSD_HSD_XO1_HOME,"","","AM_Adapter:I.Data[8].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_HSD_HSD_XO2_EXT,"","","AM_Adapter:I.Data[8].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_HSD_HSD_XO2_HOME,"","","AM_Adapter:I.Data[8].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_06,"","","AM_Adapter:I.Data[5].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_06_OH,"","","AM_Adapter:I.Data[5].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_07,"","","AM_Adapter:I.Data[5].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_08,"","","AM_Adapter:I.Data[5].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_09,"","","AM_Adapter:I.Data[5].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_10,"","","AM_Adapter:I.Data[5].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_11,"","","AM_Adapter:I.Data[5].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_12,"","","AM_Adapter:I.Data[5].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_13,"","","AM_Adapter:I.Data[5].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_14,"","","AM_Adapter:I.Data[5].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_14_A,"","","AM_Adapter:I.Data[5].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_15,"","","AM_Adapter:I.Data[6].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_16,"","","AM_Adapter:I.Data[6].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_17,"","","AM_Adapter:I.Data[6].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_18,"","","AM_Adapter:I.Data[6].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_19,"","","AM_Adapter:I.Data[6].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_19_OH,"","","AM_Adapter:I.Data[6].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_20,"","","AM_Adapter:I.Data[6].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_21,"","","AM_Adapter:I.Data[6].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_22,"","","AM_Adapter:I.Data[6].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_23,"","","AM_Adapter:I.Data[6].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_23_A,"","","AM_Adapter:I.Data[6].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_23_B,"","","AM_Adapter:I.Data[7].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_23_B1,"","","AM_Adapter:I.Data[7].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_24,"","","AM_Adapter:I.Data[6].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_25,"","","AM_Adapter:I.Data[6].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_26,"","","AM_Adapter:I.Data[6].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_27,"","","AM_Adapter:I.Data[6].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_27_A,"","","AM_Adapter:I.Data[6].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_28,"","","AM_Adapter:I.Data[7].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_28_A,"","","AM_Adapter:I.Data[7].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_29,"","","AM_Adapter:I.Data[7].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_29_A,"","","AM_Adapter:I.Data[7].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_30,"","","AM_Adapter:I.Data[7].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_30_A,"","","AM_Adapter:I.Data[7].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_30_OH,"","","AM_Adapter:I.Data[7].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_34,"","","AM_Adapter:I.Data[7].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_35,"","","AM_Adapter:I.Data[7].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_36,"","","AM_Adapter:I.Data[7].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_37,"","","AM_Adapter:I.Data[7].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_BM1_38,"","","AM_Adapter:I.Data[7].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_C2T_12,"","","AM_Adapter:I.Data[0].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_C2T_13,"","","AM_Adapter:I.Data[1].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_C2T_14,"","","AM_Adapter:I.Data[1].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_C2T_15,"","","AM_Adapter:I.Data[1].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_C2T_16,"","","AM_Adapter:I.Data[1].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_C2T_17,"","","AM_Adapter:I.Data[1].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_01,"","","AM_Adapter:I.Data[3].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_02,"","","AM_Adapter:I.Data[3].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_03,"","","AM_Adapter:I.Data[3].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_04,"","","AM_Adapter:I.Data[3].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_05,"","","AM_Adapter:I.Data[3].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_06,"","","AM_Adapter:I.Data[3].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_07,"","","AM_Adapter:I.Data[3].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_08,"","","AM_Adapter:I.Data[3].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_09,"","","AM_Adapter:I.Data[3].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_10,"","","AM_Adapter:I.Data[3].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_11,"","","AM_Adapter:I.Data[3].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_12,"","","AM_Adapter:I.Data[3].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_13,"","","AM_Adapter:I.Data[3].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_14,"","","AM_Adapter:I.Data[4].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_15,"","","AM_Adapter:I.Data[4].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_16,"","","AM_Adapter:I.Data[4].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_17,"","","AM_Adapter:I.Data[4].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_18,"","","AM_Adapter:I.Data[4].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_19,"","","AM_Adapter:I.Data[4].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_20,"","","AM_Adapter:I.Data[4].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_21,"","","AM_Adapter:I.Data[4].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_23,"","","AM_Adapter:I.Data[4].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_24,"","","AM_Adapter:I.Data[4].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL1T_26,"","","AM_Adapter:I.Data[4].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL2T_01,"","","AM_Adapter:I.Data[1].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL2T_02,"","","AM_Adapter:I.Data[1].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL2T_03,"","","AM_Adapter:I.Data[1].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL2T_04,"","","AM_Adapter:I.Data[1].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL2T_05,"","","AM_Adapter:I.Data[1].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL2T_06,"","","AM_Adapter:I.Data[1].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL2T_07,"","","AM_Adapter:I.Data[1].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL2T_08,"","","AM_Adapter:I.Data[1].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL2T_09,"","","AM_Adapter:I.Data[1].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL3T_01,"","","AM_Adapter:I.Data[1].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL3T_02,"","","AM_Adapter:I.Data[1].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL3T_03,"","","AM_Adapter:I.Data[2].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL3T_04,"","","AM_Adapter:I.Data[2].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL3T_05,"","","AM_Adapter:I.Data[2].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL3T_06,"","","AM_Adapter:I.Data[2].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL3T_07,"","","AM_Adapter:I.Data[2].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_CL3T_08,"","","AM_Adapter:I.Data[2].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_HX1T_06,"","","AM_Adapter:I.Data[4].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_HX1T_07,"","","AM_Adapter:I.Data[4].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_HX1T_08,"","","AM_Adapter:I.Data[4].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_HX1T_09,"","","AM_Adapter:I.Data[4].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_HX1T_10,"","","AM_Adapter:I.Data[4].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_HX1T_10A,"","","AM_Adapter:I.Data[5].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_04,"","","AM_Adapter:I.Data[0].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_05,"","","AM_Adapter:I.Data[0].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_06,"","","AM_Adapter:I.Data[0].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_07,"","","AM_Adapter:I.Data[0].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_08,"","","AM_Adapter:I.Data[0].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_09,"","","AM_Adapter:I.Data[0].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_10,"","","AM_Adapter:I.Data[0].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_11,"","","AM_Adapter:I.Data[0].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_12,"","","AM_Adapter:I.Data[0].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_13,"","","AM_Adapter:I.Data[0].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_14,"","","AM_Adapter:I.Data[0].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_15,"","","AM_Adapter:I.Data[0].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_16,"","","AM_Adapter:I.Data[0].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_17,"","","AM_Adapter:I.Data[0].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O2T_18,"","","AM_Adapter:I.Data[0].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O4T_05,"","","AM_Adapter:I.Data[2].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O4T_06,"","","AM_Adapter:I.Data[2].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O4T_07,"","","AM_Adapter:I.Data[2].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O4T_08,"","","AM_Adapter:I.Data[2].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O4T_09,"","","AM_Adapter:I.Data[2].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O4T_10,"","","AM_Adapter:I.Data[2].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O4T_10_A,"","","AM_Adapter:I.Data[2].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O4T_11,"","","AM_Adapter:I.Data[3].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O4T_12,"","","AM_Adapter:I.Data[3].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_O4T_13,"","","AM_Adapter:I.Data[3].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_T5T_08,"","","AM_Adapter:I.Data[7].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_T5T_09,"","","AM_Adapter:I.Data[7].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_XO1_01,"","","AM_Adapter:I.Data[2].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_XO1_01_A,"","","AM_Adapter:I.Data[7].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_XO1_02,"","","AM_Adapter:I.Data[2].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_XO1_03,"","","AM_Adapter:I.Data[2].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_XO2_01,"","","AM_Adapter:I.Data[5].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_XO2_02,"","","AM_Adapter:I.Data[5].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_XO2_03,"","","AM_Adapter:I.Data[5].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_XO2_04,"","","AM_Adapter:I.Data[5].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_zPARE1_02,"","","AM_Adapter:I.Data[8].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_zPARE1_03,"","","AM_Adapter:I.Data[8].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_zPARE1_04,"","","AM_Adapter:I.Data[8].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_zPARE1_05,"","","AM_Adapter:I.Data[8].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_I_PE_zPARE1_06,"","","AM_Adapter:I.Data[8].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_MODEL1_RUNNING,"Mapped to the GUI$'s $'Other Config$' sheet. Can use to reset faults when model initializes, or toggle in GUI while model running without needing to restart the model","","AM_Adapter:I.Data[18].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_01,"","","AM_Adapter:O.Data[6].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_02,"","","AM_Adapter:O.Data[6].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_03,"","","AM_Adapter:O.Data[6].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_04,"","","AM_Adapter:O.Data[6].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_05,"","","AM_Adapter:O.Data[6].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_06,"","","AM_Adapter:O.Data[6].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_07,"","","AM_Adapter:O.Data[6].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_08,"","","AM_Adapter:O.Data[7].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_09,"","","AM_Adapter:O.Data[7].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_10,"","","AM_Adapter:O.Data[7].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_11,"","","AM_Adapter:O.Data[7].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_12,"","","AM_Adapter:O.Data[7].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_13,"","","AM_Adapter:O.Data[7].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_14,"","","AM_Adapter:O.Data[1].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_15,"","","AM_Adapter:O.Data[1].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_16,"","","AM_Adapter:O.Data[1].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_17,"","","AM_Adapter:O.Data[1].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_18,"","","AM_Adapter:O.Data[2].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_19,"","","AM_Adapter:O.Data[2].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_20,"","","AM_Adapter:O.Data[2].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_21,"","","AM_Adapter:O.Data[2].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_22,"","","AM_Adapter:O.Data[2].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_23,"","","AM_Adapter:O.Data[2].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_24,"","","AM_Adapter:O.Data[2].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_25,"","","AM_Adapter:O.Data[2].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_26,"","","AM_Adapter:O.Data[2].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_27,"","","AM_Adapter:O.Data[7].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_27_FWD,"","","AM_Adapter:O.Data[2].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_27_REV,"","","AM_Adapter:O.Data[2].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_28_FWD,"","","AM_Adapter:O.Data[2].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_28_REV,"","","AM_Adapter:O.Data[2].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_29_FWD,"","","AM_Adapter:O.Data[2].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_29_REV,"","","AM_Adapter:O.Data[2].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_30_FWD,"","","AM_Adapter:O.Data[2].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_30_REV,"","","AM_Adapter:O.Data[3].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_34,"","","AM_Adapter:O.Data[7].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_35,"","","AM_Adapter:O.Data[1].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_36,"","","AM_Adapter:O.Data[1].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_37,"","","AM_Adapter:O.Data[1].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_C_BM1_38,"","","AM_Adapter:O.Data[1].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_HSD_HSD_XO1_EXT,"","","AM_Adapter:O.Data[8].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_HSD_HSD_XO1_RET,"","","AM_Adapter:O.Data[8].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_HSD_HSD_XO2_EXT,"","","AM_Adapter:O.Data[8].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_HSD_HSD_XO2_RET,"","","AM_Adapter:O.Data[9].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_C2T_12,"","","AM_Adapter:O.Data[0].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_C2T_13,"","","AM_Adapter:O.Data[1].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_C2T_14,"","","AM_Adapter:O.Data[1].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_C2T_15,"","","AM_Adapter:O.Data[1].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_C2T_16,"","","AM_Adapter:O.Data[1].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_C2T_17,"","","AM_Adapter:O.Data[1].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_01,"","","AM_Adapter:O.Data[3].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_02,"","","AM_Adapter:O.Data[3].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_03,"","","AM_Adapter:O.Data[3].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_04,"","","AM_Adapter:O.Data[3].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_05,"","","AM_Adapter:O.Data[3].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_06,"","","AM_Adapter:O.Data[3].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_07,"","","AM_Adapter:O.Data[4].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_08,"","","AM_Adapter:O.Data[4].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_09,"","","AM_Adapter:O.Data[4].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_10,"","","AM_Adapter:O.Data[4].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_11,"","","AM_Adapter:O.Data[4].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_12,"","","AM_Adapter:O.Data[4].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_13,"","","AM_Adapter:O.Data[4].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_14,"","","AM_Adapter:O.Data[4].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_15,"","","AM_Adapter:O.Data[4].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_16,"","","AM_Adapter:O.Data[4].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_17,"","","AM_Adapter:O.Data[4].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_18,"","","AM_Adapter:O.Data[4].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_19,"","","AM_Adapter:O.Data[4].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_20,"","","AM_Adapter:O.Data[4].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_21,"","","AM_Adapter:O.Data[4].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_22,"","","AM_Adapter:O.Data[4].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_23,"","","AM_Adapter:O.Data[5].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_24,"","","AM_Adapter:O.Data[5].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_25,"","","AM_Adapter:O.Data[5].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL1T_26,"","","AM_Adapter:O.Data[5].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL2T_01,"","","AM_Adapter:O.Data[6].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL2T_02,"","","AM_Adapter:O.Data[6].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL2T_03,"","","AM_Adapter:O.Data[6].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL2T_04,"","","AM_Adapter:O.Data[6].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL2T_05,"","","AM_Adapter:O.Data[6].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL2T_06,"","","AM_Adapter:O.Data[6].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL2T_07,"","","AM_Adapter:O.Data[6].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL2T_08,"","","AM_Adapter:O.Data[6].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL2T_09,"","","AM_Adapter:O.Data[6].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL3T_01,"","","AM_Adapter:O.Data[5].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL3T_02,"","","AM_Adapter:O.Data[5].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL3T_03,"","","AM_Adapter:O.Data[5].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL3T_04,"","","AM_Adapter:O.Data[5].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL3T_05,"","","AM_Adapter:O.Data[5].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL3T_06,"","","AM_Adapter:O.Data[5].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL3T_07,"","","AM_Adapter:O.Data[5].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_CL3T_08,"","","AM_Adapter:O.Data[5].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_HX1T_06,"","","AM_Adapter:O.Data[7].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_HX1T_07,"","","AM_Adapter:O.Data[7].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_HX1T_08,"","","AM_Adapter:O.Data[7].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_HX1T_09,"","","AM_Adapter:O.Data[7].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_HX1T_10,"","","AM_Adapter:O.Data[7].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_HX1T_10A,"","","AM_Adapter:O.Data[7].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_04,"","","AM_Adapter:O.Data[0].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_05,"","","AM_Adapter:O.Data[0].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_06,"","","AM_Adapter:O.Data[0].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_07,"","","AM_Adapter:O.Data[0].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_08,"","","AM_Adapter:O.Data[0].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_09,"","","AM_Adapter:O.Data[0].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_10,"","","AM_Adapter:O.Data[0].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_11,"","","AM_Adapter:O.Data[0].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_12,"","","AM_Adapter:O.Data[0].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_13,"","","AM_Adapter:O.Data[0].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_14,"","","AM_Adapter:O.Data[0].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_15,"","","AM_Adapter:O.Data[0].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_16,"","","AM_Adapter:O.Data[0].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_17,"","","AM_Adapter:O.Data[0].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O2T_18,"","","AM_Adapter:O.Data[0].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O3T_17,"","","AM_Adapter:O.Data[8].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O3T_18,"","","AM_Adapter:O.Data[8].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O3T_19,"","","AM_Adapter:O.Data[8].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O3T_20,"","","AM_Adapter:O.Data[8].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O3T_21,"","","AM_Adapter:O.Data[8].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_05,"","","AM_Adapter:O.Data[3].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_06,"","","AM_Adapter:O.Data[3].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_07,"","","AM_Adapter:O.Data[3].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_08,"","","AM_Adapter:O.Data[3].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_09,"","","AM_Adapter:O.Data[3].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_10,"","","AM_Adapter:O.Data[3].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_11,"","","AM_Adapter:O.Data[3].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_12,"","","AM_Adapter:O.Data[3].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_13,"","","AM_Adapter:O.Data[3].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_16,"","","AM_Adapter:O.Data[8].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_17,"","","AM_Adapter:O.Data[8].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_18,"","","AM_Adapter:O.Data[8].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_19,"","","AM_Adapter:O.Data[8].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_20,"","","AM_Adapter:O.Data[8].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_21,"","","AM_Adapter:O.Data[8].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_22,"","","AM_Adapter:O.Data[8].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_O4T_23,"","","AM_Adapter:O.Data[8].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_T5T_08,"","","AM_Adapter:O.Data[7].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_T5T_09,"","","AM_Adapter:O.Data[7].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_XO1_01,"","","AM_Adapter:O.Data[1].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_XO1_02,"","","AM_Adapter:O.Data[1].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_XO1_03,"","","AM_Adapter:O.Data[1].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_XO2_01,"","","AM_Adapter:O.Data[5].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_XO2_02,"","","AM_Adapter:O.Data[5].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_XO2_03,"","","AM_Adapter:O.Data[5].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,AM_O_M_XO2_04,"","","AM_Adapter:O.Data[5].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_27_FWD,"CONV ON BAL PULLED","","BOOLS[7]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_27_NEG_XITN_STOP,"Negative transition stop","","BOOLS[12]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_27_REV,"CONV ON BAL PULLED","","BOOLS[6]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_27_XITN_MEM,"Negative Transition$N","","BOOLS[8]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_28_FWD,"CONV ON BAL PULLED","","BOOLS[5]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_28_NEG_XITN_STOP,"Negative Transition Stop","","BOOLS[13]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_28_REV,"CONV ON BAL PULLED","","BOOLS[4]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_28_XITN_MEM,"Negative Transition","","BOOLS[9]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_29_FWD,"CONV ON BAL PULLED","","BOOLS[3]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_29_NEG_XITN_STOP,"Negative Transition Stop","","BOOLS[14]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_29_REV,"CONV ON BAL PULLED","","BOOLS[2]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_29_XITN_MEM,"Negative Transition","","BOOLS[10]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_30_FWD,"CONV ON BAL PULLED","","BOOLS[1]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_30_NEG_XITN_STOP,"Negative Transition Stop","","BOOLS[15]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_30_REV,"CONV ON BAL PULLED","","BOOLS[0]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BAL_BM1_30_XITN_MEM,"Negative Transition","","BOOLS[11]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,BM1_01_EPB_ONS,"","","EPB_ONS[1]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_01_MTR,"","","MTR[34]","(ExternalAccess := Read Only)"
ALIAS,,BM1_01_MTRx,"","","MTRx[34]","(ExternalAccess := Read Only)"
ALIAS,,BM1_01_VFD,"","","VFD[34]","(ExternalAccess := Read Only)"
ALIAS,,BM1_02_EPB_ONS,"","","EPB_ONS[2]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_02_MTR,"","","MTR[33]","(ExternalAccess := Read Only)"
ALIAS,,BM1_02_MTRx,"","","MTRx[33]","(ExternalAccess := Read Only)"
ALIAS,,BM1_02_VFD,"","","VFD[33]","(ExternalAccess := Read Only)"
ALIAS,,BM1_03_EPB_ONS,"","","EPB_ONS[3]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_03_MTR,"","","MTR[32]","(ExternalAccess := Read Only)"
ALIAS,,BM1_03_MTRx,"","","MTRx[32]","(ExternalAccess := Read Only)"
ALIAS,,BM1_03_VFD,"","","VFD[32]","(ExternalAccess := Read Only)"
ALIAS,,BM1_04_MTR,"","","MTR[31]","(ExternalAccess := Read Only)"
ALIAS,,BM1_04_MTRx,"","","MTRx[31]","(ExternalAccess := Read Only)"
ALIAS,,BM1_04_VFD,"","","VFD[31]","(ExternalAccess := Read Only)"
ALIAS,,BM1_05_MTR,"","","MTR[30]","(ExternalAccess := Read Only)"
ALIAS,,BM1_05_MTRx,"","","MTRx[30]","(ExternalAccess := Read Only)"
ALIAS,,BM1_05_VFD,"","","VFD[30]","(ExternalAccess := Read Only)"
ALIAS,,BM1_06_EPB_ONS,"","","EPB_ONS[4]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_06_MTR,"","","MTR[29]","(ExternalAccess := Read Only)"
ALIAS,,BM1_06_MTRx,"","","MTRx[29]","(ExternalAccess := Read Only)"
ALIAS,,BM1_06_PE1,"","","PE[1]","(ExternalAccess := Read Only)"
ALIAS,,BM1_06_PE2,"","","PE[0]","(ExternalAccess := Read Only)"
ALIAS,,BM1_06_VFD,"","","VFD[29]","(ExternalAccess := Read Only)"
ALIAS,,BM1_07_EPB_ONS,"","","EPB_ONS[5]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_07_MTR,"","","MTR[28]","(ExternalAccess := Read Only)"
ALIAS,,BM1_07_MTRx,"","","MTRx[28]","(ExternalAccess := Read Only)"
ALIAS,,BM1_07_PE,"","","PE[2]","(ExternalAccess := Read Only)"
ALIAS,,BM1_07_VFD,"","","VFD[28]","(ExternalAccess := Read Only)"
ALIAS,,BM1_08_MTR,"","","MTR[27]","(ExternalAccess := Read Only)"
ALIAS,,BM1_08_MTRx,"","","MTRx[27]","(ExternalAccess := Read Only)"
ALIAS,,BM1_08_PE,"","","PE[3]","(ExternalAccess := Read Only)"
ALIAS,,BM1_08_VFD,"","","VFD[27]","(ExternalAccess := Read Only)"
ALIAS,,BM1_09_MTR,"","","MTR[26]","(ExternalAccess := Read Only)"
ALIAS,,BM1_09_MTRx,"","","MTRx[26]","(ExternalAccess := Read Only)"
ALIAS,,BM1_09_PE,"","","PE[4]","(ExternalAccess := Read Only)"
ALIAS,,BM1_09_VFD,"","","VFD[26]","(ExternalAccess := Read Only)"
ALIAS,,BM1_10_MTR,"","","MTR[25]","(ExternalAccess := Read Only)"
ALIAS,,BM1_10_MTRx,"","","MTRx[25]","(ExternalAccess := Read Only)"
ALIAS,,BM1_10_PE,"","","PE[5]","(ExternalAccess := Read Only)"
ALIAS,,BM1_10_VFD,"","","VFD[25]","(ExternalAccess := Read Only)"
ALIAS,,BM1_11_MTR,"","","MTR[24]","(ExternalAccess := Read Only)"
ALIAS,,BM1_11_MTRx,"","","MTRx[24]","(ExternalAccess := Read Only)"
ALIAS,,BM1_11_PE,"","","PE[6]","(ExternalAccess := Read Only)"
ALIAS,,BM1_11_VFD,"","","VFD[24]","(ExternalAccess := Read Only)"
ALIAS,,BM1_12_BT,"","","BTP[0]","(ExternalAccess := Read Only)"
ALIAS,,BM1_12_BTx,"","","BTx[0]","(ExternalAccess := Read Only)"
ALIAS,,BM1_12_LEN,"","","LEN[0]","(ExternalAccess := Read Only)"
ALIAS,,BM1_12_LENx,"","","LENx[0]","(ExternalAccess := Read Only)"
ALIAS,,BM1_12_MTR,"","","MTR[23]","(ExternalAccess := Read Only)"
ALIAS,,BM1_12_MTRx,"","","MTRx[23]","(ExternalAccess := Read Only)"
ALIAS,,BM1_12_PE,"","","PE[7]","(ExternalAccess := Read Only)"
ALIAS,,BM1_12_VFD,"","","VFD[23]","(ExternalAccess := Read Only)"
ALIAS,,BM1_13_BT,"","","BTP[1]","(ExternalAccess := Read Only)"
ALIAS,,BM1_13_BTx,"","","BTx[1]","(ExternalAccess := Read Only)"
ALIAS,,BM1_13_EPB_ONS,"","","EPB_ONS[6]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_13_MRG,"","","MRG[0]","(ExternalAccess := Read Only)"
ALIAS,,BM1_13_MRGx,"","","MRGx[0]","(ExternalAccess := Read Only)"
ALIAS,,BM1_13_MTR,"","","MTR[22]","(ExternalAccess := Read Only)"
ALIAS,,BM1_13_MTRx,"","","MTRx[22]","(ExternalAccess := Read Only)"
ALIAS,,BM1_13_PE,"","","PE[8]","(ExternalAccess := Read Only)"
ALIAS,,BM1_13_RUN_FWD_TMR,"","","REV_VFD_TMR[14]","(ExternalAccess := Read/Write)"
ALIAS,,BM1_13_VFD,"","","VFD[22]","(ExternalAccess := Read Only)"
ALIAS,,BM1_14_BT,"","","BTP[2]","(ExternalAccess := Read Only)"
ALIAS,,BM1_14_BTx,"","","BTx[2]","(ExternalAccess := Read Only)"
ALIAS,,BM1_14_EPB1_ONS,"","","EPB_ONS[7]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_14_EPB2_ONS,"","","EPB_ONS[8]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_14_MTR,"","","MTR[16]","(ExternalAccess := Read Only)"
ALIAS,,BM1_14_MTRx,"","","MTRx[16]","(ExternalAccess := Read Only)"
ALIAS,,BM1_14_PE1,"","","PE[10]","(ExternalAccess := Read Only)"
ALIAS,,BM1_14_PE2,"","","PE[9]","(ExternalAccess := Read Only)"
ALIAS,,BM1_14_VFD,"","","VFD[16]","(ExternalAccess := Read Only)"
ALIAS,,BM1_15_EPB_ONS,"","","EPB_ONS[9]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_15_MTR,"","","MTR[15]","(ExternalAccess := Read Only)"
ALIAS,,BM1_15_MTRx,"","","MTRx[15]","(ExternalAccess := Read Only)"
ALIAS,,BM1_15_PE,"","","PE[11]","(ExternalAccess := Read Only)"
ALIAS,,BM1_15_VFD,"","","VFD[15]","(ExternalAccess := Read Only)"
ALIAS,,BM1_16_EPB1_ONS,"","","EPB_ONS[10]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_16_EPB2_ONS,"","","EPB_ONS[11]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_16_MTR,"","","MTR[14]","(ExternalAccess := Read Only)"
ALIAS,,BM1_16_MTRx,"","","MTRx[14]","(ExternalAccess := Read Only)"
ALIAS,,BM1_16_PE,"","","PE[12]","(ExternalAccess := Read Only)"
ALIAS,,BM1_16_VFD,"","","VFD[14]","(ExternalAccess := Read Only)"
ALIAS,,BM1_17_EPB1_ONS,"","","EPB_ONS[12]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_17_EPB2_ONS,"","","EPB_ONS[13]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_17_MTR,"","","MTR[13]","(ExternalAccess := Read Only)"
ALIAS,,BM1_17_MTRx,"","","MTRx[13]","(ExternalAccess := Read Only)"
ALIAS,,BM1_17_PE,"","","PE[13]","(ExternalAccess := Read Only)"
ALIAS,,BM1_17_VFD,"","","VFD[13]","(ExternalAccess := Read Only)"
ALIAS,,BM1_18_EPB_ONS,"","","EPB_ONS[14]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_18_MTR,"","","MTR[12]","(ExternalAccess := Read Only)"
ALIAS,,BM1_18_MTRx,"","","MTRx[12]","(ExternalAccess := Read Only)"
ALIAS,,BM1_18_PE,"","","PE[14]","(ExternalAccess := Read Only)"
ALIAS,,BM1_18_VFD,"","","VFD[12]","(ExternalAccess := Read Only)"
ALIAS,,BM1_19_EPB_ONS,"","","EPB_ONS[15]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_19_MTR,"","","MTR[11]","(ExternalAccess := Read Only)"
ALIAS,,BM1_19_MTRx,"","","MTRx[11]","(ExternalAccess := Read Only)"
ALIAS,,BM1_19_PE1,"","","PE[16]","(ExternalAccess := Read Only)"
ALIAS,,BM1_19_PE2,"","","PE[15]","(ExternalAccess := Read Only)"
ALIAS,,BM1_19_VFD,"","","VFD[11]","(ExternalAccess := Read Only)"
ALIAS,,BM1_20_EPB_ONS,"","","EPB_ONS[16]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_20_MTR,"","","MTR[10]","(ExternalAccess := Read Only)"
ALIAS,,BM1_20_MTRx,"","","MTRx[10]","(ExternalAccess := Read Only)"
ALIAS,,BM1_20_PE,"","","PE[17]","(ExternalAccess := Read Only)"
ALIAS,,BM1_20_VFD,"","","VFD[10]","(ExternalAccess := Read Only)"
ALIAS,,BM1_21_MTR,"","","MTR[9]","(ExternalAccess := Read Only)"
ALIAS,,BM1_21_MTRx,"","","MTRx[9]","(ExternalAccess := Read Only)"
ALIAS,,BM1_21_PE,"","","PE[18]","(ExternalAccess := Read Only)"
ALIAS,,BM1_21_VFD,"","","VFD[9]","(ExternalAccess := Read Only)"
ALIAS,,BM1_22_BT,"","","BTP[19]","(ExternalAccess := Read Only)"
ALIAS,,BM1_22_BTx,"","","BTx[19]","(ExternalAccess := Read Only)"
ALIAS,,BM1_22_MTR,"","","MTR[8]","(ExternalAccess := Read Only)"
ALIAS,,BM1_22_MTRx,"","","MTRx[8]","(ExternalAccess := Read Only)"
ALIAS,,BM1_22_PE,"","","PE[19]","(ExternalAccess := Read Only)"
ALIAS,,BM1_22_VFD,"","","VFD[8]","(ExternalAccess := Read Only)"
ALIAS,,BM1_23_BT,"","","BTP[18]","(ExternalAccess := Read Only)"
ALIAS,,BM1_23_BTx,"","","BTx[18]","(ExternalAccess := Read Only)"
ALIAS,,BM1_23_EPB1_ONS,"","","EPB_ONS[18]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_23_EPB_ONS,"","","EPB_ONS[17]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_23_MTR,"","","MTR[7]","(ExternalAccess := Read Only)"
ALIAS,,BM1_23_MTRx,"","","MTRx[7]","(ExternalAccess := Read Only)"
ALIAS,,BM1_23_PE,"","","PE[22]","(ExternalAccess := Read Only)"
ALIAS,,BM1_23_PE1,"","","PE[21]","(ExternalAccess := Read Only)"
ALIAS,,BM1_23_PE2,"","","PE[20]","(ExternalAccess := Read Only)"
ALIAS,,BM1_23_VFD,"","","VFD[7]","(ExternalAccess := Read Only)"
ALIAS,,BM1_24_MTR,"","","MTR[6]","(ExternalAccess := Read Only)"
ALIAS,,BM1_24_MTRx,"","","MTRx[6]","(ExternalAccess := Read Only)"
ALIAS,,BM1_24_PE,"","","PE[23]","(ExternalAccess := Read Only)"
ALIAS,,BM1_24_VFD,"","","VFD[6]","(ExternalAccess := Read Only)"
ALIAS,,BM1_25_EPB_ONS,"","","EPB_ONS[19]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_25_MTR,"","","MTR[5]","(ExternalAccess := Read Only)"
ALIAS,,BM1_25_MTRx,"","","MTRx[5]","(ExternalAccess := Read Only)"
ALIAS,,BM1_25_PE,"","","PE[24]","(ExternalAccess := Read Only)"
ALIAS,,BM1_25_VFD,"","","VFD[5]","(ExternalAccess := Read Only)"
ALIAS,,BM1_26_MTR,"","","MTR[4]","(ExternalAccess := Read Only)"
ALIAS,,BM1_26_MTRx,"","","MTRx[4]","(ExternalAccess := Read Only)"
ALIAS,,BM1_26_PE,"","","PE[25]","(ExternalAccess := Read Only)"
ALIAS,,BM1_26_VFD,"","","VFD[4]","(ExternalAccess := Read Only)"
ALIAS,,BM1_27_EPB1_ONS,"","","EPB_ONS[20]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_27_EPB2_ONS,"","","EPB_ONS[21]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_27_EPB3_ONS,"","","EPB_ONS[22]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_27_EPB4_ONS,"","","EPB_ONS[23]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_27_EPB5_ONS,"","","EPB_ONS[24]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_27_MTR,"","","MTR[3]","(ExternalAccess := Read Only)"
ALIAS,,BM1_27_MTRx,"","","MTRx[3]","(ExternalAccess := Read Only)"
ALIAS,,BM1_27_PE1,"","","PE[27]","(ExternalAccess := Read Only)"
ALIAS,,BM1_27_PE2,"","","PE[26]","(ExternalAccess := Read Only)"
ALIAS,,BM1_27_RUN_FWD_TMR,"","","REV_VFD_TMR[0]","(ExternalAccess := Read/Write)"
ALIAS,,BM1_27_RUN_REV_TMR,"","","REV_VFD_TMR[1]","(ExternalAccess := Read/Write)"
ALIAS,,BM1_27_VFD,"","","VFD[3]","(ExternalAccess := Read Only)"
ALIAS,,BM1_28_EPB1_ONS,"","","EPB_ONS[25]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_28_EPB2_ONS,"","","EPB_ONS[26]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_28_EPB3_ONS,"","","EPB_ONS[27]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_28_EPB4_ONS,"","","EPB_ONS[28]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_28_MTR,"","","MTR[2]","(ExternalAccess := Read Only)"
ALIAS,,BM1_28_MTRx,"","","MTRx[2]","(ExternalAccess := Read Only)"
ALIAS,,BM1_28_PE1,"","","PE[29]","(ExternalAccess := Read Only)"
ALIAS,,BM1_28_PE2,"","","PE[28]","(ExternalAccess := Read Only)"
ALIAS,,BM1_28_RUN_FWD_TMR,"","","REV_VFD_TMR[2]","(ExternalAccess := Read/Write)"
ALIAS,,BM1_28_RUN_REV_TMR,"","","REV_VFD_TMR[3]","(ExternalAccess := Read/Write)"
ALIAS,,BM1_28_VFD,"","","VFD[2]","(ExternalAccess := Read Only)"
ALIAS,,BM1_29_EPB1_ONS,"","","EPB_ONS[29]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_29_EPB2_ONS,"","","EPB_ONS[30]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_29_EPB3_ONS,"","","EPB_ONS[31]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_29_EPB4_ONS,"","","EPB_ONS[32]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_29_MTR,"","","MTR[1]","(ExternalAccess := Read Only)"
ALIAS,,BM1_29_MTRx,"","","MTRx[1]","(ExternalAccess := Read Only)"
ALIAS,,BM1_29_PE1,"","","PE[31]","(ExternalAccess := Read Only)"
ALIAS,,BM1_29_PE2,"","","PE[30]","(ExternalAccess := Read Only)"
ALIAS,,BM1_29_RUN_FWD_TMR,"","","REV_VFD_TMR[4]","(ExternalAccess := Read/Write)"
ALIAS,,BM1_29_RUN_REV_TMR,"","","REV_VFD_TMR[5]","(ExternalAccess := Read/Write)"
ALIAS,,BM1_29_VFD,"","","VFD[1]","(ExternalAccess := Read Only)"
ALIAS,,BM1_30_EPB1_ONS,"","","EPB_ONS[33]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_30_EPB2_ONS,"","","EPB_ONS[34]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_30_EPB3_ONS,"","","EPB_ONS[35]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_30_EPB4_ONS,"","","EPB_ONS[36]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_30_MTR,"","","MTR[0]","(ExternalAccess := Read Only)"
ALIAS,,BM1_30_MTRx,"","","MTRx[0]","(ExternalAccess := Read Only)"
ALIAS,,BM1_30_PE1,"","","PE[34]","(ExternalAccess := Read Only)"
ALIAS,,BM1_30_PE2,"","","PE[33]","(ExternalAccess := Read Only)"
ALIAS,,BM1_30_PE3,"","","PE[32]","(ExternalAccess := Read Only)"
ALIAS,,BM1_30_RUN_FWD_TMR,"","","REV_VFD_TMR[6]","(ExternalAccess := Read/Write)"
ALIAS,,BM1_30_RUN_REV_TMR,"","","REV_VFD_TMR[7]","(ExternalAccess := Read/Write)"
ALIAS,,BM1_30_VFD,"","","VFD[0]","(ExternalAccess := Read Only)"
ALIAS,,BM1_34_EPB_ONS,"","","EPB_ONS[37]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_34_MTR,"","","MTR[21]","(ExternalAccess := Read Only)"
ALIAS,,BM1_34_MTRx,"","","MTRx[21]","(ExternalAccess := Read Only)"
ALIAS,,BM1_34_PE,"","","PE[35]","(ExternalAccess := Read Only)"
ALIAS,,BM1_34_VFD,"","","VFD[21]","(ExternalAccess := Read Only)"
ALIAS,,BM1_35_MTR,"","","MTR[20]","(ExternalAccess := Read Only)"
ALIAS,,BM1_35_MTRx,"","","MTRx[20]","(ExternalAccess := Read Only)"
ALIAS,,BM1_35_PE,"","","PE[36]","(ExternalAccess := Read Only)"
ALIAS,,BM1_35_VFD,"","","VFD[20]","(ExternalAccess := Read Only)"
ALIAS,,BM1_36_MTR,"","","MTR[19]","(ExternalAccess := Read Only)"
ALIAS,,BM1_36_MTRx,"","","MTRx[19]","(ExternalAccess := Read Only)"
ALIAS,,BM1_36_PE,"","","PE[37]","(ExternalAccess := Read Only)"
ALIAS,,BM1_36_VFD,"","","VFD[19]","(ExternalAccess := Read Only)"
ALIAS,,BM1_37_MTR,"","","MTR[18]","(ExternalAccess := Read Only)"
ALIAS,,BM1_37_MTRx,"","","MTRx[18]","(ExternalAccess := Read Only)"
ALIAS,,BM1_37_PE,"","","PE[38]","(ExternalAccess := Read Only)"
ALIAS,,BM1_37_VFD,"","","VFD[18]","(ExternalAccess := Read Only)"
ALIAS,,BM1_38_BT,"","","BTP[3]","(ExternalAccess := Read Only)"
ALIAS,,BM1_38_BTx,"","","BTx[3]","(ExternalAccess := Read Only)"
ALIAS,,BM1_38_EPB_ONS,"","","EPB_ONS[38]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,BM1_38_MTR,"","","MTR[17]","(ExternalAccess := Read Only)"
ALIAS,,BM1_38_MTRx,"","","MTRx[17]","(ExternalAccess := Read Only)"
ALIAS,,BM1_38_PE,"","","PE[39]","(ExternalAccess := Read Only)"
ALIAS,,BM1_38_VFD,"","","VFD[17]","(ExternalAccess := Read Only)"
ALIAS,,BM1_A,"","","SYS[0]","(ExternalAccess := Read Only)"
ALIAS,,BM1_B,"","","SYS[1]","(ExternalAccess := Read Only)"
ALIAS,,BM1_C,"","","SYS[2]","(ExternalAccess := Read Only)"
TAG,,BOOLS,"","BOOL[128]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,BT,"","BT[31]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,BTP,"","BTP[31]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,BTx,"","BTx[31]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,B_BDS,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,B_CTX,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,B_DOOR,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,B_ISD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,B_L3,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,B_PLC,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,B_PLC_101_RUNNING,"CNTRL/PLC-101 PLC Running","","B_PLC[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,B_VS,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,C2T,"","","SYS[4]","(ExternalAccess := Read Only)"
ALIAS,,C2T_12_MTR,"","","MTR[55]","(ExternalAccess := Read Only)"
ALIAS,,C2T_12_MTRx,"","","MTRx[55]","(ExternalAccess := Read Only)"
ALIAS,,C2T_12_PE,"","","PE[60]","(ExternalAccess := Read Only)"
ALIAS,,C2T_12_VFD,"","","VFD[55]","(ExternalAccess := Read Only)"
ALIAS,,C2T_13_EPB_ONS,"","","EPB_ONS[49]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,C2T_13_MTR,"","","MTR[54]","(ExternalAccess := Read Only)"
ALIAS,,C2T_13_MTRx,"","","MTRx[54]","(ExternalAccess := Read Only)"
ALIAS,,C2T_13_PE,"","","PE[59]","(ExternalAccess := Read Only)"
ALIAS,,C2T_13_VFD,"","","VFD[54]","(ExternalAccess := Read Only)"
ALIAS,,C2T_14_MTR,"","","MTR[53]","(ExternalAccess := Read Only)"
ALIAS,,C2T_14_MTRx,"","","MTRx[53]","(ExternalAccess := Read Only)"
ALIAS,,C2T_14_PE,"","","PE[58]","(ExternalAccess := Read Only)"
ALIAS,,C2T_14_VFD,"","","VFD[53]","(ExternalAccess := Read Only)"
ALIAS,,C2T_15_MTR,"","","MTR[52]","(ExternalAccess := Read Only)"
ALIAS,,C2T_15_MTRx,"","","MTRx[52]","(ExternalAccess := Read Only)"
ALIAS,,C2T_15_PE,"","","PE[57]","(ExternalAccess := Read Only)"
ALIAS,,C2T_15_VFD,"","","VFD[52]","(ExternalAccess := Read Only)"
ALIAS,,C2T_16_BT,"","","BTP[7]","(ExternalAccess := Read Only)"
ALIAS,,C2T_16_BTx,"","","BTx[7]","(ExternalAccess := Read Only)"
ALIAS,,C2T_16_LEN,"","","LEN[2]","(ExternalAccess := Read Only)"
ALIAS,,C2T_16_LENx,"","","LENx[2]","(ExternalAccess := Read Only)"
ALIAS,,C2T_16_MTR,"","","MTR[51]","(ExternalAccess := Read Only)"
ALIAS,,C2T_16_MTRx,"","","MTRx[51]","(ExternalAccess := Read Only)"
ALIAS,,C2T_16_PE,"","","PE[56]","(ExternalAccess := Read Only)"
ALIAS,,C2T_16_VFD,"","","VFD[51]","(ExternalAccess := Read Only)"
ALIAS,,C2T_17_BT,"","","BTP[6]","(ExternalAccess := Read Only)"
ALIAS,,C2T_17_BTx,"","","BTx[6]","(ExternalAccess := Read Only)"
ALIAS,,C2T_17_EPB_ONS,"","","EPB_ONS[50]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,C2T_17_MRG,"","","MRG[2]","(ExternalAccess := Read Only)"
ALIAS,,C2T_17_MRGx,"","","MRGx[2]","(ExternalAccess := Read Only)"
ALIAS,,C2T_17_MTR,"","","MTR[50]","(ExternalAccess := Read Only)"
ALIAS,,C2T_17_MTRx,"","","MTRx[50]","(ExternalAccess := Read Only)"
ALIAS,,C2T_17_PE,"","","PE[55]","(ExternalAccess := Read Only)"
ALIAS,,C2T_17_VFD,"","","VFD[50]","(ExternalAccess := Read Only)"
ALIAS,,C4_08_PE,"","","PE[143]","(ExternalAccess := Read Only)"
ALIAS,,C4_09ZZ_MTRx,"","","MTRx[138]","(ExternalAccess := Read Only)"
ALIAS,,C4_09_BT,"","","BTP[20]","(ExternalAccess := Read Only)"
ALIAS,,C4_09_BTx,"","","BTx[20]","(ExternalAccess := Read Only)"
ALIAS,,CC01_RK1_S02_STATUS,"","","COM_STATUS[0]","(ExternalAccess := Read Only)"
ALIAS,,CL12T,"","","SYS[14]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_35_BTP,"","","BTP[24]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_35_BTx,"","","BTx[24]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_35_MTR,"","","MTR[136]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_35_MTRx,"","","MTRx[136]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_35_PE,"","","PE[142]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_35_VFD,"","","VFD[136]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_36_BT,"","","BTP[23]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_36_BTx,"","","BTx[23]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_36_MRG,"","","MRG[6]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_36_MRG1,"","","MRG[6]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_36_MRGx,"","","MRGx[6]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_36_MRGx1,"","","MRGx[6]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_36_MTR,"","","MTR[135]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_36_MTRx,"","","MTRx[135]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_36_PE,"","","PE[141]","(ExternalAccess := Read Only)"
ALIAS,,CL12T_36_VFD,"","","VFD[135]","(ExternalAccess := Read Only)"
ALIAS,,CL1T,"","","SYS[10]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_01_EPB1_ONS,"","","EPB_ONS[73]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_01_EPB2_ONS,"","","EPB_ONS[74]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_01_EPB3_ONS,"","","EPB_ONS[75]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_01_MTR,"","","MTR[117]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_01_MTRx,"","","MTRx[117]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_01_PE,"","","PE[123]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_01_VFD,"","","VFD[117]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_02_EPB1_ONS,"","","EPB_ONS[76]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_02_EPB2_ONS,"","","EPB_ONS[77]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_02_EPB3_ONS,"","","EPB_ONS[78]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_02_MTR,"","","MTR[116]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_02_MTRx,"","","MTRx[116]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_02_PE,"","","PE[122]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_02_VFD,"","","VFD[116]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_03_MTR,"","","MTR[115]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_03_MTRx,"","","MTRx[115]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_03_PE,"","","PE[121]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_03_VFD,"","","VFD[115]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_04_MTR,"","","MTR[114]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_04_MTRx,"","","MTRx[114]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_04_PE,"","","PE[120]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_04_VFD,"","","VFD[114]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_05_EPB_ONS,"","","EPB_ONS[79]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_05_MTR,"","","MTR[113]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_05_MTRx,"","","MTRx[113]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_05_PE,"","","PE[119]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_05_VFD,"","","VFD[113]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_06_MTR,"","","MTR[112]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_06_MTRx,"","","MTRx[112]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_06_PE,"","","PE[118]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_06_VFD,"","","VFD[112]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_07_MTR,"","","MTR[111]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_07_MTRx,"","","MTRx[111]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_07_PE,"","","PE[117]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_07_VFD,"","","VFD[111]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_08_MTR,"","","MTR[110]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_08_MTRx,"","","MTRx[110]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_08_PE,"","","PE[116]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_08_VFD,"","","VFD[110]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_09_EPB_ONS,"","","EPB_ONS[80]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_09_MTR,"","","MTR[109]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_09_MTRx,"","","MTRx[109]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_09_PE,"","","PE[115]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_09_VFD,"","","VFD[109]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_10_MTR,"","","MTR[108]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_10_MTRx,"","","MTRx[108]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_10_PE,"","","PE[114]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_10_VFD,"","","VFD[108]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_11_EPB_ONS,"","","EPB_ONS[81]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_11_MTR,"","","MTR[107]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_11_MTRx,"","","MTRx[107]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_11_PE,"","","PE[113]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_11_VFD,"","","VFD[107]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_12_EPB_ONS,"","","EPB_ONS[82]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_12_MTR,"","","MTR[106]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_12_MTRx,"","","MTRx[106]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_12_PE,"","","PE[112]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_12_VFD,"","","VFD[106]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_13_MTR,"","","MTR[105]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_13_MTRx,"","","MTRx[105]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_13_PE,"","","PE[111]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_13_VFD,"","","VFD[105]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_14_MTR,"","","MTR[104]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_14_MTRx,"","","MTRx[104]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_14_PE,"","","PE[110]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_14_VFD,"","","VFD[104]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_15_MTR,"","","MTR[103]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_15_MTRx,"","","MTRx[103]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_15_PE,"","","PE[109]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_15_VFD,"","","VFD[103]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_16_EPB_ONS,"","","EPB_ONS[83]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_16_MTR,"","","MTR[102]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_16_MTRx,"","","MTRx[102]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_16_PE,"","","PE[108]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_16_VFD,"","","VFD[102]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_17_MTR,"","","MTR[101]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_17_MTRx,"","","MTRx[101]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_17_PE,"","","PE[107]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_17_VFD,"","","VFD[101]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_18_MTR,"","","MTR[100]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_18_MTRx,"","","MTRx[100]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_18_PE,"","","PE[106]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_18_VFD,"","","VFD[100]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_19_MTR,"","","MTR[99]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_19_MTRx,"","","MTRx[99]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_19_PE,"","","PE[105]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_19_VFD,"","","VFD[99]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_20_EPB_ONS,"","","EPB_ONS[84]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_20_MTR,"","","MTR[98]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_20_MTRx,"","","MTRx[98]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_20_PE,"","","PE[104]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_20_VFD,"","","VFD[98]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_21_MTR,"","","MTR[97]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_21_MTRx,"","","MTRx[97]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_21_PE,"","","PE[103]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_21_VFD,"","","VFD[97]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_22_MTR,"","","MTR[96]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_22_MTRx,"","","MTRx[96]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_22_VFD,"","","VFD[96]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_23_MTR,"","","MTR[95]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_23_MTRx,"","","MTRx[95]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_23_PE,"","","PE[102]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_23_VFD,"","","VFD[95]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_24_EPB_ONS,"","","EPB_ONS[85]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL1T_24_MTR,"","","MTR[94]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_24_MTRx,"","","MTRx[94]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_24_PE,"","","PE[101]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_24_VFD,"","","VFD[94]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_25_MTR,"","","MTR[93]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_25_MTRx,"","","MTRx[93]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_25_VFD,"","","VFD[93]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_26_BT,"","","BTP[9]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_26_BTx,"","","BTx[9]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_26_MTR,"","","MTR[92]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_26_MTRx,"","","MTRx[92]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_26_PE1,"","","PE[99]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_26_PE2,"","","PE[100]","(ExternalAccess := Read Only)"
ALIAS,,CL1T_26_VFD,"","","VFD[92]","(ExternalAccess := Read Only)"
ALIAS,,CL2T,"","","SYS[5]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_01_EPB1_ONS,"","","EPB_ONS[51]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL2T_01_EPB2_ONS,"","","EPB_ONS[52]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL2T_01_MTR,"","","MTR[64]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_01_MTRx,"","","MTRx[64]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_01_PE,"","","PE[69]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_01_VFD,"","","VFD[64]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_02_EPB1_ONS,"","","EPB_ONS[53]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL2T_02_EPB2_ONS,"","","EPB_ONS[54]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL2T_02_EPB3_ONS,"","","EPB_ONS[55]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL2T_02_MTR,"","","MTR[63]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_02_MTRx,"","","MTRx[63]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_02_PE,"","","PE[68]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_02_VFD,"","","VFD[63]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_03_MTR,"","","MTR[62]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_03_MTRx,"","","MTRx[62]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_03_PE,"","","PE[67]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_03_VFD,"","","VFD[62]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_04_EPB_ONS,"","","EPB_ONS[56]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL2T_04_MTR,"","","MTR[61]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_04_MTRx,"","","MTRx[61]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_04_PE,"","","PE[66]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_04_VFD,"","","VFD[61]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_05_EPB1_ONS,"","","EPB_ONS[57]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL2T_05_EPB2_ONS,"","","EPB_ONS[58]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL2T_05_MTR,"","","MTR[60]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_05_MTRx,"","","MTRx[60]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_05_PE,"","","PE[65]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_05_VFD,"","","VFD[60]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_06_MTR,"","","MTR[59]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_06_MTRx,"","","MTRx[59]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_06_PE,"","","PE[64]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_06_VFD,"","","VFD[59]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_07_MTR,"","","MTR[58]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_07_MTRx,"","","MTRx[58]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_07_PE,"","","PE[63]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_07_VFD,"","","VFD[58]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_08_MTR,"","","MTR[57]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_08_MTRx,"","","MTRx[57]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_08_PE,"","","PE[62]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_08_VFD,"","","VFD[57]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_09_EPB_ONS,"","","EPB_ONS[59]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL2T_09_MTR,"","","MTR[56]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_09_MTRx,"","","MTRx[56]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_09_PE,"","","PE[61]","(ExternalAccess := Read Only)"
ALIAS,,CL2T_09_VFD,"","","VFD[56]","(ExternalAccess := Read Only)"
ALIAS,,CL3T,"","","SYS[6]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_01_EPB1_ONS,"","","EPB_ONS[60]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL3T_01_EPB2_ONS,"","","EPB_ONS[61]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL3T_01_MTR,"","","MTR[72]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_01_MTRx,"","","MTRx[72]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_01_PE,"","","PE[77]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_01_VFD,"","","VFD[72]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_02_EPB1_ONS,"","","EPB_ONS[62]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL3T_02_EPB2_ONS,"","","EPB_ONS[63]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL3T_02_EPB3_ONS,"","","EPB_ONS[64]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL3T_02_EPB4_ONS,"","","EPB_ONS[65]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL3T_02_MTR,"","","MTR[71]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_02_MTRx,"","","MTRx[71]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_02_PE,"","","PE[76]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_02_VFD,"","","VFD[71]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_03_MTR,"","","MTR[70]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_03_MTRx,"","","MTRx[70]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_03_PE,"","","PE[75]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_03_VFD,"","","VFD[70]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_04_EPB_ONS,"","","EPB_ONS[66]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CL3T_04_MTR,"","","MTR[69]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_04_MTRx,"","","MTRx[69]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_04_PE,"","","PE[74]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_04_VFD,"","","VFD[69]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_05_MTR,"","","MTR[68]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_05_MTRx,"","","MTRx[68]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_05_PE,"","","PE[73]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_05_VFD,"","","VFD[68]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_06_MTR,"","","MTR[67]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_06_MTRx,"","","MTRx[67]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_06_PE,"","","PE[72]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_06_VFD,"","","VFD[67]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_07_MTR,"","","MTR[66]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_07_MTRx,"","","MTRx[66]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_07_PE,"","","PE[71]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_07_VFD,"","","VFD[66]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_08_MTR,"","","MTR[65]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_08_MTRx,"","","MTRx[65]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_08_PE,"","","PE[70]","(ExternalAccess := Read Only)"
ALIAS,,CL3T_08_VFD,"","","VFD[65]","(ExternalAccess := Read Only)"
TAG,,COM_STATUS,"","COM_STATUS[15]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,CST,"Coordinated System Time","DINT[2]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_01_LTA_FLASH,"","","LTA_FLASH[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_02_LTA_FLASH,"","","LTA_FLASH[1]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_03_LTA_FLASH,"","","LTA_FLASH[2]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_06_LTA_FLASH,"","","LTA_FLASH[3]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_07_LTA_FLASH,"","","LTA_FLASH[4]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_07_LTW_FLASH,"","","LTW_FLASH[4]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_13_LTA_FLASH,"","","LTA_FLASH[5]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_14_LTA1_FLASH,"","","LTA_FLASH[6]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_14_LTA2_FLASH,"","","LTA_FLASH[7]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_15_LTA_FLASH,"","","LTA_FLASH[8]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_16_LTA1_FLASH,"","","LTA_FLASH[9]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_16_LTA2_FLASH,"","","LTA_FLASH[10]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_17_LTA1_FLASH,"","","LTA_FLASH[11]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_17_LTA2_FLASH,"","","LTA_FLASH[12]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_17_LTW1_FLASH,"","","LTW_FLASH[11]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_18_LTA_FLASH,"","","LTA_FLASH[13]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_19_LTA_FLASH,"","","LTA_FLASH[14]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_20_LTA_FLASH,"","","LTA_FLASH[15]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_20_LTW_FLASH,"","","LTW_FLASH[15]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_23_LTA1_FLASH,"","","LTA_FLASH[17]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_23_LTA2_FLASH,"","","LTA_FLASH[88]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_23_LTA_FLASH,"","","LTA_FLASH[16]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_25_LTA_FLASH,"","","LTA_FLASH[18]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_27_LTA1_FLASH,"","","LTA_FLASH[19]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_27_LTA2_FLASH,"","","LTA_FLASH[20]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_27_LTA3_FLASH,"","","LTA_FLASH[21]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_27_LTA4_FLASH,"","","LTA_FLASH[22]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_27_LTA5_FLASH,"","","LTA_FLASH[23]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_28_LTA1_FLASH,"","","LTA_FLASH[24]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_28_LTA2_FLASH,"","","LTA_FLASH[25]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_28_LTA3_FLASH,"","","LTA_FLASH[26]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_28_LTA4_FLASH,"","","LTA_FLASH[27]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_28_LTW1_FLASH,"","","LTW_FLASH[24]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_29_LTA1_FLASH,"","","LTA_FLASH[28]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_29_LTA2_FLASH,"","","LTA_FLASH[29]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_29_LTA3_FLASH,"","","LTA_FLASH[30]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_29_LTA4_FLASH,"","","LTA_FLASH[31]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_30_LTA1_FLASH,"","","LTA_FLASH[32]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_30_LTA2_FLASH,"","","LTA_FLASH[33]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_30_LTA3_FLASH,"","","LTA_FLASH[34]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_30_LTA4_FLASH,"","","LTA_FLASH[35]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_30_LTW1_FLASH,"","","LTW_FLASH[32]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_34_LTA_FLASH,"","","LTA_FLASH[36]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_BM1_38_LTA_FLASH,"","","LTA_FLASH[37]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_C2T_13_LTA_FLASH,"","","LTA_FLASH[44]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_C2T_17_LTA_FLASH,"","","LTA_FLASH[45]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_01_LTA1_FLASH,"","","LTA_FLASH[68]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_01_LTA2_FLASH,"","","LTA_FLASH[69]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_01_LTA3_FLASH,"","","LTA_FLASH[70]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_02_LTA1_FLASH,"","","LTA_FLASH[71]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_02_LTA2_FLASH,"","","LTA_FLASH[72]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_02_LTA3_FLASH,"","","LTA_FLASH[73]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_05_LTA_FLASH,"","","LTA_FLASH[74]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_09_LTA_FLASH,"","","LTA_FLASH[75]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_11_LTA_FLASH,"","","LTA_FLASH[76]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_12_LTA_FLASH,"","","LTA_FLASH[77]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_16_LTA_FLASH,"","","LTA_FLASH[78]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_20_LTA_FLASH,"","","LTA_FLASH[79]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL1T_24_LTA_FLASH,"","","LTA_FLASH[80]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL2T_01_LTA1_FLASH,"","","LTA_FLASH[46]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL2T_01_LTA2_FLASH,"","","LTA_FLASH[47]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL2T_02_LTA1_FLASH,"","","LTA_FLASH[48]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL2T_02_LTA2_FLASH,"","","LTA_FLASH[49]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL2T_02_LTA3_FLASH,"","","LTA_FLASH[50]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL2T_04_LTA_FLASH,"","","LTA_FLASH[51]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL2T_05_LTA1_FLASH,"","","LTA_FLASH[52]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL2T_05_LTA2_FLASH,"","","LTA_FLASH[53]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL2T_09_LTA_FLASH,"","","LTA_FLASH[54]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL3T_01_LTA1_FLASH,"","","LTA_FLASH[55]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL3T_01_LTA2_FLASH,"","","LTA_FLASH[56]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL3T_02_LTA1_FLASH,"","","LTA_FLASH[57]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL3T_02_LTA2_FLASH,"","","LTA_FLASH[58]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL3T_02_LTA3_FLASH,"","","LTA_FLASH[59]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL3T_02_LTA4_FLASH,"","","LTA_FLASH[60]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_CL3T_04_LTA_FLASH,"","","LTA_FLASH[61]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_HX1T_10_LTA_FLASH,"","","LTA_FLASH[81]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O2T_04_LTA_FLASH,"","","LTA_FLASH[38]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O2T_06_LTA_FLASH,"","","LTA_FLASH[39]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O2T_10_LTA_FLASH,"","","LTA_FLASH[40]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O2T_12_LTA_FLASH,"","","LTA_FLASH[41]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O2T_14_LTA_FLASH,"","","LTA_FLASH[42]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O2T_18_LTA_FLASH,"","","LTA_FLASH[43]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O3T_17_LTA_FLASH,"","","LTA_FLASH[82]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O3T_19_LTA1_FLASH,"","","LTA_FLASH[83]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O3T_19_LTA2_FLASH,"","","LTA_FLASH[84]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O4T_06_LTA_FLASH,"","","LTA_FLASH[62]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O4T_10_LTA_FLASH,"","","LTA_FLASH[63]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O4T_16_LTA_FLASH,"","","LTA_FLASH[85]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O4T_19_LTA1_FLASH,"","","LTA_FLASH[86]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O4T_19_LTA2_FLASH,"","","LTA_FLASH[87]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O4T_21_LTA1_FLASH,"","","LTA_FLASH[86]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_O4T_21_LTA2_FLASH,"","","LTA_FLASH[87]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_T5T_09_LTA_FLASH,"","","LTA_FLASH[65]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_XO1_01_LTA_FLASH,"","","LTA_FLASH[64]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_XO2_02_LTA_FLASH,"","","LTA_FLASH[66]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,CS_XO2_05_LTA_FLASH,"","","LTA_FLASH[67]","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,DIV,"","DIV[3]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,DIVx,"","DIVx[3]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,EPB_ONS,"","BOOL[128]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,ES_Zone,"","ES_Zone[31]","","(Constant := false, ExternalAccess := Read Only)"
ALIAS,,EZ_30100,"","","ES_Zone[1]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30101,"","","ES_Zone[7]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30102,"","","ES_Zone[8]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30103,"","","ES_Zone[9]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30200,"","","ES_Zone[2]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30201,"","","ES_Zone[10]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30202,"","","ES_Zone[11]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30203,"","","ES_Zone[12]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30300,"","","ES_Zone[3]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30301,"","","ES_Zone[16]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30303,"","","ES_Zone[18]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30304,"","","ES_Zone[19]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30305,"","","ES_Zone[20]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30306,"","","ES_Zone[21]","(ExternalAccess := Read Only)"
ALIAS,,EZ_30307,"","","ES_Zone[15]","(ExternalAccess := Read Only)"
ALIAS,,EZ_31600,"","","ES_Zone[4]","(ExternalAccess := Read Only)"
ALIAS,,EZ_A3283,"","","ES_Zone[17]","(ExternalAccess := Read Only)"
ALIAS,,EZ_A32A3,"","","ES_Zone[13]","(ExternalAccess := Read Only)"
ALIAS,,EZ_A32B3,"","","ES_Zone[14]","(ExternalAccess := Read Only)"
ALIAS,,EZ_BM1_ECR_1,"","","ES_Zone[0]","(ExternalAccess := Read Only)"
ALIAS,,EZ_W12_1CR,"","","ES_Zone[23]","(ExternalAccess := Read Only)"
ALIAS,,EZ_W15_1CR,"","","ES_Zone[22]","(ExternalAccess := Read Only)"
ALIAS,,EZ_ZONE_1,"","","ES_Zone[5]","(ExternalAccess := Read Only)"
ALIAS,,EZ_ZONE_2,"","","ES_Zone[6]","(ExternalAccess := Read Only)"
TAG,,F_ATR,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_BDS,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,F_BM1_01_CS_E_STOP,"MTR/BM1-01 CS E-Stop Active","","F_CS1A[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_01_CS_E_STOP_RESET,"MTR/BM1-01 CS E-Stop Reset","","F_CS1A[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_01_CTCTR_FAULT,"MTR/BM1-01 Contactor Fault","","F_C[8].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_01_ENCODER_FAULT,"MTR/BM1-01 Encoder Fault","","F_C[8].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_01_MOL,"MTR/BM1-01 Motor Overload","","F_C[8].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_01_MSD_OFF,"MTR/BM1-01 Disconnect Off","","F_C[8].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_01_OUTSERV,"MTR/BM1-01 Out of Service","","F_C[8].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_01_OVRIDE,"MTR/BM1-01 HMI Override","","F_C[8].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_01_VFD_FAULT,"MTR/BM1-01 VFD Fault","","F_C[8].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_02_CS_E_STOP,"MTR/BM1-02 CS E-Stop Active","","F_CS1A[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_02_CS_E_STOP_RESET,"MTR/BM1-02 CS E-Stop Reset","","F_CS1A[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_02_CTCTR_FAULT,"MTR/BM1-02 Contactor Fault","","F_C[7].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_02_ENCODER_FAULT,"MTR/BM1-02 Encoder Fault","","F_C[7].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_02_MOL,"MTR/BM1-02 Motor Overload","","F_C[7].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_02_MSD_OFF,"MTR/BM1-02 Disconnect Off","","F_C[8].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_02_OUTSERV,"MTR/BM1-02 Out of Service","","F_C[8].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_02_OVRIDE,"MTR/BM1-02 HMI Override","","F_C[8].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_02_VFD_FAULT,"MTR/BM1-02 VFD Fault","","F_C[7].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_03_CS_E_STOP,"MTR/BM1-03 CS E-Stop Active","","F_CS1A[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_03_CS_E_STOP_RESET,"MTR/BM1-03 CS E-Stop Reset","","F_CS1A[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_03_CTCTR_FAULT,"MTR/BM1-03 Contactor Fault","","F_C[7].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_03_ENCODER_FAULT,"MTR/BM1-03 Encoder Fault","","F_C[7].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_03_MOL,"MTR/BM1-03 Motor Overload","","F_C[7].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_03_MSD_OFF,"MTR/BM1-03 Disconnect Off","","F_C[7].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_03_OUTSERV,"MTR/BM1-03 Out of Service","","F_C[7].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_03_OVRIDE,"MTR/BM1-03 HMI Override","","F_C[7].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_03_VFD_FAULT,"MTR/BM1-03 VFD Fault","","F_C[7].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_04_CTCTR_FAULT,"MTR/BM1-04 Contactor Fault","","F_C[7].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_04_ENCODER_FAULT,"MTR/BM1-04 Encoder Fault","","F_C[7].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_04_MOL,"MTR/BM1-04 Motor Overload","","F_C[7].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_04_MSD_OFF,"MTR/BM1-04 Disconnect Off","","F_C[7].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_04_OUTSERV,"MTR/BM1-04 Out of Service","","F_C[7].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_04_OVRIDE,"MTR/BM1-04 HMI Override","","F_C[7].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_04_VFD_FAULT,"MTR/BM1-04 VFD Fault","","F_C[7].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_05_CTCTR_FAULT,"MTR/BM1-05 Contactor Fault","","F_C[7].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_05_ENCODER_FAULT,"MTR/BM1-05 Encoder Fault","","F_C[7].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_05_MOL,"MTR/BM1-05 Motor Overload","","F_C[7].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_05_MSD_OFF,"MTR/BM1-05 Disconnect Off","","F_C[7].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_05_OUTSERV,"MTR/BM1-05 Out of Service","","F_C[7].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_05_OVRIDE,"MTR/BM1-05 HMI Override","","F_C[7].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_05_VFD_FAULT,"MTR/BM1-05 VFD Fault","","F_C[7].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_CS_E_STOP,"MTR/BM1-06 CS E-Stop Active","","F_CS1A[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_CS_E_STOP_RESET,"MTR/BM1-06 CS E-Stop Reset","","F_CS1A[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_CTCTR_FAULT,"MTR/BM1-06 Contactor Fault","","F_C[7].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_ENCODER_FAULT,"MTR/BM1-06 Encoder Fault","","F_C[7].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_MOL,"MTR/BM1-06 Motor Overload","","F_C[7].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_MSD_OFF,"MTR/BM1-06 Disconnect Off","","F_C[7].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_OUTSERV,"MTR/BM1-06 Out of Service","","F_C[7].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_OVRIDE,"MTR/BM1-06 HMI Override","","F_C[7].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_PE1_JAMMED,"MTR/BM1-06 PE-A Jam","","F_PE[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_PE1_JAMMED1,"MTR/BM1-06 PE1 Jam","","F_PE[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_PE2_OVERHEIGHT,"MTR/BM1-06 PE-B Overheight","","F_OH[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_PE3_OVERHEIGHT,"MTR/BM1-06 PE3 Overheight","","F_OH[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_06_VFD_FAULT,"MTR/BM1-06 VFD Fault","","F_C[7].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_07_CS_E_STOP,"MTR/BM1-07 CS E-Stop Active","","F_CS2A[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_07_CS_E_STOP_RESET,"MTR/BM1-07 CS E-Stop Reset","","F_CS2A[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_07_CTCTR_FAULT,"MTR/BM1-07 Contactor Fault","","F_C[6].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_07_ENCODER_FAULT,"MTR/BM1-07 Encoder Fault","","F_C[6].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_07_MOL,"MTR/BM1-07 Motor Overload","","F_C[6].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_07_MSD_OFF,"MTR/BM1-07 Disconnect Off","","F_C[6].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_07_OUTSERV,"MTR/BM1-07 Out of Service","","F_C[6].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_07_OVRIDE,"MTR/BM1-07 HMI Override","","F_C[6].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_07_PE_JAMMED,"MTR/BM1-07 PE Jam","","F_PE[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_07_VFD_FAULT,"MTR/BM1-07 VFD Fault","","F_C[6].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_08_CTCTR_FAULT,"MTR/BM1-08 Contactor Fault","","F_C[6].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_08_ENCODER_FAULT,"MTR/BM1-08 Encoder Fault","","F_C[6].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_08_MOL,"MTR/BM1-08 Motor Overload","","F_C[6].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_08_MSD_OFF,"MTR/BM1-08 Disconnect Off","","F_C[6].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_08_OUTSERV,"MTR/BM1-08 Out of Service","","F_C[6].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_08_OVRIDE,"MTR/BM1-08 HMI Override","","F_C[6].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_08_PE_JAMMED,"MTR/BM1-08 PE Jam","","F_PE[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_08_VFD_FAULT,"MTR/BM1-08 VFD Fault","","F_C[6].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_09_CTCTR_FAULT,"MTR/BM1-09 Contactor Fault","","F_C[6].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_09_ENCODER_FAULT,"MTR/BM1-09 Encoder Fault","","F_C[6].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_09_MOL,"MTR/BM1-09 Motor Overload","","F_C[6].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_09_MSD_OFF,"MTR/BM1-09 Disconnect Off","","F_C[6].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_09_OUTSERV,"MTR/BM1-09 Out of Service","","F_C[6].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_09_OVRIDE,"MTR/BM1-09 HMI Override","","F_C[6].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_09_PE_JAMMED,"MTR/BM1-09 PE Jam","","F_PE[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_09_VFD_FAULT,"MTR/BM1-09 VFD Fault","","F_C[6].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_10_CTCTR_FAULT,"MTR/BM1-10 Contactor Fault","","F_C[6].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_10_ENCODER_FAULT,"MTR/BM1-10 Encoder Fault","","F_C[6].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_10_MOL,"MTR/BM1-10 Motor Overload","","F_C[6].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_10_MSD_OFF,"MTR/BM1-10 Disconnect Off","","F_C[6].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_10_OUTSERV,"MTR/BM1-10 Out of Service","","F_C[6].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_10_OVRIDE,"MTR/BM1-10 HMI Override","","F_C[6].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_10_PE_JAMMED,"MTR/BM1-10 PE Jam","","F_PE[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_10_VFD_FAULT,"MTR/BM1-10 VFD Fault","","F_C[6].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_11_CTCTR_FAULT,"MTR/BM1-11 Contactor Fault","","F_C[5].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_11_ENCODER_FAULT,"MTR/BM1-11 Encoder Fault","","F_C[6].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_11_MOL,"MTR/BM1-11 Motor Overload","","F_C[5].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_11_MSD_OFF,"MTR/BM1-11 Disconnect Off","","F_C[6].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_11_OUTSERV,"MTR/BM1-11 Out of Service","","F_C[6].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_11_OVRIDE,"MTR/BM1-11 HMI Override","","F_C[6].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_11_PE_JAMMED,"MTR/BM1-11 PE Jam","","F_PE[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_11_VFD_FAULT,"MTR/BM1-11 VFD Fault","","F_C[5].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_12_CTCTR_FAULT,"MTR/BM1-12 Contactor Fault","","F_C[5].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_12_ENCODER_FAULT,"MTR/BM1-12 Encoder Fault","","F_C[5].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_12_MOL,"MTR/BM1-12 Motor Overload","","F_C[5].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_12_MSD_OFF,"MTR/BM1-12 Disconnect Off","","F_C[5].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_12_OUTSERV,"MTR/BM1-12 Out of Service","","F_C[5].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_12_OVRIDE,"MTR/BM1-12 HMI Override","","F_C[5].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_12_PE_JAMMED,"MTR/BM1-12 PE Jam","","F_PE[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_12_VFD_FAULT,"MTR/BM1-12 VFD Fault","","F_C[5].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_13_CS_E_STOP,"MTR/BM1-13 CS E-Stop Active","","F_CS3A[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_13_CS_E_STOP_RESET,"MTR/BM1-13 CS E-Stop Reset","","F_CS3A[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_13_CTCTR_FAULT,"MTR/BM1-13 Contactor Fault","","F_C[5].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_13_ENCODER_FAULT,"MTR/BM1-13 Encoder Fault","","F_C[5].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_13_MOL,"MTR/BM1-13 Motor Overload","","F_C[5].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_13_MSD_OFF,"MTR/BM1-13 Disconnect Off","","F_C[5].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_13_OUTSERV,"MTR/BM1-13 Out of Service","","F_C[5].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_13_OVRIDE,"MTR/BM1-13 HMI Override","","F_C[5].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_13_PE_JAMMED,"MTR/BM1-13 PE Jam","","F_PE[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_13_VFD_FAULT,"MTR/BM1-13 VFD Fault","","F_C[5].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_CS1_E_STOP,"MTR/BM1-14 CS-A E-Stop Active","","F_CS1A[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_CS1_E_STOP1,"MTR/BM1-14 CS1 E-Stop Active","","F_CS1A[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_CS1_E_STOP_RESET,"MTR/BM1-14 CS-A E-Stop Reset","","F_CS1A[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_CS1_E_STOP_RESET1,"MTR/BM1-14 CS1 E-Stop Reset","","F_CS1A[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_CS2_E_STOP,"MTR/BM1-14 CS-B E-Stop Active","","F_CS1A[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_CS2_E_STOP1,"MTR/BM1-14 CS2 E-Stop Active","","F_CS1A[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_CS2_E_STOP_RESET,"MTR/BM1-14 CS-B E-Stop Reset","","F_CS1A[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_CS2_E_STOP_RESET1,"MTR/BM1-14 CS2 E-Stop Reset","","F_CS1A[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_CTCTR_FAULT,"MTR/BM1-14 Contactor Fault","","F_C[5].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_ENCODER_FAULT,"MTR/BM1-14 Encoder Fault","","F_C[5].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_MOL,"MTR/BM1-14 Motor Overload","","F_C[5].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_MSD_OFF,"MTR/BM1-14 Disconnect Off","","F_C[5].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_OUTSERV,"MTR/BM1-14 Out of Service","","F_C[5].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_OVRIDE,"MTR/BM1-14 HMI Override","","F_C[5].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_PE1_JAMMED,"MTR/BM1-14 PE-A Jam","","F_PE[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_PE1_JAMMED1,"MTR/BM1-14 PE1 Jam","","F_PE[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_PE2_JAMMED,"MTR/BM1-14 PE-B Jam","","F_PE[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_PE2_JAMMED1,"MTR/BM1-14 PE2 Jam","","F_PE[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_14_VFD_FAULT,"MTR/BM1-14 VFD Fault","","F_C[5].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_15_CS_E_STOP,"MTR/BM1-15 CS E-Stop Active","","F_CS1A[0].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_15_CS_E_STOP_RESET,"MTR/BM1-15 CS E-Stop Reset","","F_CS1A[0].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_15_CTCTR_FAULT,"MTR/BM1-15 Contactor Fault","","F_C[5].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_15_ENCODER_FAULT,"MTR/BM1-15 Encoder Fault","","F_C[5].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_15_MOL,"MTR/BM1-15 Motor Overload","","F_C[5].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_15_MSD_OFF,"MTR/BM1-15 Disconnect Off","","F_C[5].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_15_OUTSERV,"MTR/BM1-15 Out of Service","","F_C[5].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_15_OVRIDE,"MTR/BM1-15 HMI Override","","F_C[5].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_15_PE_JAMMED,"MTR/BM1-15 PE Jam","","F_PE[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_15_VFD_FAULT,"MTR/BM1-15 VFD Fault","","F_C[5].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_CS1_E_STOP,"MTR/BM1-16 CS-A E-Stop Active","","F_CS1A[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_CS1_E_STOP1,"MTR/BM1-16 CS1 E-Stop Active","","F_CS1A[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_CS1_E_STOP_RESET,"MTR/BM1-16 CS-A E-Stop Reset","","F_CS1A[0].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_CS1_E_STOP_RESET1,"MTR/BM1-16 CS1 E-Stop Reset","","F_CS1A[0].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_CS2_E_STOP,"MTR/BM1-16 CS-B E-Stop Active","","F_CS1A[0].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_CS2_E_STOP1,"MTR/BM1-16 CS2 E-Stop Active","","F_CS1A[0].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_CS2_E_STOP_RESET,"MTR/BM1-16 CS-B E-Stop Reset","","F_CS1A[0].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_CS2_E_STOP_RESET1,"MTR/BM1-16 CS2 E-Stop Reset","","F_CS1A[0].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_CTCTR_FAULT,"MTR/BM1-16 Contactor Fault","","F_C[4].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_ENCODER_FAULT,"MTR/BM1-16 Encoder Fault","","F_C[4].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_MOL,"MTR/BM1-16 Motor Overload","","F_C[4].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_MSD_OFF,"MTR/BM1-16 Disconnect Off","","F_C[4].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_OUTSERV,"MTR/BM1-16 Out of Service","","F_C[4].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_OVRIDE,"MTR/BM1-16 HMI Override","","F_C[5].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_PE_JAMMED,"MTR/BM1-16 PE Jam","","F_PE[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_16_VFD_FAULT,"MTR/BM1-16 VFD Fault","","F_C[4].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_CS1_E_STOP,"MTR/BM1-17 CS-A E-Stop Active","","F_CS1A[0].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_CS1_E_STOP1,"MTR/BM1-17 CS1 E-Stop Active","","F_CS1A[0].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_CS1_E_STOP_RESET,"MTR/BM1-17 CS-A E-Stop Reset","","F_CS1A[0].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_CS1_E_STOP_RESET1,"MTR/BM1-17 CS1 E-Stop Reset","","F_CS1A[0].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_CS2_E_STOP,"MTR/BM1-17 CS-B E-Stop Active","","F_CS2A[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_CS2_E_STOP1,"MTR/BM1-17 CS2 E-Stop Active","","F_CS2A[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_CS2_E_STOP_RESET,"MTR/BM1-17 CS-B E-Stop Reset","","F_CS2A[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_CS2_E_STOP_RESET1,"MTR/BM1-17 CS2 E-Stop Reset","","F_CS2A[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_CTCTR_FAULT,"MTR/BM1-17 Contactor Fault","","F_C[4].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_ENCODER_FAULT,"MTR/BM1-17 Encoder Fault","","F_C[4].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_MOL,"MTR/BM1-17 Motor Overload","","F_C[4].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_MSD_OFF,"MTR/BM1-17 Disconnect Off","","F_C[4].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_OUTSERV,"MTR/BM1-17 Out of Service","","F_C[4].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_OVRIDE,"MTR/BM1-17 HMI Override","","F_C[4].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_PE_JAMMED,"MTR/BM1-17 PE Jam","","F_PE[0].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_17_VFD_FAULT,"MTR/BM1-17 VFD Fault","","F_C[4].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_18_CS_E_STOP,"MTR/BM1-18 CS E-Stop Active","","F_CS1A[0].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_18_CS_E_STOP_RESET,"MTR/BM1-18 CS E-Stop Reset","","F_CS1A[0].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_18_CTCTR_FAULT,"MTR/BM1-18 Contactor Fault","","F_C[4].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_18_ENCODER_FAULT,"MTR/BM1-18 Encoder Fault","","F_C[4].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_18_MOL,"MTR/BM1-18 Motor Overload","","F_C[4].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_18_MSD_OFF,"MTR/BM1-18 Disconnect Off","","F_C[4].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_18_OUTSERV,"MTR/BM1-18 Out of Service","","F_C[4].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_18_OVRIDE,"MTR/BM1-18 HMI Override","","F_C[4].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_18_PE_JAMMED,"MTR/BM1-18 PE Jam","","F_PE[0].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_18_VFD_FAULT,"MTR/BM1-18 VFD Fault","","F_C[4].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_CS_E_STOP,"MTR/BM1-19 CS E-Stop Active","","F_CS1A[0].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_CS_E_STOP_RESET,"MTR/BM1-19 CS E-Stop Reset","","F_CS1A[0].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_CTCTR_FAULT,"MTR/BM1-19 Contactor Fault","","F_C[4].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_ENCODER_FAULT,"MTR/BM1-19 Encoder Fault","","F_C[4].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_MOL,"MTR/BM1-19 Motor Overload","","F_C[4].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_MSD_OFF,"MTR/BM1-19 Disconnect Off","","F_C[4].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_OUTSERV,"MTR/BM1-19 Out of Service","","F_C[4].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_OVRIDE,"MTR/BM1-19 HMI Override","","F_C[4].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_PE1_JAMMED,"MTR/BM1-19 PE-A Jam","","F_PE[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_PE1_JAMMED1,"MTR/BM1-19 PE1 Jam","","F_PE[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_PE2_OVERHEIGHT,"MTR/BM1-19 PE-B Overheight","","F_OH[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_PE3_OVERHEIGHT,"MTR/BM1-19 PE3 Overheight","","F_OH[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_19_VFD_FAULT,"MTR/BM1-19 VFD Fault","","F_C[4].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_20_CS_E_STOP,"MTR/BM1-20 CS E-Stop Active","","F_CS4A[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_20_CS_E_STOP_RESET,"MTR/BM1-20 CS E-Stop Reset","","F_CS4A[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_20_CTCTR_FAULT,"MTR/BM1-20 Contactor Fault","","F_C[4].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_20_ENCODER_FAULT,"MTR/BM1-20 Encoder Fault","","F_C[4].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_20_MOL,"MTR/BM1-20 Motor Overload","","F_C[3].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_20_MSD_OFF,"MTR/BM1-20 Disconnect Off","","F_C[4].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_20_OUTSERV,"MTR/BM1-20 Out of Service","","F_C[4].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_20_OVRIDE,"MTR/BM1-20 HMI Override","","F_C[4].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_20_PE_JAMMED,"MTR/BM1-20 PE Jam","","F_PE[0].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_20_VFD_FAULT,"MTR/BM1-20 VFD Fault","","F_C[3].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_21_CTCTR_FAULT,"MTR/BM1-21 Contactor Fault","","F_C[3].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_21_ENCODER_FAULT,"MTR/BM1-21 Encoder Fault","","F_C[3].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_21_MOL,"MTR/BM1-21 Motor Overload","","F_C[3].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_21_MSD_OFF,"MTR/BM1-21 Disconnect Off","","F_C[3].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_21_OUTSERV,"MTR/BM1-21 Out of Service","","F_C[3].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_21_OVRIDE,"MTR/BM1-21 HMI Override","","F_C[3].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_21_PE_JAMMED,"MTR/BM1-21 PE Jam","","F_PE[0].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_21_VFD_FAULT,"MTR/BM1-21 VFD Fault","","F_C[3].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_22_CTCTR_FAULT,"MTR/BM1-22 Contactor Fault","","F_C[3].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_22_ENCODER_FAULT,"MTR/BM1-22 Encoder Fault","","F_C[3].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_22_MOL,"MTR/BM1-22 Motor Overload","","F_C[3].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_22_MSD_OFF,"MTR/BM1-22 Disconnect Off","","F_C[3].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_22_OUTSERV,"MTR/BM1-22 Out of Service","","F_C[3].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_22_OVRIDE,"MTR/BM1-22 HMI Override","","F_C[3].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_22_PE_JAMMED,"MTR/BM1-22 PE Jam","","F_PE[0].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_22_VFD_FAULT,"MTR/BM1-22 VFD Fault","","F_C[3].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_CS1_E_STOP,"MTR/BM1-23 CS-A E-Stop Active","","F_CS1A[0].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_CS1_E_STOP1,"MTR/BM1-23 CS1 E-Stop Active","","F_CS1A[0].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_CS1_E_STOP_RESET,"MTR/BM1-23 CS-A E-Stop Reset","","F_CS1A[0].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_CS1_E_STOP_RESET1,"MTR/BM1-23 CS1 E-Stop Reset","","F_CS1A[0].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_CS2_E_STOP,"MTR/BM1-23 CS-B E-Stop Active","","F_CS04[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_CS2_E_STOP1,"MTR/BM1-23 CS2 E-Stop Active","","F_CS04[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_CS2_E_STOP_RESET,"MTR/BM1-23 CS-B E-Stop Reset","","F_CS04[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_CS2_E_STOP_RESET1,"MTR/BM1-23 CS2 E-Stop Reset","","F_CS04[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_CTCTR_FAULT,"MTR/BM1-23 Contactor Fault","","F_C[3].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_ENCODER_FAULT,"MTR/BM1-23 Encoder Fault","","F_C[3].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_MOL,"MTR/BM1-23 Motor Overload","","F_C[3].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_MSD_OFF,"MTR/BM1-23 Disconnect Off","","F_C[3].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_OUTSERV,"MTR/BM1-23 Out of Service","","F_C[3].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_OVRIDE,"MTR/BM1-23 HMI Override","","F_C[3].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_PE1_JAMMED,"MTR/BM1-23 PE-A Jam","","F_PE[0].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_PE1_JAMMED1,"MTR/BM1-23 PE1 Jam","","F_PE[0].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_PE2_JAMMED,"MTR/BM1-23 PE-B Jam","","F_PE[0].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_PE2_JAMMED1,"MTR/BM1-23 PE2 Jam","","F_PE[0].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_PE3_JAMMED,"MTR/BM1-23 PE-C Jam","","F_PE[0].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_PE3_JAMMED1,"MTR/BM1-23 PE3 Jam","","F_PE[0].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_23_VFD_FAULT,"MTR/BM1-23 VFD Fault","","F_C[3].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_24_CTCTR_FAULT,"MTR/BM1-24 Contactor Fault","","F_C[3].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_24_ENCODER_FAULT,"MTR/BM1-24 Encoder Fault","","F_C[3].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_24_MOL,"MTR/BM1-24 Motor Overload","","F_C[3].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_24_MSD_OFF,"MTR/BM1-24 Disconnect Off","","F_C[3].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_24_OUTSERV,"MTR/BM1-24 Out of Service","","F_C[3].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_24_OVRIDE,"MTR/BM1-24 HMI Override","","F_C[3].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_24_PE_JAMMED,"MTR/BM1-24 PE Jam","","F_PE[0].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_24_VFD_FAULT,"MTR/BM1-24 VFD Fault","","F_C[3].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_25_CS_E_STOP,"MTR/BM1-25 CS E-Stop Active","","F_CS1A[0].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_25_CS_E_STOP_RESET,"MTR/BM1-25 CS E-Stop Reset","","F_CS1A[0].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_25_CTCTR_FAULT,"MTR/BM1-25 Contactor Fault","","F_C[2].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_25_ENCODER_FAULT,"MTR/BM1-25 Encoder Fault","","F_C[2].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_25_MOL,"MTR/BM1-25 Motor Overload","","F_C[2].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_25_MSD_OFF,"MTR/BM1-25 Disconnect Off","","F_C[2].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_25_OUTSERV,"MTR/BM1-25 Out of Service","","F_C[3].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_25_OVRIDE,"MTR/BM1-25 HMI Override","","F_C[3].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_25_PE_JAMMED,"MTR/BM1-25 PE Jam","","F_PE[0].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_25_VFD_FAULT,"MTR/BM1-25 VFD Fault","","F_C[2].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_26_CTCTR_FAULT,"MTR/BM1-26 Contactor Fault","","F_C[2].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_26_ENCODER_FAULT,"MTR/BM1-26 Encoder Fault","","F_C[2].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_26_MOL,"MTR/BM1-26 Motor Overload","","F_C[2].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_26_MSD_OFF,"MTR/BM1-26 Disconnect Off","","F_C[2].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_26_OUTSERV,"MTR/BM1-26 Out of Service","","F_C[2].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_26_OVRIDE,"MTR/BM1-26 HMI Override","","F_C[2].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_26_PE_JAMMED,"MTR/BM1-26 PE Jam","","F_PE[0].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_26_VFD_FAULT,"MTR/BM1-26 VFD Fault","","F_C[2].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS1_E_STOP,"MTR/BM1-27 CS-A E-Stop Active","","F_CS1A[0].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS1_E_STOP1,"MTR/BM1-27 CS1 E-Stop Active","","F_CS1A[0].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS1_E_STOP_RESET,"MTR/BM1-27 CS-A E-Stop Reset","","F_CS1A[0].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS1_E_STOP_RESET1,"MTR/BM1-27 CS1 E-Stop Reset","","F_CS1A[0].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS2_E_STOP,"MTR/BM1-27 CS-B E-Stop Active","","F_CS1A[0].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS2_E_STOP1,"MTR/BM1-27 CS2 E-Stop Active","","F_CS1A[0].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS2_E_STOP_RESET,"MTR/BM1-27 CS-B E-Stop Reset","","F_CS1A[0].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS2_E_STOP_RESET1,"MTR/BM1-27 CS2 E-Stop Reset","","F_CS1A[0].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS3_E_STOP,"MTR/BM1-27 CS3 E-Stop Active","","F_CS01[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS3_E_STOP1,"MTR/BM1-27 CS-C E-Stop Active","","F_CS01[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS3_E_STOP_RESET,"MTR/BM1-27 CS3 E-Stop Reset","","F_CS01[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS3_E_STOP_RESET1,"MTR/BM1-27 CS-C E-Stop Reset","","F_CS01[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS4_E_STOP,"MTR/BM1-27 CS4 E-Stop Active","","F_CS01[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS4_E_STOP1,"MTR/BM1-27 CS-D E-Stop Active","","F_CS03[0].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS4_E_STOP_RESET,"MTR/BM1-27 CS4 E-Stop Reset","","F_CS01[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS4_E_STOP_RESET1,"MTR/BM1-27 CS-D E-Stop Reset","","F_CS03[0].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS5_E_STOP,"MTR/BM1-27 CS5 E-Stop Active","","F_CS13[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS5_E_STOP1,"MTR/BM1-27 CS-E E-Stop Active","","F_CS13[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS5_E_STOP_RESET,"MTR/BM1-27 CS5 E-Stop Reset","","F_CS13[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CS5_E_STOP_RESET1,"MTR/BM1-27 CS-E E-Stop Reset","","F_CS13[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_CTCTR_FAULT,"MTR/BM1-27 Contactor Fault","","F_C[2].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_ENCODER_FAULT,"MTR/BM1-27 Encoder Fault","","F_C[2].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_MOL,"MTR/BM1-27 Motor Overload","","F_C[2].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_MSD_OFF,"MTR/BM1-27 Disconnect Off","","F_C[2].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_OUTSERV,"MTR/BM1-27 Out of Service","","F_C[2].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_OVRIDE,"MTR/BM1-27 HMI Override","","F_C[2].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_PE1_JAMMED,"MTR/BM1-27 PE-A Jam","","F_PE[0].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_PE1_JAMMED1,"MTR/BM1-27 PE1 Jam","","F_PE[0].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_PE2_JAMMED,"MTR/BM1-27 PE-B Jam","","F_PE[0].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_PE2_JAMMED1,"MTR/BM1-27 PE2 Jam","","F_PE[0].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_27_RUN_FWD,"MTR/BM1-27 Forward Direction","","F_MISC[0].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_BM1_27_RUN_REV,"MTR/BM1-27 Reverse Direction","","F_MISC[0].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_BM1_27_VFD_FAULT,"MTR/BM1-27 VFD Fault","","F_C[2].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS1_E_STOP,"MTR/BM1-28 CS-A E-Stop Active","","F_CS2A[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS1_E_STOP1,"MTR/BM1-28 CS1 E-Stop Active","","F_CS1A[1].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS1_E_STOP_RESET,"MTR/BM1-28 CS-A E-Stop Reset","","F_CS2A[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS1_E_STOP_RESET1,"MTR/BM1-28 CS1 E-Stop Reset","","F_CS1A[1].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS2_E_STOP,"MTR/BM1-28 CS-B E-Stop Active","","F_CS1A[1].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS2_E_STOP1,"MTR/BM1-28 CS2 E-Stop Active","","F_CS1A[1].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS2_E_STOP_RESET,"MTR/BM1-28 CS-B E-Stop Reset","","F_CS1A[1].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS2_E_STOP_RESET1,"MTR/BM1-28 CS2 E-Stop Reset","","F_CS1A[1].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS3_E_STOP,"MTR/BM1-28 CS3 E-Stop Active","","F_CS01[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS3_E_STOP1,"MTR/BM1-28 CS-C E-Stop Active","","F_CS01[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS3_E_STOP_RESET,"MTR/BM1-28 CS3 E-Stop Reset","","F_CS01[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS3_E_STOP_RESET1,"MTR/BM1-28 CS-C E-Stop Reset","","F_CS01[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS4_E_STOP,"MTR/BM1-28 CS4 E-Stop Active","","F_CS13[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS4_E_STOP1,"MTR/BM1-28 CS-D E-Stop Active","","F_CS03[1].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS4_E_STOP_RESET,"MTR/BM1-28 CS4 E-Stop Reset","","F_CS13[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CS4_E_STOP_RESET1,"MTR/BM1-28 CS-D E-Stop Reset","","F_CS03[1].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_CTCTR_FAULT,"MTR/BM1-28 Contactor Fault","","F_C[2].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_ENCODER_FAULT,"MTR/BM1-28 Encoder Fault","","F_C[2].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_MOL,"MTR/BM1-28 Motor Overload","","F_C[2].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_MSD_OFF,"MTR/BM1-28 Disconnect Off","","F_C[2].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_OUTSERV,"MTR/BM1-28 Out of Service","","F_C[2].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_OVRIDE,"MTR/BM1-28 HMI Override","","F_C[2].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_PE1_JAMMED,"MTR/BM1-28 PE-A Jam","","F_PE[0].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_PE1_JAMMED1,"MTR/BM1-28 PE1 Jam","","F_PE[0].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_PE2_JAMMED,"MTR/BM1-28 PE-B Jam","","F_PE[0].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_PE2_JAMMED1,"MTR/BM1-28 PE2 Jam","","F_PE[0].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_28_RUN_FWD,"MTR/BM1-28 Forward Direction","","F_MISC[0].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_BM1_28_RUN_REV,"MTR/BM1-28 Reverse Direction","","F_MISC[0].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_BM1_28_VFD_FAULT,"MTR/BM1-28 VFD Fault","","F_C[2].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS1_E_STOP,"MTR/BM1-29 CS-A E-Stop Active","","F_CS1A[1].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS1_E_STOP1,"MTR/BM1-29 CS1 E-Stop Active","","F_CS01[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS1_E_STOP_RESET,"MTR/BM1-29 CS-A E-Stop Reset","","F_CS1A[1].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS1_E_STOP_RESET1,"MTR/BM1-29 CS1 E-Stop Reset","","F_CS01[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS2_E_STOP,"MTR/BM1-29 CS-B E-Stop Active","","F_CS03[1].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS2_E_STOP1,"MTR/BM1-29 CS2 E-Stop Active","","F_CS1A[1].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS2_E_STOP_RESET,"MTR/BM1-29 CS-B E-Stop Reset","","F_CS03[1].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS2_E_STOP_RESET1,"MTR/BM1-29 CS2 E-Stop Reset","","F_CS1A[1].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS3_E_STOP,"MTR/BM1-29 CS3 E-Stop Active","","F_CS13[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS3_E_STOP1,"MTR/BM1-29 CS-C E-Stop Active","","F_CS13[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS3_E_STOP_RESET,"MTR/BM1-29 CS3 E-Stop Reset","","F_CS13[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS3_E_STOP_RESET1,"MTR/BM1-29 CS-C E-Stop Reset","","F_CS13[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS4_E_STOP,"MTR/BM1-29 CS4 E-Stop Active","","F_CS01[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS4_E_STOP1,"MTR/BM1-29 CS-D E-Stop Active","","F_CS01[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS4_E_STOP_RESET,"MTR/BM1-29 CS4 E-Stop Reset","","F_CS01[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CS4_E_STOP_RESET1,"MTR/BM1-29 CS-D E-Stop Reset","","F_CS01[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_CTCTR_FAULT,"MTR/BM1-29 Contactor Fault","","F_C[2].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_ENCODER_FAULT,"MTR/BM1-29 Encoder Fault","","F_C[2].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_MOL,"MTR/BM1-29 Motor Overload","","F_C[1].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_MSD_OFF,"MTR/BM1-29 Disconnect Off","","F_C[2].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_OUTSERV,"MTR/BM1-29 Out of Service","","F_C[2].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_OVRIDE,"MTR/BM1-29 HMI Override","","F_C[2].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_PE1_JAMMED,"MTR/BM1-29 PE-A Jam","","F_PE[0].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_PE1_JAMMED1,"MTR/BM1-29 PE1 Jam","","F_PE[0].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_PE2_JAMMED,"MTR/BM1-29 PE-B Jam","","F_PE[0].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_PE2_JAMMED1,"MTR/BM1-29 PE2 Jam","","F_PE[0].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_29_RUN_FWD,"MTR/BM1-29 Forward Direction","","F_MISC[0].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_BM1_29_RUN_REV,"MTR/BM1-29 Reverse Direction","","F_MISC[0].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_BM1_29_VFD_FAULT,"MTR/BM1-29 VFD Fault","","F_C[2].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS1_E_STOP,"MTR/BM1-30 CS-A E-Stop Active","","F_CS4A[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS1_E_STOP1,"MTR/BM1-30 CS1 E-Stop Active","","F_CS4A[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS1_E_STOP_RESET,"MTR/BM1-30 CS-A E-Stop Reset","","F_CS4A[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS1_E_STOP_RESET1,"MTR/BM1-30 CS1 E-Stop Reset","","F_CS4A[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS2_E_STOP,"MTR/BM1-30 CS-B E-Stop Active","","F_CS1A[1].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS2_E_STOP1,"MTR/BM1-30 CS2 E-Stop Active","","F_CS13[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS2_E_STOP_RESET,"MTR/BM1-30 CS-B E-Stop Reset","","F_CS1A[1].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS2_E_STOP_RESET1,"MTR/BM1-30 CS2 E-Stop Reset","","F_CS13[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS3_E_STOP,"MTR/BM1-30 CS3 E-Stop Active","","F_CS01[0].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS3_E_STOP1,"MTR/BM1-30 CS-C E-Stop Active","","F_CS01[0].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS3_E_STOP_RESET,"MTR/BM1-30 CS3 E-Stop Reset","","F_CS01[0].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS3_E_STOP_RESET1,"MTR/BM1-30 CS-C E-Stop Reset","","F_CS01[0].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS4_E_STOP,"MTR/BM1-30 CS4 E-Stop Active","","F_CS1A[1].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS4_E_STOP1,"MTR/BM1-30 CS-D E-Stop Active","","F_CS03[1].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS4_E_STOP_RESET,"MTR/BM1-30 CS4 E-Stop Reset","","F_CS1A[1].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CS4_E_STOP_RESET1,"MTR/BM1-30 CS-D E-Stop Reset","","F_CS03[1].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_CTCTR_FAULT,"MTR/BM1-30 Contactor Fault","","F_C[1].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_ENCODER_FAULT,"MTR/BM1-30 Encoder Fault","","F_C[1].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_MOL,"MTR/BM1-30 Motor Overload","","F_C[1].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_MSD_OFF,"MTR/BM1-30 Disconnect Off","","F_C[1].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_OUTSERV,"MTR/BM1-30 Out of Service","","F_C[1].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_OVRIDE,"MTR/BM1-30 HMI Override","","F_C[1].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_PE1_JAMMED,"MTR/BM1-30 PE-A Jam","","F_PE[0].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_PE1_JAMMED1,"MTR/BM1-30 PE1 Jam","","F_PE[0].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_PE2_OVERHEIGHT,"MTR/BM1-30 PE-B Overheight","","F_OH[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_PE3_JAMMED,"MTR/BM1-30 PE-C Jam","","F_PE[0].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_PE3_JAMMED1,"MTR/BM1-30 PE3 Jam","","F_PE[0].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_PE3_OVERHEIGHT,"MTR/BM1-30 PE3 Overheight","","F_OH[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_30_RUN_FWD,"MTR/BM1-30 Forward Direction","","F_MISC[0].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_BM1_30_RUN_REV,"MTR/BM1-30 Reverse Direction","","F_MISC[0].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_BM1_30_VFD_FAULT,"MTR/BM1-30 VFD Fault","","F_C[1].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_31_CTCTR_FAULT,"MTR/BM1-31 Contactor Fault","","F_C[1].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_31_ENCODER_FAULT,"MTR/BM1-31 Encoder Fault","","F_C[1].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_31_MOL,"MTR/BM1-31 Motor Overload","","F_C[1].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_31_MSD_OFF,"MTR/BM1-31 Disconnect Off","","F_C[1].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_31_OUTSERV,"MTR/BM1-31 Out of Service","","F_C[1].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_31_OVRIDE,"MTR/BM1-31 HMI Override","","F_C[1].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_31_PE_JAMMED,"MTR/BM1-31 PE Jam","","F_PE[1].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_31_VFD_FAULT,"MTR/BM1-31 VFD Fault","","F_C[1].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_32_CTCTR_FAULT,"MTR/BM1-32 Contactor Fault","","F_C[1].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_32_ENCODER_FAULT,"MTR/BM1-32 Encoder Fault","","F_C[1].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_32_MOL,"MTR/BM1-32 Motor Overload","","F_C[1].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_32_MSD_OFF,"MTR/BM1-32 Disconnect Off","","F_C[1].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_32_OUTSERV,"MTR/BM1-32 Out of Service","","F_C[1].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_32_OVRIDE,"MTR/BM1-32 HMI Override","","F_C[1].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_32_PE_JAMMED,"MTR/BM1-32 PE Jam","","F_PE[1].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_32_VFD_FAULT,"MTR/BM1-32 VFD Fault","","F_C[1].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_33_CTCTR_FAULT,"MTR/BM1-33 Contactor Fault","","F_C[1].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_33_ENCODER_FAULT,"MTR/BM1-33 Encoder Fault","","F_C[1].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_33_MOL,"MTR/BM1-33 Motor Overload","","F_C[1].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_33_MSD_OFF,"MTR/BM1-33 Disconnect Off","","F_C[1].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_33_OUTSERV,"MTR/BM1-33 Out of Service","","F_C[1].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_33_OVRIDE,"MTR/BM1-33 HMI Override","","F_C[1].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_33_PE_JAMMED,"MTR/BM1-33 PE Jam","","F_PE[1].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_33_VFD_FAULT,"MTR/BM1-33 VFD Fault","","F_C[1].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_34_CS_E_STOP,"MTR/BM1-34 CS E-Stop Active","","F_CS1A[1].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_34_CS_E_STOP_RESET,"MTR/BM1-34 CS E-Stop Reset","","F_CS1A[1].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_34_CTCTR_FAULT,"MTR/BM1-34 Contactor Fault","","F_C[0].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_34_ENCODER_FAULT,"MTR/BM1-34 Encoder Fault","","F_C[0].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_34_MOL,"MTR/BM1-34 Motor Overload","","F_C[0].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_34_MSD_OFF,"MTR/BM1-34 Disconnect Off","","F_C[1].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_34_OUTSERV,"MTR/BM1-34 Out of Service","","F_C[1].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_34_OVRIDE,"MTR/BM1-34 HMI Override","","F_C[1].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_34_PE_JAMMED,"MTR/BM1-34 PE Jam","","F_PE[1].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_34_VFD_FAULT,"MTR/BM1-34 VFD Fault","","F_C[0].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_35_CTCTR_FAULT,"MTR/BM1-35 Contactor Fault","","F_C[0].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_35_ENCODER_FAULT,"MTR/BM1-35 Encoder Fault","","F_C[0].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_35_MOL,"MTR/BM1-35 Motor Overload","","F_C[0].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_35_MSD_OFF,"MTR/BM1-35 Disconnect Off","","F_C[0].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_35_OUTSERV,"MTR/BM1-35 Out of Service","","F_C[0].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_35_OVRIDE,"MTR/BM1-35 HMI Override","","F_C[0].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_35_PE_JAMMED,"MTR/BM1-35 PE Jam","","F_PE[1].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_35_VFD_FAULT,"MTR/BM1-35 VFD Fault","","F_C[0].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_36_CTCTR_FAULT,"MTR/BM1-36 Contactor Fault","","F_C[0].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_36_ENCODER_FAULT,"MTR/BM1-36 Encoder Fault","","F_C[0].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_36_MOL,"MTR/BM1-36 Motor Overload","","F_C[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_36_MSD_OFF,"MTR/BM1-36 Disconnect Off","","F_C[0].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_36_OUTSERV,"MTR/BM1-36 Out of Service","","F_C[0].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_36_OVRIDE,"MTR/BM1-36 HMI Override","","F_C[0].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_36_PE_JAMMED,"MTR/BM1-36 PE Jam","","F_PE[1].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_36_VFD_FAULT,"MTR/BM1-36 VFD Fault","","F_C[0].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_37_CTCTR_FAULT,"MTR/BM1-37 Contactor Fault","","F_C[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_37_ENCODER_FAULT,"MTR/BM1-37 Encoder Fault","","F_C[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_37_MOL,"MTR/BM1-37 Motor Overload","","F_C[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_37_MSD_OFF,"MTR/BM1-37 Disconnect Off","","F_C[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_37_OUTSERV,"MTR/BM1-37 Out of Service","","F_C[0].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_37_OVRIDE,"MTR/BM1-37 HMI Override","","F_C[0].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_37_PE_JAMMED,"MTR/BM1-37 PE Jam","","F_PE[1].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_37_VFD_FAULT,"MTR/BM1-37 VFD Fault","","F_C[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_38_CS_E_STOP,"MTR/BM1-38 CS E-Stop Active","","F_CS1A[1].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_38_CS_E_STOP_RESET,"MTR/BM1-38 CS E-Stop Reset","","F_CS1A[1].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_38_CTCTR_FAULT,"MTR/BM1-38 Contactor Fault","","F_C[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_38_ENCODER_FAULT,"MTR/BM1-38 Encoder Fault","","F_C[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_38_MOL,"MTR/BM1-38 Motor Overload","","F_C[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_38_MSD_OFF,"MTR/BM1-38 Disconnect Off","","F_C[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_38_OUTSERV,"MTR/BM1-38 Out of Service","","F_C[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_38_OVRIDE,"MTR/BM1-38 HMI Override","","F_C[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_38_PE_JAMMED,"MTR/BM1-38 PE Jam","","F_PE[1].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_BM1_38_VFD_FAULT,"MTR/BM1-38 VFD Fault","","F_C[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,F_BSD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_C,"HMI Base Tag Array","DINT[31]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,F_C2T_12_CTCTR_FAULT,"MTR/C2T-12 Contactor Fault","","F_C[12].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_12_ENCODER_FAULT,"MTR/C2T-12 Encoder Fault","","F_C[12].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_12_MOL,"MTR/C2T-12 Motor Overload","","F_C[12].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_12_MSD_OFF,"MTR/C2T-12 Disconnect Off","","F_C[12].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_12_OUTSERV,"MTR/C2T-12 Out of Service","","F_C[12].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_12_OVRIDE,"MTR/C2T-12 HMI Override","","F_C[12].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_12_PE_JAMMED,"MTR/C2T-12 PE Jam","","F_PE[1].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_12_VFD_FAULT,"MTR/C2T-12 VFD Fault","","F_C[12].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_13_CS_E_STOP,"MTR/C2T-13 CS E-Stop Active","","F_CS04[0].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_13_CS_E_STOP_RESET,"MTR/C2T-13 CS E-Stop Reset","","F_CS04[0].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_13_CTCTR_FAULT,"MTR/C2T-13 Contactor Fault","","F_C[12].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_13_ENCODER_FAULT,"MTR/C2T-13 Encoder Fault","","F_C[12].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_13_MOL,"MTR/C2T-13 Motor Overload","","F_C[12].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_13_MSD_OFF,"MTR/C2T-13 Disconnect Off","","F_C[12].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_13_OUTSERV,"MTR/C2T-13 Out of Service","","F_C[12].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_13_OVRIDE,"MTR/C2T-13 HMI Override","","F_C[12].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_13_PE_JAMMED,"MTR/C2T-13 PE Jam","","F_PE[1].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_13_VFD_FAULT,"MTR/C2T-13 VFD Fault","","F_C[12].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_14_CTCTR_FAULT,"MTR/C2T-14 Contactor Fault","","F_C[12].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_14_ENCODER_FAULT,"MTR/C2T-14 Encoder Fault","","F_C[12].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_14_MOL,"MTR/C2T-14 Motor Overload","","F_C[12].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_14_MSD_OFF,"MTR/C2T-14 Disconnect Off","","F_C[12].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_14_OUTSERV,"MTR/C2T-14 Out of Service","","F_C[12].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_14_OVRIDE,"MTR/C2T-14 HMI Override","","F_C[12].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_14_PE_JAMMED,"MTR/C2T-14 PE Jam","","F_PE[1].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_14_VFD_FAULT,"MTR/C2T-14 VFD Fault","","F_C[12].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_15_CTCTR_FAULT,"MTR/C2T-15 Contactor Fault","","F_C[12].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_15_ENCODER_FAULT,"MTR/C2T-15 Encoder Fault","","F_C[12].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_15_MOL,"MTR/C2T-15 Motor Overload","","F_C[12].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_15_MSD_OFF,"MTR/C2T-15 Disconnect Off","","F_C[12].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_15_OUTSERV,"MTR/C2T-15 Out of Service","","F_C[12].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_15_OVRIDE,"MTR/C2T-15 HMI Override","","F_C[12].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_15_PE_JAMMED,"MTR/C2T-15 PE Jam","","F_PE[1].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_15_VFD_FAULT,"MTR/C2T-15 VFD Fault","","F_C[12].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_16_CTCTR_FAULT,"MTR/C2T-16 Contactor Fault","","F_C[11].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_16_ENCODER_FAULT,"MTR/C2T-16 Encoder Fault","","F_C[11].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_16_MOL,"MTR/C2T-16 Motor Overload","","F_C[11].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_16_MSD_OFF,"MTR/C2T-16 Disconnect Off","","F_C[11].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_16_OUTSERV,"MTR/C2T-16 Out of Service","","F_C[11].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_16_OVRIDE,"MTR/C2T-16 HMI Override","","F_C[12].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_16_PE_JAMMED,"MTR/C2T-16 PE Jam","","F_PE[1].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_16_VFD_FAULT,"MTR/C2T-16 VFD Fault","","F_C[11].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_17_CS_E_STOP,"MTR/C2T-17 CS E-Stop Active","","F_CS05[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_17_CS_E_STOP_RESET,"MTR/C2T-17 CS E-Stop Reset","","F_CS05[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_17_CTCTR_FAULT,"MTR/C2T-17 Contactor Fault","","F_C[11].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_17_ENCODER_FAULT,"MTR/C2T-17 Encoder Fault","","F_C[11].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_17_JOG_REVERSE,"MTR/C2T-17 Jog Reverse","","F_MISC[0].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_C2T_17_MOL,"MTR/C2T-17 Motor Overload","","F_C[11].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_17_MSD_OFF,"MTR/C2T-17 Disconnect Off","","F_C[11].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_17_OUTSERV,"MTR/C2T-17 Out of Service","","F_C[11].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_17_OVRIDE,"MTR/C2T-17 HMI Override","","F_C[11].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_17_PE_JAMMED,"MTR/C2T-17 PE Jam","","F_PE[1].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C2T_17_VFD_FAULT,"MTR/C2T-17 VFD Fault","","F_C[11].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_C4_09_ENCODER_FAULT,"MTR/C4-09 Encoder Fault","","F_MISC[0].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,F_CCOM,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_35_CTCTR_FAULT,"MTR/CL12T-35 Contactor Fault","","F_C[30].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_35_ENCODER_FAULT,"MTR/CL12T-35 Encoder Fault","","F_C[30].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_35_MOL,"MTR/CL12T-35 Motor Overload","","F_C[30].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_35_MSD_OFF,"MTR/CL12T-35 Disconnect Off","","F_C[30].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_35_OUTSERV,"MTR/CL12T-35 Out of Service","","F_C[30].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_35_OVRIDE,"MTR/CL12T-35 HMI Override","","F_C[30].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_35_PE_JAMMED,"MTR/CL12T-35 PE Jam","","F_PE[4].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_35_VFD_FAULT,"MTR/CL12T-35 VFD Fault","","F_C[30].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_36_CS_E_STOP,"MTR/CL12T-36 CS E-Stop Active","","F_CS05[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_36_CS_E_STOP_RESET,"MTR/CL12T-36 CS E-Stop Reset","","F_CS05[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_36_CTCTR_FAULT,"MTR/CL12T-36 Contactor Fault","","F_C[30].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_36_ENCODER_FAULT,"MTR/CL12T-36 Encoder Fault","","F_C[30].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_36_JOG_REVERSE,"MTR/CL12T-36 Jog Reverse","","F_MISC[0].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_CL12T_36_MOL,"MTR/CL12T-36 Motor Overload","","F_C[30].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_36_MSD_OFF,"MTR/CL12T-36 Disconnect Off","","F_C[30].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_36_OUTSERV,"MTR/CL12T-36 Out of Service","","F_C[30].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_36_OVRIDE,"MTR/CL12T-36 HMI Override","","F_C[30].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_36_PE_JAMMED,"MTR/CL12T-36 PE Jam","","F_PE[4].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL12T_36_VFD_FAULT,"MTR/CL12T-36 VFD Fault","","F_C[30].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CS1_E_STOP,"MTR/CL1T-01 CS-A E-Stop Active","","F_CS03[0].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CS1_E_STOP1,"MTR/CL1T-01 CS1 E-Stop Active","","F_CS03[0].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CS1_E_STOP_RESET,"MTR/CL1T-01 CS-A E-Stop Reset","","F_CS03[0].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CS1_E_STOP_RESET1,"MTR/CL1T-01 CS1 E-Stop Reset","","F_CS03[0].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CS2_E_STOP,"MTR/CL1T-01 CS-B E-Stop Active","","F_CS03[0].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CS2_E_STOP1,"MTR/CL1T-01 CS2 E-Stop Active","","F_CS03[0].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CS2_E_STOP_RESET,"MTR/CL1T-01 CS-B E-Stop Reset","","F_CS03[0].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CS2_E_STOP_RESET1,"MTR/CL1T-01 CS2 E-Stop Reset","","F_CS03[0].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CS3_E_STOP,"MTR/CL1T-01 CS3 E-Stop Active","","F_CS03[0].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CS3_E_STOP1,"MTR/CL1T-01 CS-C E-Stop Active","","F_CS03[0].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CS3_E_STOP_RESET,"MTR/CL1T-01 CS3 E-Stop Reset","","F_CS03[0].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CS3_E_STOP_RESET1,"MTR/CL1T-01 CS-C E-Stop Reset","","F_CS03[0].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_CTCTR_FAULT,"MTR/CL1T-01 Contactor Fault","","F_C[26].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_ENCODER_FAULT,"MTR/CL1T-01 Encoder Fault","","F_C[26].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_MOL,"MTR/CL1T-01 Motor Overload","","F_C[26].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_MSD_OFF,"MTR/CL1T-01 Disconnect Off","","F_C[26].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_OUTSERV,"MTR/CL1T-01 Out of Service","","F_C[26].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_OVRIDE,"MTR/CL1T-01 HMI Override","","F_C[26].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_PE_JAMMED,"MTR/CL1T-01 PE Jam","","F_PE[3].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_01_VFD_FAULT,"MTR/CL1T-01 VFD Fault","","F_C[26].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CS1_E_STOP,"MTR/CL1T-02 CS-A E-Stop Active","","F_CS04[1].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CS1_E_STOP1,"MTR/CL1T-02 CS1 E-Stop Active","","F_CS04[1].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CS1_E_STOP_RESET,"MTR/CL1T-02 CS-A E-Stop Reset","","F_CS04[1].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CS1_E_STOP_RESET1,"MTR/CL1T-02 CS1 E-Stop Reset","","F_CS04[1].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CS2_E_STOP,"MTR/CL1T-02 CS-B E-Stop Active","","F_CS03[0].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CS2_E_STOP1,"MTR/CL1T-02 CS2 E-Stop Active","","F_CS03[0].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CS2_E_STOP_RESET,"MTR/CL1T-02 CS-B E-Stop Reset","","F_CS03[0].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CS2_E_STOP_RESET1,"MTR/CL1T-02 CS2 E-Stop Reset","","F_CS03[0].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CS3_E_STOP,"MTR/CL1T-02 CS3 E-Stop Active","","F_CS03[0].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CS3_E_STOP1,"MTR/CL1T-02 CS-C E-Stop Active","","F_CS03[0].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CS3_E_STOP_RESET,"MTR/CL1T-02 CS3 E-Stop Reset","","F_CS03[0].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CS3_E_STOP_RESET1,"MTR/CL1T-02 CS-C E-Stop Reset","","F_CS03[0].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_CTCTR_FAULT,"MTR/CL1T-02 Contactor Fault","","F_C[26].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_ENCODER_FAULT,"MTR/CL1T-02 Encoder Fault","","F_C[26].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_MOL,"MTR/CL1T-02 Motor Overload","","F_C[26].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_MSD_OFF,"MTR/CL1T-02 Disconnect Off","","F_C[26].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_OUTSERV,"MTR/CL1T-02 Out of Service","","F_C[26].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_OVRIDE,"MTR/CL1T-02 HMI Override","","F_C[26].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_PE_JAMMED,"MTR/CL1T-02 PE Jam","","F_PE[3].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_02_VFD_FAULT,"MTR/CL1T-02 VFD Fault","","F_C[26].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_03_CTCTR_FAULT,"MTR/CL1T-03 Contactor Fault","","F_C[26].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_03_ENCODER_FAULT,"MTR/CL1T-03 Encoder Fault","","F_C[26].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_03_MOL,"MTR/CL1T-03 Motor Overload","","F_C[26].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_03_MSD_OFF,"MTR/CL1T-03 Disconnect Off","","F_C[26].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_03_OUTSERV,"MTR/CL1T-03 Out of Service","","F_C[26].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_03_OVRIDE,"MTR/CL1T-03 HMI Override","","F_C[26].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_03_PE_JAMMED,"MTR/CL1T-03 PE Jam","","F_PE[3].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_03_VFD_FAULT,"MTR/CL1T-03 VFD Fault","","F_C[26].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_04_CTCTR_FAULT,"MTR/CL1T-04 Contactor Fault","","F_C[25].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_04_ENCODER_FAULT,"MTR/CL1T-04 Encoder Fault","","F_C[25].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_04_MOL,"MTR/CL1T-04 Motor Overload","","F_C[25].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_04_MSD_OFF,"MTR/CL1T-04 Disconnect Off","","F_C[25].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_04_OUTSERV,"MTR/CL1T-04 Out of Service","","F_C[25].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_04_OVRIDE,"MTR/CL1T-04 HMI Override","","F_C[26].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_04_PE_JAMMED,"MTR/CL1T-04 PE Jam","","F_PE[3].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_04_VFD_FAULT,"MTR/CL1T-04 VFD Fault","","F_C[25].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_05_CS_E_STOP,"MTR/CL1T-05 CS E-Stop Active","","F_CS04[1].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_05_CS_E_STOP_RESET,"MTR/CL1T-05 CS E-Stop Reset","","F_CS04[1].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_05_CTCTR_FAULT,"MTR/CL1T-05 Contactor Fault","","F_C[25].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_05_ENCODER_FAULT,"MTR/CL1T-05 Encoder Fault","","F_C[25].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_05_MOL,"MTR/CL1T-05 Motor Overload","","F_C[25].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_05_MSD_OFF,"MTR/CL1T-05 Disconnect Off","","F_C[25].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_05_OUTSERV,"MTR/CL1T-05 Out of Service","","F_C[25].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_05_OVRIDE,"MTR/CL1T-05 HMI Override","","F_C[25].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_05_PE_JAMMED,"MTR/CL1T-05 PE Jam","","F_PE[3].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_05_VFD_FAULT,"MTR/CL1T-05 VFD Fault","","F_C[25].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_06_CTCTR_FAULT,"MTR/CL1T-06 Contactor Fault","","F_C[25].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_06_ENCODER_FAULT,"MTR/CL1T-06 Encoder Fault","","F_C[25].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_06_MOL,"MTR/CL1T-06 Motor Overload","","F_C[25].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_06_MSD_OFF,"MTR/CL1T-06 Disconnect Off","","F_C[25].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_06_OUTSERV,"MTR/CL1T-06 Out of Service","","F_C[25].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_06_OVRIDE,"MTR/CL1T-06 HMI Override","","F_C[25].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_06_PE_JAMMED,"MTR/CL1T-06 PE Jam","","F_PE[3].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_06_VFD_FAULT,"MTR/CL1T-06 VFD Fault","","F_C[25].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_07_CTCTR_FAULT,"MTR/CL1T-07 Contactor Fault","","F_C[25].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_07_ENCODER_FAULT,"MTR/CL1T-07 Encoder Fault","","F_C[25].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_07_MOL,"MTR/CL1T-07 Motor Overload","","F_C[25].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_07_MSD_OFF,"MTR/CL1T-07 Disconnect Off","","F_C[25].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_07_OUTSERV,"MTR/CL1T-07 Out of Service","","F_C[25].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_07_OVRIDE,"MTR/CL1T-07 HMI Override","","F_C[25].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_07_PE_JAMMED,"MTR/CL1T-07 PE Jam","","F_PE[3].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_07_VFD_FAULT,"MTR/CL1T-07 VFD Fault","","F_C[25].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_08_CTCTR_FAULT,"MTR/CL1T-08 Contactor Fault","","F_C[25].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_08_ENCODER_FAULT,"MTR/CL1T-08 Encoder Fault","","F_C[25].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_08_MOL,"MTR/CL1T-08 Motor Overload","","F_C[24].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_08_MSD_OFF,"MTR/CL1T-08 Disconnect Off","","F_C[25].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_08_OUTSERV,"MTR/CL1T-08 Out of Service","","F_C[25].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_08_OVRIDE,"MTR/CL1T-08 HMI Override","","F_C[25].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_08_PE_JAMMED,"MTR/CL1T-08 PE Jam","","F_PE[3].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_08_VFD_FAULT,"MTR/CL1T-08 VFD Fault","","F_C[24].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_09_CS_E_STOP,"MTR/CL1T-09 CS E-Stop Active","","F_CS04[1].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_09_CS_E_STOP_RESET,"MTR/CL1T-09 CS E-Stop Reset","","F_CS04[1].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_09_CTCTR_FAULT,"MTR/CL1T-09 Contactor Fault","","F_C[24].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_09_ENCODER_FAULT,"MTR/CL1T-09 Encoder Fault","","F_C[24].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_09_MOL,"MTR/CL1T-09 Motor Overload","","F_C[24].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_09_MSD_OFF,"MTR/CL1T-09 Disconnect Off","","F_C[24].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_09_OUTSERV,"MTR/CL1T-09 Out of Service","","F_C[24].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_09_OVRIDE,"MTR/CL1T-09 HMI Override","","F_C[24].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_09_PE_JAMMED,"MTR/CL1T-09 PE Jam","","F_PE[3].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_09_VFD_FAULT,"MTR/CL1T-09 VFD Fault","","F_C[24].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_10_CTCTR_FAULT,"MTR/CL1T-10 Contactor Fault","","F_C[24].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_10_ENCODER_FAULT,"MTR/CL1T-10 Encoder Fault","","F_C[24].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_10_MOL,"MTR/CL1T-10 Motor Overload","","F_C[24].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_10_MSD_OFF,"MTR/CL1T-10 Disconnect Off","","F_C[24].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_10_OUTSERV,"MTR/CL1T-10 Out of Service","","F_C[24].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_10_OVRIDE,"MTR/CL1T-10 HMI Override","","F_C[24].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_10_PE_JAMMED,"MTR/CL1T-10 PE Jam","","F_PE[3].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_10_VFD_FAULT,"MTR/CL1T-10 VFD Fault","","F_C[24].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_11_CS_E_STOP,"MTR/CL1T-11 CS E-Stop Active","","F_CS04[1].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_11_CS_E_STOP_RESET,"MTR/CL1T-11 CS E-Stop Reset","","F_CS04[1].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_11_CTCTR_FAULT,"MTR/CL1T-11 Contactor Fault","","F_C[24].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_11_ENCODER_FAULT,"MTR/CL1T-11 Encoder Fault","","F_C[24].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_11_MOL,"MTR/CL1T-11 Motor Overload","","F_C[24].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_11_MSD_OFF,"MTR/CL1T-11 Disconnect Off","","F_C[24].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_11_OUTSERV,"MTR/CL1T-11 Out of Service","","F_C[24].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_11_OVRIDE,"MTR/CL1T-11 HMI Override","","F_C[24].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_11_PE_JAMMED,"MTR/CL1T-11 PE Jam","","F_PE[3].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_11_VFD_FAULT,"MTR/CL1T-11 VFD Fault","","F_C[24].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_12_CS_E_STOP,"MTR/CL1T-12 CS E-Stop Active","","F_CS04[1].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_12_CS_E_STOP_RESET,"MTR/CL1T-12 CS E-Stop Reset","","F_CS04[1].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_12_CTCTR_FAULT,"MTR/CL1T-12 Contactor Fault","","F_C[24].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_12_ENCODER_FAULT,"MTR/CL1T-12 Encoder Fault","","F_C[24].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_12_MOL,"MTR/CL1T-12 Motor Overload","","F_C[24].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_12_MSD_OFF,"MTR/CL1T-12 Disconnect Off","","F_C[24].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_12_OUTSERV,"MTR/CL1T-12 Out of Service","","F_C[24].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_12_OVRIDE,"MTR/CL1T-12 HMI Override","","F_C[24].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_12_PE_JAMMED,"MTR/CL1T-12 PE Jam","","F_PE[3].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_12_VFD_FAULT,"MTR/CL1T-12 VFD Fault","","F_C[24].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_13_CTCTR_FAULT,"MTR/CL1T-13 Contactor Fault","","F_C[23].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_13_ENCODER_FAULT,"MTR/CL1T-13 Encoder Fault","","F_C[23].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_13_MOL,"MTR/CL1T-13 Motor Overload","","F_C[23].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_13_MSD_OFF,"MTR/CL1T-13 Disconnect Off","","F_C[23].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_13_OUTSERV,"MTR/CL1T-13 Out of Service","","F_C[24].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_13_OVRIDE,"MTR/CL1T-13 HMI Override","","F_C[24].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_13_PE_JAMMED,"MTR/CL1T-13 PE Jam","","F_PE[3].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_13_VFD_FAULT,"MTR/CL1T-13 VFD Fault","","F_C[23].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_14_CTCTR_FAULT,"MTR/CL1T-14 Contactor Fault","","F_C[23].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_14_ENCODER_FAULT,"MTR/CL1T-14 Encoder Fault","","F_C[23].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_14_MOL,"MTR/CL1T-14 Motor Overload","","F_C[23].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_14_MSD_OFF,"MTR/CL1T-14 Disconnect Off","","F_C[23].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_14_OUTSERV,"MTR/CL1T-14 Out of Service","","F_C[23].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_14_OVRIDE,"MTR/CL1T-14 HMI Override","","F_C[23].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_14_PE_JAMMED,"MTR/CL1T-14 PE Jam","","F_PE[3].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_14_VFD_FAULT,"MTR/CL1T-14 VFD Fault","","F_C[23].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_15_CTCTR_FAULT,"MTR/CL1T-15 Contactor Fault","","F_C[23].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_15_ENCODER_FAULT,"MTR/CL1T-15 Encoder Fault","","F_C[23].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_15_MOL,"MTR/CL1T-15 Motor Overload","","F_C[23].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_15_MSD_OFF,"MTR/CL1T-15 Disconnect Off","","F_C[23].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_15_OUTSERV,"MTR/CL1T-15 Out of Service","","F_C[23].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_15_OVRIDE,"MTR/CL1T-15 HMI Override","","F_C[23].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_15_PE_JAMMED,"MTR/CL1T-15 PE Jam","","F_PE[3].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_15_VFD_FAULT,"MTR/CL1T-15 VFD Fault","","F_C[23].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_16_CS_E_STOP,"MTR/CL1T-16 CS E-Stop Active","","F_CS04[1].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_16_CS_E_STOP_RESET,"MTR/CL1T-16 CS E-Stop Reset","","F_CS04[1].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_16_CTCTR_FAULT,"MTR/CL1T-16 Contactor Fault","","F_C[23].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_16_ENCODER_FAULT,"MTR/CL1T-16 Encoder Fault","","F_C[23].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_16_MOL,"MTR/CL1T-16 Motor Overload","","F_C[23].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_16_MSD_OFF,"MTR/CL1T-16 Disconnect Off","","F_C[23].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_16_OUTSERV,"MTR/CL1T-16 Out of Service","","F_C[23].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_16_OVRIDE,"MTR/CL1T-16 HMI Override","","F_C[23].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_16_PE_JAMMED,"MTR/CL1T-16 PE Jam","","F_PE[3].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_16_VFD_FAULT,"MTR/CL1T-16 VFD Fault","","F_C[23].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_17_CTCTR_FAULT,"MTR/CL1T-17 Contactor Fault","","F_C[23].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_17_ENCODER_FAULT,"MTR/CL1T-17 Encoder Fault","","F_C[23].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_17_MOL,"MTR/CL1T-17 Motor Overload","","F_C[22].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_17_MSD_OFF,"MTR/CL1T-17 Disconnect Off","","F_C[23].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_17_OUTSERV,"MTR/CL1T-17 Out of Service","","F_C[23].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_17_OVRIDE,"MTR/CL1T-17 HMI Override","","F_C[23].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_17_PE_JAMMED,"MTR/CL1T-17 PE Jam","","F_PE[3].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_17_VFD_FAULT,"MTR/CL1T-17 VFD Fault","","F_C[23].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_18_CTCTR_FAULT,"MTR/CL1T-18 Contactor Fault","","F_C[22].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_18_ENCODER_FAULT,"MTR/CL1T-18 Encoder Fault","","F_C[22].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_18_MOL,"MTR/CL1T-18 Motor Overload","","F_C[22].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_18_MSD_OFF,"MTR/CL1T-18 Disconnect Off","","F_C[22].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_18_OUTSERV,"MTR/CL1T-18 Out of Service","","F_C[22].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_18_OVRIDE,"MTR/CL1T-18 HMI Override","","F_C[22].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_18_PE_JAMMED,"MTR/CL1T-18 PE Jam","","F_PE[3].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_18_VFD_FAULT,"MTR/CL1T-18 VFD Fault","","F_C[22].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_19_CTCTR_FAULT,"MTR/CL1T-19 Contactor Fault","","F_C[22].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_19_ENCODER_FAULT,"MTR/CL1T-19 Encoder Fault","","F_C[22].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_19_MOL,"MTR/CL1T-19 Motor Overload","","F_C[22].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_19_MSD_OFF,"MTR/CL1T-19 Disconnect Off","","F_C[22].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_19_OUTSERV,"MTR/CL1T-19 Out of Service","","F_C[22].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_19_OVRIDE,"MTR/CL1T-19 HMI Override","","F_C[22].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_19_PE_JAMMED,"MTR/CL1T-19 PE Jam","","F_PE[3].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_19_VFD_FAULT,"MTR/CL1T-19 VFD Fault","","F_C[22].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_20_CS_E_STOP,"MTR/CL1T-20 CS E-Stop Active","","F_CS04[1].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_20_CS_E_STOP_RESET,"MTR/CL1T-20 CS E-Stop Reset","","F_CS04[1].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_20_CTCTR_FAULT,"MTR/CL1T-20 Contactor Fault","","F_C[22].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_20_ENCODER_FAULT,"MTR/CL1T-20 Encoder Fault","","F_C[22].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_20_MOL,"MTR/CL1T-20 Motor Overload","","F_C[22].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_20_MSD_OFF,"MTR/CL1T-20 Disconnect Off","","F_C[22].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_20_OUTSERV,"MTR/CL1T-20 Out of Service","","F_C[22].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_20_OVRIDE,"MTR/CL1T-20 HMI Override","","F_C[22].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_20_PE_JAMMED,"MTR/CL1T-20 PE Jam","","F_PE[3].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_20_VFD_FAULT,"MTR/CL1T-20 VFD Fault","","F_C[22].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_21_CTCTR_FAULT,"MTR/CL1T-21 Contactor Fault","","F_C[22].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_21_ENCODER_FAULT,"MTR/CL1T-21 Encoder Fault","","F_C[22].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_21_MOL,"MTR/CL1T-21 Motor Overload","","F_C[22].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_21_MSD_OFF,"MTR/CL1T-21 Disconnect Off","","F_C[22].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_21_OUTSERV,"MTR/CL1T-21 Out of Service","","F_C[22].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_21_OVRIDE,"MTR/CL1T-21 HMI Override","","F_C[22].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_21_PE_JAMMED,"MTR/CL1T-21 PE Jam","","F_PE[3].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_21_VFD_FAULT,"MTR/CL1T-21 VFD Fault","","F_C[22].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_22_CTCTR_FAULT,"MTR/CL1T-22 Contactor Fault","","F_C[21].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_22_ENCODER_FAULT,"MTR/CL1T-22 Encoder Fault","","F_C[21].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_22_MOL,"MTR/CL1T-22 Motor Overload","","F_C[21].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_22_MSD_OFF,"MTR/CL1T-22 Disconnect Off","","F_C[22].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_22_OUTSERV,"MTR/CL1T-22 Out of Service","","F_C[22].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_22_OVRIDE,"MTR/CL1T-22 HMI Override","","F_C[22].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_22_VFD_FAULT,"MTR/CL1T-22 VFD Fault","","F_C[21].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_23_CTCTR_FAULT,"MTR/CL1T-23 Contactor Fault","","F_C[21].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_23_ENCODER_FAULT,"MTR/CL1T-23 Encoder Fault","","F_C[21].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_23_MOL,"MTR/CL1T-23 Motor Overload","","F_C[21].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_23_MSD_OFF,"MTR/CL1T-23 Disconnect Off","","F_C[21].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_23_OUTSERV,"MTR/CL1T-23 Out of Service","","F_C[21].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_23_OVRIDE,"MTR/CL1T-23 HMI Override","","F_C[21].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_23_PE_JAMMED,"MTR/CL1T-23 PE Jam","","F_PE[3].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_23_VFD_FAULT,"MTR/CL1T-23 VFD Fault","","F_C[21].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_24_CS_E_STOP,"MTR/CL1T-24 CS E-Stop Active","","F_CS04[1].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_24_CS_E_STOP_RESET,"MTR/CL1T-24 CS E-Stop Reset","","F_CS04[1].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_24_CTCTR_FAULT,"MTR/CL1T-24 Contactor Fault","","F_C[21].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_24_ENCODER_FAULT,"MTR/CL1T-24 Encoder Fault","","F_C[21].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_24_MOL,"MTR/CL1T-24 Motor Overload","","F_C[21].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_24_MSD_OFF,"MTR/CL1T-24 Disconnect Off","","F_C[21].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_24_OUTSERV,"MTR/CL1T-24 Out of Service","","F_C[21].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_24_OVRIDE,"MTR/CL1T-24 HMI Override","","F_C[21].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_24_PE_JAMMED,"MTR/CL1T-24 PE Jam","","F_PE[3].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_24_VFD_FAULT,"MTR/CL1T-24 VFD Fault","","F_C[21].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_25_CTCTR_FAULT,"MTR/CL1T-25 Contactor Fault","","F_C[21].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_25_ENCODER_FAULT,"MTR/CL1T-25 Encoder Fault","","F_C[21].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_25_MOL,"MTR/CL1T-25 Motor Overload","","F_C[21].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_25_MSD_OFF,"MTR/CL1T-25 Disconnect Off","","F_C[21].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_25_OUTSERV,"MTR/CL1T-25 Out of Service","","F_C[21].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_25_OVRIDE,"MTR/CL1T-25 HMI Override","","F_C[21].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_25_VFD_FAULT,"MTR/CL1T-25 VFD Fault","","F_C[21].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_26_CTCTR_FAULT,"MTR/CL1T-26 Contactor Fault","","F_C[21].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_26_ENCODER_FAULT,"MTR/CL1T-26 Encoder Fault","","F_C[21].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_26_MOL,"MTR/CL1T-26 Motor Overload","","F_C[21].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_26_MSD_OFF,"MTR/CL1T-26 Disconnect Off","","F_C[21].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_26_OUTSERV,"MTR/CL1T-26 Out of Service","","F_C[21].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_26_OVRIDE,"MTR/CL1T-26 HMI Override","","F_C[21].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_26_PE1_JAMMED,"MTR/CL1T-26 PE-A Jam","","F_PE[3].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_26_PE1_JAMMED1,"MTR/CL1T-26 PE1 Jam","","F_PE[3].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_26_PE2_JAMMED,"MTR/CL1T-26 PE-B Jam","","F_PE[3].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_26_PE2_JAMMED1,"MTR/CL1T-26 PE2 Jam","","F_PE[3].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL1T_26_VFD_FAULT,"MTR/CL1T-26 VFD Fault","","F_C[21].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_CS1_E_STOP,"MTR/CL2T-01 CS-A E-Stop Active","","F_CS03[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_CS1_E_STOP1,"MTR/CL2T-01 CS1 E-Stop Active","","F_CS03[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_CS1_E_STOP_RESET,"MTR/CL2T-01 CS-A E-Stop Reset","","F_CS03[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_CS1_E_STOP_RESET1,"MTR/CL2T-01 CS1 E-Stop Reset","","F_CS03[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_CS2_E_STOP,"MTR/CL2T-01 CS-B E-Stop Active","","F_CS03[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_CS2_E_STOP1,"MTR/CL2T-01 CS2 E-Stop Active","","F_CS03[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_CS2_E_STOP_RESET,"MTR/CL2T-01 CS-B E-Stop Reset","","F_CS03[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_CS2_E_STOP_RESET1,"MTR/CL2T-01 CS2 E-Stop Reset","","F_CS03[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_CTCTR_FAULT,"MTR/CL2T-01 Contactor Fault","","F_C[14].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_ENCODER_FAULT,"MTR/CL2T-01 Encoder Fault","","F_C[14].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_MOL,"MTR/CL2T-01 Motor Overload","","F_C[14].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_MSD_OFF,"MTR/CL2T-01 Disconnect Off","","F_C[14].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_OUTSERV,"MTR/CL2T-01 Out of Service","","F_C[14].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_OVRIDE,"MTR/CL2T-01 HMI Override","","F_C[14].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_PE_JAMMED,"MTR/CL2T-01 PE Jam","","F_PE[2].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_01_VFD_FAULT,"MTR/CL2T-01 VFD Fault","","F_C[14].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CS1_E_STOP,"MTR/CL2T-02 CS-A E-Stop Active","","F_CS04[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CS1_E_STOP1,"MTR/CL2T-02 CS1 E-Stop Active","","F_CS04[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CS1_E_STOP_RESET,"MTR/CL2T-02 CS-A E-Stop Reset","","F_CS04[0].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CS1_E_STOP_RESET1,"MTR/CL2T-02 CS1 E-Stop Reset","","F_CS04[0].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CS2_E_STOP,"MTR/CL2T-02 CS-B E-Stop Active","","F_CS03[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CS2_E_STOP1,"MTR/CL2T-02 CS2 E-Stop Active","","F_CS03[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CS2_E_STOP_RESET,"MTR/CL2T-02 CS-B E-Stop Reset","","F_CS03[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CS2_E_STOP_RESET1,"MTR/CL2T-02 CS2 E-Stop Reset","","F_CS03[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CS3_E_STOP,"MTR/CL2T-02 CS3 E-Stop Active","","F_CS03[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CS3_E_STOP1,"MTR/CL2T-02 CS-C E-Stop Active","","F_CS03[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CS3_E_STOP_RESET,"MTR/CL2T-02 CS3 E-Stop Reset","","F_CS03[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CS3_E_STOP_RESET1,"MTR/CL2T-02 CS-C E-Stop Reset","","F_CS03[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_CTCTR_FAULT,"MTR/CL2T-02 Contactor Fault","","F_C[14].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_ENCODER_FAULT,"MTR/CL2T-02 Encoder Fault","","F_C[14].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_MOL,"MTR/CL2T-02 Motor Overload","","F_C[14].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_MSD_OFF,"MTR/CL2T-02 Disconnect Off","","F_C[14].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_OUTSERV,"MTR/CL2T-02 Out of Service","","F_C[14].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_OVRIDE,"MTR/CL2T-02 HMI Override","","F_C[14].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_PE_JAMMED,"MTR/CL2T-02 PE Jam","","F_PE[2].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_02_VFD_FAULT,"MTR/CL2T-02 VFD Fault","","F_C[14].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_03_CTCTR_FAULT,"MTR/CL2T-03 Contactor Fault","","F_C[14].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_03_ENCODER_FAULT,"MTR/CL2T-03 Encoder Fault","","F_C[14].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_03_MOL,"MTR/CL2T-03 Motor Overload","","F_C[14].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_03_MSD_OFF,"MTR/CL2T-03 Disconnect Off","","F_C[14].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_03_OUTSERV,"MTR/CL2T-03 Out of Service","","F_C[14].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_03_OVRIDE,"MTR/CL2T-03 HMI Override","","F_C[14].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_03_PE_JAMMED,"MTR/CL2T-03 PE Jam","","F_PE[2].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_03_VFD_FAULT,"MTR/CL2T-03 VFD Fault","","F_C[14].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_04_CS_E_STOP,"MTR/CL2T-04 CS E-Stop Active","","F_CS04[0].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_04_CS_E_STOP_RESET,"MTR/CL2T-04 CS E-Stop Reset","","F_CS04[0].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_04_CTCTR_FAULT,"MTR/CL2T-04 Contactor Fault","","F_C[14].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_04_ENCODER_FAULT,"MTR/CL2T-04 Encoder Fault","","F_C[14].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_04_MOL,"MTR/CL2T-04 Motor Overload","","F_C[14].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_04_MSD_OFF,"MTR/CL2T-04 Disconnect Off","","F_C[14].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_04_OUTSERV,"MTR/CL2T-04 Out of Service","","F_C[14].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_04_OVRIDE,"MTR/CL2T-04 HMI Override","","F_C[14].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_04_PE_JAMMED,"MTR/CL2T-04 PE Jam","","F_PE[2].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_04_VFD_FAULT,"MTR/CL2T-04 VFD Fault","","F_C[14].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_CS1_E_STOP,"MTR/CL2T-05 CS-A E-Stop Active","","F_CS04[0].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_CS1_E_STOP1,"MTR/CL2T-05 CS1 E-Stop Active","","F_CS04[0].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_CS1_E_STOP_RESET,"MTR/CL2T-05 CS-A E-Stop Reset","","F_CS04[0].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_CS1_E_STOP_RESET1,"MTR/CL2T-05 CS1 E-Stop Reset","","F_CS04[0].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_CS2_E_STOP,"MTR/CL2T-05 CS-B E-Stop Active","","F_CS04[0].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_CS2_E_STOP1,"MTR/CL2T-05 CS2 E-Stop Active","","F_CS04[0].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_CS2_E_STOP_RESET,"MTR/CL2T-05 CS-B E-Stop Reset","","F_CS04[0].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_CS2_E_STOP_RESET1,"MTR/CL2T-05 CS2 E-Stop Reset","","F_CS04[0].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_CTCTR_FAULT,"MTR/CL2T-05 Contactor Fault","","F_C[13].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_ENCODER_FAULT,"MTR/CL2T-05 Encoder Fault","","F_C[13].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_MOL,"MTR/CL2T-05 Motor Overload","","F_C[13].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_MSD_OFF,"MTR/CL2T-05 Disconnect Off","","F_C[13].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_OUTSERV,"MTR/CL2T-05 Out of Service","","F_C[13].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_OVRIDE,"MTR/CL2T-05 HMI Override","","F_C[13].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_PE_JAMMED,"MTR/CL2T-05 PE Jam","","F_PE[2].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_05_VFD_FAULT,"MTR/CL2T-05 VFD Fault","","F_C[13].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_06_CTCTR_FAULT,"MTR/CL2T-06 Contactor Fault","","F_C[13].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_06_ENCODER_FAULT,"MTR/CL2T-06 Encoder Fault","","F_C[13].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_06_MOL,"MTR/CL2T-06 Motor Overload","","F_C[13].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_06_MSD_OFF,"MTR/CL2T-06 Disconnect Off","","F_C[13].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_06_OUTSERV,"MTR/CL2T-06 Out of Service","","F_C[13].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_06_OVRIDE,"MTR/CL2T-06 HMI Override","","F_C[13].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_06_PE_JAMMED,"MTR/CL2T-06 PE Jam","","F_PE[2].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_06_VFD_FAULT,"MTR/CL2T-06 VFD Fault","","F_C[13].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_07_CTCTR_FAULT,"MTR/CL2T-07 Contactor Fault","","F_C[13].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_07_ENCODER_FAULT,"MTR/CL2T-07 Encoder Fault","","F_C[13].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_07_MOL,"MTR/CL2T-07 Motor Overload","","F_C[13].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_07_MSD_OFF,"MTR/CL2T-07 Disconnect Off","","F_C[13].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_07_OUTSERV,"MTR/CL2T-07 Out of Service","","F_C[13].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_07_OVRIDE,"MTR/CL2T-07 HMI Override","","F_C[13].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_07_PE_JAMMED,"MTR/CL2T-07 PE Jam","","F_PE[1].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_07_VFD_FAULT,"MTR/CL2T-07 VFD Fault","","F_C[13].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_08_CTCTR_FAULT,"MTR/CL2T-08 Contactor Fault","","F_C[13].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_08_ENCODER_FAULT,"MTR/CL2T-08 Encoder Fault","","F_C[13].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_08_MOL,"MTR/CL2T-08 Motor Overload","","F_C[13].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_08_MSD_OFF,"MTR/CL2T-08 Disconnect Off","","F_C[13].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_08_OUTSERV,"MTR/CL2T-08 Out of Service","","F_C[13].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_08_OVRIDE,"MTR/CL2T-08 HMI Override","","F_C[13].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_08_PE_JAMMED,"MTR/CL2T-08 PE Jam","","F_PE[1].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_08_VFD_FAULT,"MTR/CL2T-08 VFD Fault","","F_C[13].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_09_CS_E_STOP,"MTR/CL2T-09 CS E-Stop Active","","F_CS04[0].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_09_CS_E_STOP_RESET,"MTR/CL2T-09 CS E-Stop Reset","","F_CS04[0].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_09_CTCTR_FAULT,"MTR/CL2T-09 Contactor Fault","","F_C[12].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_09_ENCODER_FAULT,"MTR/CL2T-09 Encoder Fault","","F_C[13].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_09_MOL,"MTR/CL2T-09 Motor Overload","","F_C[12].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_09_MSD_OFF,"MTR/CL2T-09 Disconnect Off","","F_C[13].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_09_OUTSERV,"MTR/CL2T-09 Out of Service","","F_C[13].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_09_OVRIDE,"MTR/CL2T-09 HMI Override","","F_C[13].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_09_PE_JAMMED,"MTR/CL2T-09 PE Jam","","F_PE[1].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL2T_09_VFD_FAULT,"MTR/CL2T-09 VFD Fault","","F_C[12].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_CS1_E_STOP,"MTR/CL3T-01 CS-A E-Stop Active","","F_CS03[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_CS1_E_STOP1,"MTR/CL3T-01 CS1 E-Stop Active","","F_CS03[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_CS1_E_STOP_RESET,"MTR/CL3T-01 CS-A E-Stop Reset","","F_CS03[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_CS1_E_STOP_RESET1,"MTR/CL3T-01 CS1 E-Stop Reset","","F_CS03[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_CS2_E_STOP,"MTR/CL3T-01 CS-B E-Stop Active","","F_CS03[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_CS2_E_STOP1,"MTR/CL3T-01 CS2 E-Stop Active","","F_CS03[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_CS2_E_STOP_RESET,"MTR/CL3T-01 CS-B E-Stop Reset","","F_CS03[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_CS2_E_STOP_RESET1,"MTR/CL3T-01 CS2 E-Stop Reset","","F_CS03[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_CTCTR_FAULT,"MTR/CL3T-01 Contactor Fault","","F_C[16].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_ENCODER_FAULT,"MTR/CL3T-01 Encoder Fault","","F_C[16].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_MOL,"MTR/CL3T-01 Motor Overload","","F_C[16].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_MSD_OFF,"MTR/CL3T-01 Disconnect Off","","F_C[16].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_OUTSERV,"MTR/CL3T-01 Out of Service","","F_C[16].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_OVRIDE,"MTR/CL3T-01 HMI Override","","F_C[16].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_PE_JAMMED,"MTR/CL3T-01 PE Jam","","F_PE[2].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_01_VFD_FAULT,"MTR/CL3T-01 VFD Fault","","F_C[16].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS1_E_STOP,"MTR/CL3T-02 CS-A E-Stop Active","","F_CS04[0].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS1_E_STOP1,"MTR/CL3T-02 CS1 E-Stop Active","","F_CS04[0].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS1_E_STOP_RESET,"MTR/CL3T-02 CS-A E-Stop Reset","","F_CS04[0].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS1_E_STOP_RESET1,"MTR/CL3T-02 CS1 E-Stop Reset","","F_CS04[0].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS2_E_STOP,"MTR/CL3T-02 CS-B E-Stop Active","","F_CS03[0].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS2_E_STOP1,"MTR/CL3T-02 CS2 E-Stop Active","","F_CS03[0].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS2_E_STOP_RESET,"MTR/CL3T-02 CS-B E-Stop Reset","","F_CS03[0].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS2_E_STOP_RESET1,"MTR/CL3T-02 CS2 E-Stop Reset","","F_CS03[0].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS3_E_STOP,"MTR/CL3T-02 CS3 E-Stop Active","","F_CS03[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS3_E_STOP1,"MTR/CL3T-02 CS-C E-Stop Active","","F_CS03[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS3_E_STOP_RESET,"MTR/CL3T-02 CS3 E-Stop Reset","","F_CS03[0].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS3_E_STOP_RESET1,"MTR/CL3T-02 CS-C E-Stop Reset","","F_CS03[0].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS4_E_STOP,"MTR/CL3T-02 CS4 E-Stop Active","","F_CS04[0].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS4_E_STOP1,"MTR/CL3T-02 CS-D E-Stop Active","","F_CS04[0].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS4_E_STOP_RESET,"MTR/CL3T-02 CS4 E-Stop Reset","","F_CS04[0].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CS4_E_STOP_RESET1,"MTR/CL3T-02 CS-D E-Stop Reset","","F_CS04[0].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_CTCTR_FAULT,"MTR/CL3T-02 Contactor Fault","","F_C[16].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_ENCODER_FAULT,"MTR/CL3T-02 Encoder Fault","","F_C[16].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_MOL,"MTR/CL3T-02 Motor Overload","","F_C[16].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_MSD_OFF,"MTR/CL3T-02 Disconnect Off","","F_C[16].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_OUTSERV,"MTR/CL3T-02 Out of Service","","F_C[16].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_OVRIDE,"MTR/CL3T-02 HMI Override","","F_C[16].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_PE_JAMMED,"MTR/CL3T-02 PE Jam","","F_PE[2].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_02_VFD_FAULT,"MTR/CL3T-02 VFD Fault","","F_C[16].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_03_CTCTR_FAULT,"MTR/CL3T-03 Contactor Fault","","F_C[16].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_03_ENCODER_FAULT,"MTR/CL3T-03 Encoder Fault","","F_C[16].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_03_MOL,"MTR/CL3T-03 Motor Overload","","F_C[15].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_03_MSD_OFF,"MTR/CL3T-03 Disconnect Off","","F_C[16].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_03_OUTSERV,"MTR/CL3T-03 Out of Service","","F_C[16].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_03_OVRIDE,"MTR/CL3T-03 HMI Override","","F_C[16].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_03_PE_JAMMED,"MTR/CL3T-03 PE Jam","","F_PE[2].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_03_VFD_FAULT,"MTR/CL3T-03 VFD Fault","","F_C[16].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_04_CS_E_STOP,"MTR/CL3T-04 CS E-Stop Active","","F_CS04[0].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_04_CS_E_STOP_RESET,"MTR/CL3T-04 CS E-Stop Reset","","F_CS04[0].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_04_CTCTR_FAULT,"MTR/CL3T-04 Contactor Fault","","F_C[15].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_04_ENCODER_FAULT,"MTR/CL3T-04 Encoder Fault","","F_C[15].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_04_MOL,"MTR/CL3T-04 Motor Overload","","F_C[15].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_04_MSD_OFF,"MTR/CL3T-04 Disconnect Off","","F_C[15].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_04_OUTSERV,"MTR/CL3T-04 Out of Service","","F_C[15].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_04_OVRIDE,"MTR/CL3T-04 HMI Override","","F_C[15].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_04_PE_JAMMED,"MTR/CL3T-04 PE Jam","","F_PE[2].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_04_VFD_FAULT,"MTR/CL3T-04 VFD Fault","","F_C[15].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_05_CTCTR_FAULT,"MTR/CL3T-05 Contactor Fault","","F_C[15].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_05_ENCODER_FAULT,"MTR/CL3T-05 Encoder Fault","","F_C[15].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_05_MOL,"MTR/CL3T-05 Motor Overload","","F_C[15].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_05_MSD_OFF,"MTR/CL3T-05 Disconnect Off","","F_C[15].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_05_OUTSERV,"MTR/CL3T-05 Out of Service","","F_C[15].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_05_OVRIDE,"MTR/CL3T-05 HMI Override","","F_C[15].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_05_PE_JAMMED,"MTR/CL3T-05 PE Jam","","F_PE[2].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_05_VFD_FAULT,"MTR/CL3T-05 VFD Fault","","F_C[15].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_06_CTCTR_FAULT,"MTR/CL3T-06 Contactor Fault","","F_C[15].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_06_ENCODER_FAULT,"MTR/CL3T-06 Encoder Fault","","F_C[15].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_06_MOL,"MTR/CL3T-06 Motor Overload","","F_C[15].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_06_MSD_OFF,"MTR/CL3T-06 Disconnect Off","","F_C[15].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_06_OUTSERV,"MTR/CL3T-06 Out of Service","","F_C[15].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_06_OVRIDE,"MTR/CL3T-06 HMI Override","","F_C[15].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_06_PE_JAMMED,"MTR/CL3T-06 PE Jam","","F_PE[2].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_06_VFD_FAULT,"MTR/CL3T-06 VFD Fault","","F_C[15].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_07_CTCTR_FAULT,"MTR/CL3T-07 Contactor Fault","","F_C[15].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_07_ENCODER_FAULT,"MTR/CL3T-07 Encoder Fault","","F_C[15].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_07_MOL,"MTR/CL3T-07 Motor Overload","","F_C[15].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_07_MSD_OFF,"MTR/CL3T-07 Disconnect Off","","F_C[15].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_07_OUTSERV,"MTR/CL3T-07 Out of Service","","F_C[15].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_07_OVRIDE,"MTR/CL3T-07 HMI Override","","F_C[15].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_07_PE_JAMMED,"MTR/CL3T-07 PE Jam","","F_PE[2].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_07_VFD_FAULT,"MTR/CL3T-07 VFD Fault","","F_C[15].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_08_CTCTR_FAULT,"MTR/CL3T-08 Contactor Fault","","F_C[14].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_08_ENCODER_FAULT,"MTR/CL3T-08 Encoder Fault","","F_C[14].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_08_MOL,"MTR/CL3T-08 Motor Overload","","F_C[14].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_08_MSD_OFF,"MTR/CL3T-08 Disconnect Off","","F_C[15].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_08_OUTSERV,"MTR/CL3T-08 Out of Service","","F_C[15].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_08_OVRIDE,"MTR/CL3T-08 HMI Override","","F_C[15].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_08_PE_JAMMED,"MTR/CL3T-08 PE Jam","","F_PE[2].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_CL3T_08_VFD_FAULT,"MTR/CL3T-08 VFD Fault","","F_C[14].29","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,F_CS01,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CS02,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CS03,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CS04,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CS05,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CS13,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CS14,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CS15,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CS16,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CS1A,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CS2A,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CS3A,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CS4A,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_CTX,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_DOOR,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_HCD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_HSD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_06_CTCTR_FAULT,"MTR/HX1T-06 Contactor Fault","","F_C[27].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_06_ENCODER_FAULT,"MTR/HX1T-06 Encoder Fault","","F_C[27].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_06_MOL,"MTR/HX1T-06 Motor Overload","","F_C[27].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_06_MSD_OFF,"MTR/HX1T-06 Disconnect Off","","F_C[27].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_06_OUTSERV,"MTR/HX1T-06 Out of Service","","F_C[27].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_06_OVRIDE,"MTR/HX1T-06 HMI Override","","F_C[27].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_06_PE_JAMMED,"MTR/HX1T-06 PE Jam","","F_PE[4].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_06_VFD_FAULT,"MTR/HX1T-06 VFD Fault","","F_C[27].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_07_CTCTR_FAULT,"MTR/HX1T-07 Contactor Fault","","F_C[27].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_07_ENCODER_FAULT,"MTR/HX1T-07 Encoder Fault","","F_C[27].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_07_MOL,"MTR/HX1T-07 Motor Overload","","F_C[27].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_07_MSD_OFF,"MTR/HX1T-07 Disconnect Off","","F_C[27].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_07_OUTSERV,"MTR/HX1T-07 Out of Service","","F_C[27].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_07_OVRIDE,"MTR/HX1T-07 HMI Override","","F_C[27].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_07_PE_JAMMED,"MTR/HX1T-07 PE Jam","","F_PE[4].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_07_VFD_FAULT,"MTR/HX1T-07 VFD Fault","","F_C[27].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_08_CTCTR_FAULT,"MTR/HX1T-08 Contactor Fault","","F_C[27].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_08_ENCODER_FAULT,"MTR/HX1T-08 Encoder Fault","","F_C[27].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_08_MOL,"MTR/HX1T-08 Motor Overload","","F_C[27].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_08_MSD_OFF,"MTR/HX1T-08 Disconnect Off","","F_C[27].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_08_OUTSERV,"MTR/HX1T-08 Out of Service","","F_C[27].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_08_OVRIDE,"MTR/HX1T-08 HMI Override","","F_C[27].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_08_PE_JAMMED,"MTR/HX1T-08 PE Jam","","F_PE[3].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_08_VFD_FAULT,"MTR/HX1T-08 VFD Fault","","F_C[27].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_09_CTCTR_FAULT,"MTR/HX1T-09 Contactor Fault","","F_C[26].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_09_ENCODER_FAULT,"MTR/HX1T-09 Encoder Fault","","F_C[27].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_09_MOL,"MTR/HX1T-09 Motor Overload","","F_C[26].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_09_MSD_OFF,"MTR/HX1T-09 Disconnect Off","","F_C[27].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_09_OUTSERV,"MTR/HX1T-09 Out of Service","","F_C[27].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_09_OVRIDE,"MTR/HX1T-09 HMI Override","","F_C[27].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_09_PE_JAMMED,"MTR/HX1T-09 PE Jam","","F_PE[3].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_09_VFD_FAULT,"MTR/HX1T-09 VFD Fault","","F_C[26].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10A_CTCTR_FAULT,"MTR/HX1T-10A Contactor Fault","","F_C[20].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10A_ENCODER_FAULT,"MTR/HX1T-10A Encoder Fault","","F_C[20].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10A_MOL,"MTR/HX1T-10A Motor Overload","","F_C[20].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10A_MSD_OFF,"MTR/HX1T-10A Disconnect Off","","F_C[20].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10A_OUTSERV,"MTR/HX1T-10A Out of Service","","F_C[20].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10A_OVRIDE,"MTR/HX1T-10A HMI Override","","F_C[20].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10A_PE_JAMMED,"MTR/HX1T-10A PE Jam","","F_PE[3].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10A_VFD_FAULT,"MTR/HX1T-10A VFD Fault","","F_C[20].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10_CS_E_STOP,"MTR/HX1T-10 CS E-Stop Active","","F_CS05[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10_CS_E_STOP_RESET,"MTR/HX1T-10 CS E-Stop Reset","","F_CS05[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10_CTCTR_FAULT,"MTR/HX1T-10 Contactor Fault","","F_C[26].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10_ENCODER_FAULT,"MTR/HX1T-10 Encoder Fault","","F_C[26].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10_JOG_REVERSE,"MTR/HX1T-10 Jog Reverse","","F_MISC[0].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_HX1T_10_MOL,"MTR/HX1T-10 Motor Overload","","F_C[26].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10_MSD_OFF,"MTR/HX1T-10 Disconnect Off","","F_C[26].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10_OUTSERV,"MTR/HX1T-10 Out of Service","","F_C[26].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10_OVRIDE,"MTR/HX1T-10 HMI Override","","F_C[26].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10_PE_JAMMED,"MTR/HX1T-10 PE Jam","","F_PE[3].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_10_VFD_FAULT,"MTR/HX1T-10 VFD Fault","","F_C[26].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_11_CTCTR_FAULT,"MTR/HX1T-11 Contactor Fault","","F_C[26].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_11_ENCODER_FAULT,"MTR/HX1T-11 Encoder Fault","","F_C[26].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_11_MOL,"MTR/HX1T-11 Motor Overload","","F_C[26].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_11_MSD_OFF,"MTR/HX1T-11 Disconnect Off","","F_C[26].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_11_OUTSERV,"MTR/HX1T-11 Out of Service","","F_C[26].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_11_OVRIDE,"MTR/HX1T-11 HMI Override","","F_C[26].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_HX1T_11_VFD_FAULT,"MTR/HX1T-11 VFD Fault","","F_C[26].2","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,F_ISD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_L3,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_MCP,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,F_MCP_01_CS_E_STOP,"PNL/MCP-01 E-Stop Active","","F_MCP[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_01_CS_E_STOP_RESET,"PNL/MCP-01 E-Stop Reset","","F_MCP[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_01_FIRE_ALM_FAULT,"PNL/MCP-01 Fire Alarm","","F_MCP[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_01_HIGH_TEMP,"PNL/MCP-01 High Temperature","","F_MCP[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_01_RK01_S00_COMM,"PNL/MCP-01 Rack01 Slot00 Comm Card Fault","","F_CCOM[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_01_RK02_S00_COMM,"PNL/MCP-01 Rack02 Slot00 Comm Card Fault","","F_CCOM[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_02_CS_E_STOP,"PNL/MCP-02 E-Stop Active","","F_MCP[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_02_CS_E_STOP_RESET,"PNL/MCP-02 E-Stop Reset","","F_MCP[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_02_FIRE_ALM_FAULT,"PNL/MCP-02 Fire Alarm","","F_MCP[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_02_HIGH_TEMP,"PNL/MCP-02 High Temperature","","F_MCP[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_02_RK01_S00_COMM,"PNL/MCP-02 Rack01 Slot00 Comm Card Fault","","F_CCOM[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_02_RK02_S00_COMM,"PNL/MCP-02 Rack02 Slot00 Comm Card Fault","","F_CCOM[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_03_CS_E_STOP,"PNL/MCP-03 E-Stop Active","","F_MCP[0].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_03_CS_E_STOP_RESET,"PNL/MCP-03 E-Stop Reset","","F_MCP[0].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_03_FIRE_ALM_FAULT,"PNL/MCP-03 Fire Alarm","","F_MCP[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_03_HIGH_TEMP,"PNL/MCP-03 High Temperature","","F_MCP[0].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_03_RK01_S00_COMM,"PNL/MCP-03 Rack01 Slot00 Comm Card Fault","","F_CCOM[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_03_RK02_S00_COMM,"PNL/MCP-03 Rack02 Slot00 Comm Card Fault","","F_CCOM[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_16_CS_E_STOP,"PNL/MCP-16 E-Stop Active","","F_MCP[0].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_16_CS_E_STOP_RESET,"PNL/MCP-16 E-Stop Reset","","F_MCP[0].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_16_FIRE_ALM_FAULT,"PNL/MCP-16 Fire Alarm","","F_MCP[0].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_16_HIGH_TEMP,"PNL/MCP-16 High Temperature","","F_MCP[0].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_16_RK01_S00_COMM,"PNL/MCP-16 Rack01 Slot00 Comm Card Fault","","F_CCOM[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_16_RK02_S00_COMM,"PNL/MCP-16 Rack02 Slot00 Comm Card Fault","","F_CCOM[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_BM1_CS_E_STOP,"PNL/MCP-BM1 E-Stop Active","","F_MCP[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_BM1_CS_E_STOP_RESET,"PNL/MCP-BM1 E-Stop Reset","","F_MCP[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_BM1_FIRE_ALM_FAULT,"PNL/MCP-BM1 Fire Alarm","","F_MCP[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_BM1_HIGH_TEMP,"PNL/MCP-BM1 High Temperature","","F_MCP[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_BM1_RK01_S16_COMM,"PNL/MCP-BM1 Rack01 Slot16 Comm Card Fault","","F_CCOM[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_BM1_RK02_S00_COMM,"PNL/MCP-BM1 Rack02 Slot01 Comm Card Fault","","F_CCOM[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_BM1_RK02_S01_COMM,"PNL/MCP-BM1 Rack02 Slot01 Comm Card Fault","","F_CCOM[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_CC01_RK01_S02_COMM,"PNL/MCP-CC01 Rack01 Slot02 Comm Card Fault","","F_CCOM[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_MCP_LCP_RK01_S02_COMM,"PNL/MCP-LCP Rack01 Slot02 Comm Card Fault","","F_CCOM[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,F_MEC,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_MISC,"","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,F_MU,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_MVI,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,F_O2T_04_CS_E_STOP,"MTR/O2T-04 CS E-Stop Active","","F_CS04[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_04_CS_E_STOP_RESET,"MTR/O2T-04 CS E-Stop Reset","","F_CS04[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_04_CTCTR_FAULT,"MTR/O2T-04 Contactor Fault","","F_C[11].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_04_ENCODER_FAULT,"MTR/O2T-04 Encoder Fault","","F_C[11].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_04_MOL,"MTR/O2T-04 Motor Overload","","F_C[11].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_04_MSD_OFF,"MTR/O2T-04 Disconnect Off","","F_C[11].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_04_OUTSERV,"MTR/O2T-04 Out of Service","","F_C[11].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_04_OVRIDE,"MTR/O2T-04 HMI Override","","F_C[11].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_04_PE_JAMMED,"MTR/O2T-04 PE Jam","","F_PE[1].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_04_VFD_FAULT,"MTR/O2T-04 VFD Fault","","F_C[11].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_05_CTCTR_FAULT,"MTR/O2T-05 Contactor Fault","","F_C[11].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_05_ENCODER_FAULT,"MTR/O2T-05 Encoder Fault","","F_C[11].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_05_MOL,"MTR/O2T-05 Motor Overload","","F_C[11].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_05_MSD_OFF,"MTR/O2T-05 Disconnect Off","","F_C[11].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_05_OUTSERV,"MTR/O2T-05 Out of Service","","F_C[11].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_05_OVRIDE,"MTR/O2T-05 HMI Override","","F_C[11].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_05_PE_JAMMED,"MTR/O2T-05 PE Jam","","F_PE[1].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_05_VFD_FAULT,"MTR/O2T-05 VFD Fault","","F_C[11].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_06_CS_E_STOP,"MTR/O2T-06 CS E-Stop Active","","F_CS04[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_06_CS_E_STOP_RESET,"MTR/O2T-06 CS E-Stop Reset","","F_CS04[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_06_CTCTR_FAULT,"MTR/O2T-06 Contactor Fault","","F_C[11].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_06_ENCODER_FAULT,"MTR/O2T-06 Encoder Fault","","F_C[11].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_06_MOL,"MTR/O2T-06 Motor Overload","","F_C[10].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_06_MSD_OFF,"MTR/O2T-06 Disconnect Off","","F_C[11].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_06_OUTSERV,"MTR/O2T-06 Out of Service","","F_C[11].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_06_OVRIDE,"MTR/O2T-06 HMI Override","","F_C[11].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_06_PE_JAMMED,"MTR/O2T-06 PE Jam","","F_PE[1].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_06_VFD_FAULT,"MTR/O2T-06 VFD Fault","","F_C[10].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_07_CTCTR_FAULT,"MTR/O2T-07 Contactor Fault","","F_C[10].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_07_ENCODER_FAULT,"MTR/O2T-07 Encoder Fault","","F_C[10].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_07_MOL,"MTR/O2T-07 Motor Overload","","F_C[10].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_07_MSD_OFF,"MTR/O2T-07 Disconnect Off","","F_C[10].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_07_OUTSERV,"MTR/O2T-07 Out of Service","","F_C[10].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_07_OVRIDE,"MTR/O2T-07 HMI Override","","F_C[10].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_07_PE_JAMMED,"MTR/O2T-07 PE Jam","","F_PE[1].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_07_VFD_FAULT,"MTR/O2T-07 VFD Fault","","F_C[10].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_08_CTCTR_FAULT,"MTR/O2T-08 Contactor Fault","","F_C[10].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_08_ENCODER_FAULT,"MTR/O2T-08 Encoder Fault","","F_C[10].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_08_MOL,"MTR/O2T-08 Motor Overload","","F_C[10].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_08_MSD_OFF,"MTR/O2T-08 Disconnect Off","","F_C[10].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_08_OUTSERV,"MTR/O2T-08 Out of Service","","F_C[10].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_08_OVRIDE,"MTR/O2T-08 HMI Override","","F_C[10].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_08_PE_JAMMED,"MTR/O2T-08 PE Jam","","F_PE[1].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_08_VFD_FAULT,"MTR/O2T-08 VFD Fault","","F_C[10].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_09_CTCTR_FAULT,"MTR/O2T-09 Contactor Fault","","F_C[10].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_09_ENCODER_FAULT,"MTR/O2T-09 Encoder Fault","","F_C[10].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_09_MOL,"MTR/O2T-09 Motor Overload","","F_C[10].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_09_MSD_OFF,"MTR/O2T-09 Disconnect Off","","F_C[10].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_09_OUTSERV,"MTR/O2T-09 Out of Service","","F_C[10].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_09_OVRIDE,"MTR/O2T-09 HMI Override","","F_C[10].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_09_PE_JAMMED,"MTR/O2T-09 PE Jam","","F_PE[1].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_09_VFD_FAULT,"MTR/O2T-09 VFD Fault","","F_C[10].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_10_CS_E_STOP,"MTR/O2T-10 CS E-Stop Active","","F_CS04[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_10_CS_E_STOP_RESET,"MTR/O2T-10 CS E-Stop Reset","","F_CS04[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_10_CTCTR_FAULT,"MTR/O2T-10 Contactor Fault","","F_C[10].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_10_ENCODER_FAULT,"MTR/O2T-10 Encoder Fault","","F_C[10].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_10_MOL,"MTR/O2T-10 Motor Overload","","F_C[10].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_10_MSD_OFF,"MTR/O2T-10 Disconnect Off","","F_C[10].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_10_OUTSERV,"MTR/O2T-10 Out of Service","","F_C[10].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_10_OVRIDE,"MTR/O2T-10 HMI Override","","F_C[10].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_10_PE_JAMMED,"MTR/O2T-10 PE Jam","","F_PE[1].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_10_VFD_FAULT,"MTR/O2T-10 VFD Fault","","F_C[10].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_11_CTCTR_FAULT,"MTR/O2T-11 Contactor Fault","","F_C[9].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_11_ENCODER_FAULT,"MTR/O2T-11 Encoder Fault","","F_C[9].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_11_MOL,"MTR/O2T-11 Motor Overload","","F_C[9].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_11_MSD_OFF,"MTR/O2T-11 Disconnect Off","","F_C[9].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_11_OUTSERV,"MTR/O2T-11 Out of Service","","F_C[10].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_11_OVRIDE,"MTR/O2T-11 HMI Override","","F_C[10].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_11_PE_JAMMED,"MTR/O2T-11 PE Jam","","F_PE[1].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_11_VFD_FAULT,"MTR/O2T-11 VFD Fault","","F_C[9].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_12_CS_E_STOP,"MTR/O2T-12 CS E-Stop Active","","F_CS04[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_12_CS_E_STOP_RESET,"MTR/O2T-12 CS E-Stop Reset","","F_CS04[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_12_CTCTR_FAULT,"MTR/O2T-12 Contactor Fault","","F_C[9].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_12_ENCODER_FAULT,"MTR/O2T-12 Encoder Fault","","F_C[9].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_12_MOL,"MTR/O2T-12 Motor Overload","","F_C[9].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_12_MSD_OFF,"MTR/O2T-12 Disconnect Off","","F_C[9].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_12_OUTSERV,"MTR/O2T-12 Out of Service","","F_C[9].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_12_OVRIDE,"MTR/O2T-12 HMI Override","","F_C[9].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_12_PE_JAMMED,"MTR/O2T-12 PE Jam","","F_PE[1].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_12_VFD_FAULT,"MTR/O2T-12 VFD Fault","","F_C[9].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_13_CTCTR_FAULT,"MTR/O2T-13 Contactor Fault","","F_C[9].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_13_ENCODER_FAULT,"MTR/O2T-13 Encoder Fault","","F_C[9].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_13_MOL,"MTR/O2T-13 Motor Overload","","F_C[9].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_13_MSD_OFF,"MTR/O2T-13 Disconnect Off","","F_C[9].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_13_OUTSERV,"MTR/O2T-13 Out of Service","","F_C[9].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_13_OVRIDE,"MTR/O2T-13 HMI Override","","F_C[9].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_13_PE_JAMMED,"MTR/O2T-13 PE Jam","","F_PE[1].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_13_VFD_FAULT,"MTR/O2T-13 VFD Fault","","F_C[9].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_14_CS_E_STOP,"MTR/O2T-14 CS E-Stop Active","","F_CS04[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_14_CS_E_STOP_RESET,"MTR/O2T-14 CS E-Stop Reset","","F_CS04[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_14_CTCTR_FAULT,"MTR/O2T-14 Contactor Fault","","F_C[9].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_14_ENCODER_FAULT,"MTR/O2T-14 Encoder Fault","","F_C[9].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_14_MOL,"MTR/O2T-14 Motor Overload","","F_C[9].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_14_MSD_OFF,"MTR/O2T-14 Disconnect Off","","F_C[9].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_14_OUTSERV,"MTR/O2T-14 Out of Service","","F_C[9].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_14_OVRIDE,"MTR/O2T-14 HMI Override","","F_C[9].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_14_PE_JAMMED,"MTR/O2T-14 PE Jam","","F_PE[1].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_14_VFD_FAULT,"MTR/O2T-14 VFD Fault","","F_C[9].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_15_CTCTR_FAULT,"MTR/O2T-15 Contactor Fault","","F_C[9].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_15_ENCODER_FAULT,"MTR/O2T-15 Encoder Fault","","F_C[9].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_15_MOL,"MTR/O2T-15 Motor Overload","","F_C[8].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_15_MSD_OFF,"MTR/O2T-15 Disconnect Off","","F_C[9].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_15_OUTSERV,"MTR/O2T-15 Out of Service","","F_C[9].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_15_OVRIDE,"MTR/O2T-15 HMI Override","","F_C[9].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_15_PE_JAMMED,"MTR/O2T-15 PE Jam","","F_PE[1].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_15_VFD_FAULT,"MTR/O2T-15 VFD Fault","","F_C[9].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_16_CTCTR_FAULT,"MTR/O2T-16 Contactor Fault","","F_C[8].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_16_ENCODER_FAULT,"MTR/O2T-16 Encoder Fault","","F_C[8].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_16_MOL,"MTR/O2T-16 Motor Overload","","F_C[8].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_16_MSD_OFF,"MTR/O2T-16 Disconnect Off","","F_C[8].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_16_OUTSERV,"MTR/O2T-16 Out of Service","","F_C[8].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_16_OVRIDE,"MTR/O2T-16 HMI Override","","F_C[8].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_16_PE_JAMMED,"MTR/O2T-16 PE Jam","","F_PE[1].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_16_VFD_FAULT,"MTR/O2T-16 VFD Fault","","F_C[8].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_17_CTCTR_FAULT,"MTR/O2T-17 Contactor Fault","","F_C[8].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_17_ENCODER_FAULT,"MTR/O2T-17 Encoder Fault","","F_C[8].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_17_MOL,"MTR/O2T-17 Motor Overload","","F_C[8].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_17_MSD_OFF,"MTR/O2T-17 Disconnect Off","","F_C[8].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_17_OUTSERV,"MTR/O2T-17 Out of Service","","F_C[8].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_17_OVRIDE,"MTR/O2T-17 HMI Override","","F_C[8].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_17_PE_JAMMED,"MTR/O2T-17 PE Jam","","F_PE[1].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_17_VFD_FAULT,"MTR/O2T-17 VFD Fault","","F_C[8].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_18_CS_E_STOP,"MTR/O2T-18 CS E-Stop Active","","F_CS05[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_18_CS_E_STOP_RESET,"MTR/O2T-18 CS E-Stop Reset","","F_CS05[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_18_CTCTR_FAULT,"MTR/O2T-18 Contactor Fault","","F_C[8].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_18_ENCODER_FAULT,"MTR/O2T-18 Encoder Fault","","F_C[8].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_18_JOG_REVERSE,"MTR/O2T-19 Jog Reverse","","F_MISC[0].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_O2T_18_MOL,"MTR/O2T-18 Motor Overload","","F_C[8].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_18_MSD_OFF,"MTR/O2T-18 Disconnect Off","","F_C[8].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_18_OUTSERV,"MTR/O2T-18 Out of Service","","F_C[8].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_18_OVRIDE,"MTR/O2T-18 HMI Override","","F_C[8].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_18_PE_JAMMED,"MTR/O2T-18 PE Jam","","F_PE[1].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O2T_18_VFD_FAULT,"MTR/O2T-18 VFD Fault","","F_C[8].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_17_CS_E_STOP,"MTR/O3T-17 CS E-Stop Active","","F_CS04[1].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_17_CS_E_STOP_RESET,"MTR/O3T-17 CS E-Stop Reset","","F_CS04[1].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_17_CTCTR_FAULT,"MTR/O3T-17 Contactor Fault","","F_C[30].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_17_ENCODER_FAULT,"MTR/O3T-17 Encoder Fault","","F_C[30].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_17_MOL,"MTR/O3T-17 Motor Overload","","F_C[30].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_17_MSD_OFF,"MTR/O3T-17 Disconnect Off","","F_C[30].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_17_OUTSERV,"MTR/O3T-17 Out of Service","","F_C[30].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_17_OVRIDE,"MTR/O3T-17 HMI Override","","F_C[30].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_17_PE_JAMMED,"MTR/O3T-17 PE Jam","","F_PE[4].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_17_VFD_FAULT,"MTR/O3T-17 VFD Fault","","F_C[30].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_18_CTCTR_FAULT,"MTR/O3T-18 Contactor Fault","","F_C[30].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_18_ENCODER_FAULT,"MTR/O3T-18 Encoder Fault","","F_C[30].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_18_MOL,"MTR/O3T-18 Motor Overload","","F_C[29].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_18_MSD_OFF,"MTR/O3T-18 Disconnect Off","","F_C[30].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_18_OUTSERV,"MTR/O3T-18 Out of Service","","F_C[30].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_18_OVRIDE,"MTR/O3T-18 HMI Override","","F_C[30].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_18_PE_JAMMED,"MTR/O3T-18 PE Jam","","F_PE[4].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_18_VFD_FAULT,"MTR/O3T-18 VFD Fault","","F_C[30].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_CS1_E_STOP,"MTR/O3T-19 CS-A E-Stop Active","","F_CS04[1].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_CS1_E_STOP1,"MTR/O3T-19 CS1 E-Stop Active","","F_CS04[1].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_CS1_E_STOP_RESET,"MTR/O3T-19 CS-A E-Stop Reset","","F_CS04[1].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_CS1_E_STOP_RESET1,"MTR/O3T-19 CS1 E-Stop Reset","","F_CS04[1].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_CS2_E_STOP,"MTR/O3T-19 CS-B E-Stop Active","","F_CS04[1].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_CS2_E_STOP1,"MTR/O3T-19 CS2 E-Stop Active","","F_CS04[1].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_CS2_E_STOP_RESET,"MTR/O3T-19 CS-B E-Stop Reset","","F_CS04[1].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_CS2_E_STOP_RESET1,"MTR/O3T-19 CS2 E-Stop Reset","","F_CS04[1].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_CTCTR_FAULT,"MTR/O3T-19 Contactor Fault","","F_C[29].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_ENCODER_FAULT,"MTR/O3T-19 Encoder Fault","","F_C[29].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_MOL,"MTR/O3T-19 Motor Overload","","F_C[29].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_MSD_OFF,"MTR/O3T-19 Disconnect Off","","F_C[29].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_OUTSERV,"MTR/O3T-19 Out of Service","","F_C[29].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_OVRIDE,"MTR/O3T-19 HMI Override","","F_C[29].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_PE_JAMMED,"MTR/O3T-19 PE Jam","","F_PE[4].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_19_VFD_FAULT,"MTR/O3T-19 VFD Fault","","F_C[29].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_20_CTCTR_FAULT,"MTR/O3T-20 Contactor Fault","","F_C[29].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_20_ENCODER_FAULT,"MTR/O3T-20 Encoder Fault","","F_C[29].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_20_MOL,"MTR/O3T-20 Motor Overload","","F_C[29].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_20_MSD_OFF,"MTR/O3T-20 Disconnect Off","","F_C[29].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_20_OUTSERV,"MTR/O3T-20 Out of Service","","F_C[29].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_20_OVRIDE,"MTR/O3T-20 HMI Override","","F_C[29].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_20_PE_JAMMED,"MTR/O3T-20 PE Jam","","F_PE[4].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_20_VFD_FAULT,"MTR/O3T-20 VFD Fault","","F_C[29].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_21_CTCTR_FAULT,"MTR/O3T-21 Contactor Fault","","F_C[29].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_21_ENCODER_FAULT,"MTR/O3T-21 Encoder Fault","","F_C[29].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_21_MOL,"MTR/O3T-21 Motor Overload","","F_C[29].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_21_MSD_OFF,"MTR/O3T-21 Disconnect Off","","F_C[29].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_21_OUTSERV,"MTR/O3T-21 Out of Service","","F_C[29].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_21_OVRIDE,"MTR/O3T-21 HMI Override","","F_C[29].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O3T_21_VFD_FAULT,"MTR/O3T-21 VFD Fault","","F_C[29].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_05_CTCTR_FAULT,"MTR/O4T-05 Contactor Fault","","F_C[18].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_05_ENCODER_FAULT,"MTR/O4T-05 Encoder Fault","","F_C[18].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_05_MOL,"MTR/O4T-05 Motor Overload","","F_C[18].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_05_MSD_OFF,"MTR/O4T-05 Disconnect Off","","F_C[18].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_05_OUTSERV,"MTR/O4T-05 Out of Service","","F_C[18].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_05_OVRIDE,"MTR/O4T-05 HMI Override","","F_C[18].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_05_PE_JAMMED,"MTR/O4T-05 PE Jam","","F_PE[2].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_05_VFD_FAULT,"MTR/O4T-05 VFD Fault","","F_C[18].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_06_CS_E_STOP,"MTR/O4T-06 CS E-Stop Active","","F_CS04[0].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_06_CS_E_STOP_RESET,"MTR/O4T-06 CS E-Stop Reset","","F_CS04[0].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_06_CTCTR_FAULT,"MTR/O4T-06 Contactor Fault","","F_C[18].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_06_ENCODER_FAULT,"MTR/O4T-06 Encoder Fault","","F_C[18].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_06_MOL,"MTR/O4T-06 Motor Overload","","F_C[18].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_06_MSD_OFF,"MTR/O4T-06 Disconnect Off","","F_C[18].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_06_OUTSERV,"MTR/O4T-06 Out of Service","","F_C[18].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_06_OVRIDE,"MTR/O4T-06 HMI Override","","F_C[18].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_06_PE_JAMMED,"MTR/O4T-06 PE Jam","","F_PE[2].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_06_VFD_FAULT,"MTR/O4T-06 VFD Fault","","F_C[18].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_07_CTCTR_FAULT,"MTR/O4T-07 Contactor Fault","","F_C[18].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_07_ENCODER_FAULT,"MTR/O4T-07 Encoder Fault","","F_C[18].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_07_MOL,"MTR/O4T-07 Motor Overload","","F_C[17].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_07_MSD_OFF,"MTR/O4T-07 Disconnect Off","","F_C[18].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_07_OUTSERV,"MTR/O4T-07 Out of Service","","F_C[18].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_07_OVRIDE,"MTR/O4T-07 HMI Override","","F_C[18].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_07_PE_JAMMED,"MTR/O4T-07 PE Jam","","F_PE[2].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_07_VFD_FAULT,"MTR/O4T-07 VFD Fault","","F_C[17].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_08_CTCTR_FAULT,"MTR/O4T-08 Contactor Fault","","F_C[17].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_08_ENCODER_FAULT,"MTR/O4T-08 Encoder Fault","","F_C[17].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_08_MOL,"MTR/O4T-08 Motor Overload","","F_C[17].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_08_MSD_OFF,"MTR/O4T-08 Disconnect Off","","F_C[17].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_08_OUTSERV,"MTR/O4T-08 Out of Service","","F_C[17].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_08_OVRIDE,"MTR/O4T-08 HMI Override","","F_C[17].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_08_PE_JAMMED,"MTR/O4T-08 PE Jam","","F_PE[2].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_08_VFD_FAULT,"MTR/O4T-08 VFD Fault","","F_C[17].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_09_CTCTR_FAULT,"MTR/O4T-09 Contactor Fault","","F_C[17].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_09_ENCODER_FAULT,"MTR/O4T-09 Encoder Fault","","F_C[17].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_09_MOL,"MTR/O4T-09 Motor Overload","","F_C[17].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_09_MSD_OFF,"MTR/O4T-09 Disconnect Off","","F_C[17].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_09_OUTSERV,"MTR/O4T-09 Out of Service","","F_C[17].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_09_OVRIDE,"MTR/O4T-09 HMI Override","","F_C[17].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_09_PE_JAMMED,"MTR/O4T-09 PE Jam","","F_PE[2].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_09_VFD_FAULT,"MTR/O4T-09 VFD Fault","","F_C[17].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_CS_E_STOP,"MTR/O4T-10 CS E-Stop Active","","F_CS04[1].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_CS_E_STOP_RESET,"MTR/O4T-10 CS E-Stop Reset","","F_CS04[1].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_CTCTR_FAULT,"MTR/O4T-10 Contactor Fault","","F_C[17].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_ENCODER_FAULT,"MTR/O4T-10 Encoder Fault","","F_C[17].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_MOL,"MTR/O4T-10 Motor Overload","","F_C[17].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_MSD_OFF,"MTR/O4T-10 Disconnect Off","","F_C[17].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_OUTSERV,"MTR/O4T-10 Out of Service","","F_C[17].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_OVRIDE,"MTR/O4T-10 HMI Override","","F_C[17].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_PE1_JAMMED,"MTR/O4T-10 PE-A Jam","","F_PE[2].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_PE1_JAMMED1,"MTR/O4T-10 PE1 Jam","","F_PE[2].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_PE2_JAMMED,"MTR/O4T-10 PE-B Jam","","F_PE[2].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_PE2_JAMMED1,"MTR/O4T-10 PE2 Jam","","F_PE[2].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_10_VFD_FAULT,"MTR/O4T-10 VFD Fault","","F_C[17].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_11_CTCTR_FAULT,"MTR/O4T-11 Contactor Fault","","F_C[17].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_11_ENCODER_FAULT,"MTR/O4T-11 Encoder Fault","","F_C[17].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_11_MOL,"MTR/O4T-11 Motor Overload","","F_C[17].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_11_MSD_OFF,"MTR/O4T-11 Disconnect Off","","F_C[17].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_11_OUTSERV,"MTR/O4T-11 Out of Service","","F_C[17].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_11_OVRIDE,"MTR/O4T-11 HMI Override","","F_C[17].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_11_PE_JAMMED,"MTR/O4T-11 PE Jam","","F_PE[2].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_11_VFD_FAULT,"MTR/O4T-11 VFD Fault","","F_C[17].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_12_CTCTR_FAULT,"MTR/O4T-12 Contactor Fault","","F_C[16].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_12_ENCODER_FAULT,"MTR/O4T-12 Encoder Fault","","F_C[16].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_12_MOL,"MTR/O4T-12 Motor Overload","","F_C[16].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_12_MSD_OFF,"MTR/O4T-12 Disconnect Off","","F_C[16].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_12_OUTSERV,"MTR/O4T-12 Out of Service","","F_C[17].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_12_OVRIDE,"MTR/O4T-12 HMI Override","","F_C[17].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_12_PE_JAMMED,"MTR/O4T-12 PE Jam","","F_PE[2].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_12_VFD_FAULT,"MTR/O4T-12 VFD Fault","","F_C[16].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_13_CTCTR_FAULT,"MTR/O4T-13 Contactor Fault","","F_C[16].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_13_ENCODER_FAULT,"MTR/O4T-13 Encoder Fault","","F_C[16].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_13_MOL,"MTR/O4T-13 Motor Overload","","F_C[16].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_13_MSD_OFF,"MTR/O4T-13 Disconnect Off","","F_C[16].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_13_OUTSERV,"MTR/O4T-13 Out of Service","","F_C[16].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_13_OVRIDE,"MTR/O4T-13 HMI Override","","F_C[16].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_13_PE_JAMMED,"MTR/O4T-13 PE Jam","","F_PE[2].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_13_VFD_FAULT,"MTR/O4T-13 VFD Fault","","F_C[16].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_16_CS_E_STOP,"MTR/O4T-16 CS E-Stop Active","","F_CS04[1].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_16_CS_E_STOP_RESET,"MTR/O4T-16 CS E-Stop Reset","","F_CS04[1].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_16_CTCTR_FAULT,"MTR/O4T-16 Contactor Fault","","F_C[29].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_16_ENCODER_FAULT,"MTR/O4T-16 Encoder Fault","","F_C[29].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_16_MOL,"MTR/O4T-16 Motor Overload","","F_C[29].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_16_MSD_OFF,"MTR/O4T-16 Disconnect Off","","F_C[29].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_16_OUTSERV,"MTR/O4T-16 Out of Service","","F_C[29].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_16_OVRIDE,"MTR/O4T-16 HMI Override","","F_C[29].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_16_PE_JAMMED,"MTR/O4T-16 PE Jam","","F_PE[4].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_16_VFD_FAULT,"MTR/O4T-16 VFD Fault","","F_C[29].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_17_CTCTR_FAULT,"MTR/O4T-17 Contactor Fault","","F_C[28].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_17_ENCODER_FAULT,"MTR/O4T-17 Encoder Fault","","F_C[28].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_17_MOL,"MTR/O4T-17 Motor Overload","","F_C[28].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_17_MSD_OFF,"MTR/O4T-17 Disconnect Off","","F_C[29].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_17_OUTSERV,"MTR/O4T-17 Out of Service","","F_C[29].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_17_OVRIDE,"MTR/O4T-17 HMI Override","","F_C[29].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_17_PE_JAMMED,"MTR/O4T-17 PE Jam","","F_PE[4].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_17_VFD_FAULT,"MTR/O4T-17 VFD Fault","","F_C[28].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_18_CTCTR_FAULT,"MTR/O4T-18 Contactor Fault","","F_C[28].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_18_ENCODER_FAULT,"MTR/O4T-18 Encoder Fault","","F_C[28].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_18_MOL,"MTR/O4T-18 Motor Overload","","F_C[28].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_18_MSD_OFF,"MTR/O4T-18 Disconnect Off","","F_C[28].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_18_OUTSERV,"MTR/O4T-18 Out of Service","","F_C[28].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_18_OVRIDE,"MTR/O4T-18 HMI Override","","F_C[28].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_18_PE_JAMMED,"MTR/O4T-18 PE Jam","","F_PE[4].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_18_VFD_FAULT,"MTR/O4T-18 VFD Fault","","F_C[28].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_19_CS1_E_STOP,"MTR/O4T-19 CS-A E-Stop Active","","F_CS04[1].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_19_CS1_E_STOP_RESET,"MTR/O4T-19 CS-A E-Stop Reset","","F_CS04[1].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_19_CS2_E_STOP,"MTR/O4T-19 CS-B E-Stop Active","","F_CS04[2].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_19_CS2_E_STOP_RESET,"MTR/O4T-19 CS-B E-Stop Reset","","F_CS04[2].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_19_CTCTR_FAULT,"MTR/O4T-19 Contactor Fault","","F_C[28].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_19_ENCODER_FAULT,"MTR/O4T-19 Encoder Fault","","F_C[28].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_19_MOL,"MTR/O4T-19 Motor Overload","","F_C[28].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_19_MSD_OFF,"MTR/O4T-19 Disconnect Off","","F_C[28].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_19_OUTSERV,"MTR/O4T-19 Out of Service","","F_C[28].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_19_OVRIDE,"MTR/O4T-19 HMI Override","","F_C[28].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_19_PE_JAMMED,"MTR/O4T-19 PE Jam","","F_PE[4].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_19_VFD_FAULT,"MTR/O4T-19 VFD Fault","","F_C[28].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_20_CTCTR_FAULT,"MTR/O4T-20 Contactor Fault","","F_C[28].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_20_ENCODER_FAULT,"MTR/O4T-20 Encoder Fault","","F_C[28].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_20_MOL,"MTR/O4T-20 Motor Overload","","F_C[28].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_20_MSD_OFF,"MTR/O4T-20 Disconnect Off","","F_C[28].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_20_OUTSERV,"MTR/O4T-20 Out of Service","","F_C[28].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_20_OVRIDE,"MTR/O4T-20 HMI Override","","F_C[28].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_20_PE_JAMMED,"MTR/O4T-20 PE Jam","","F_PE[4].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_20_VFD_FAULT,"MTR/O4T-20 VFD Fault","","F_C[28].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_CS1_E_STOP,"MTR/O4T-21 CS-A E-Stop Active","","F_CS04[1].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_CS1_E_STOP1,"MTR/O4T-21 CS1 E-Stop Active","","F_CS04[1].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_CS1_E_STOP_RESET,"MTR/O4T-21 CS-A E-Stop Reset","","F_CS04[1].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_CS1_E_STOP_RESET1,"MTR/O4T-21 CS1 E-Stop Reset","","F_CS04[1].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_CS2_E_STOP,"MTR/O4T-21 CS-B E-Stop Active","","F_CS04[2].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_CS2_E_STOP1,"MTR/O4T-21 CS2 E-Stop Active","","F_CS04[2].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_CS2_E_STOP_RESET,"MTR/O4T-21 CS-B E-Stop Reset","","F_CS04[2].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_CS2_E_STOP_RESET1,"MTR/O4T-21 CS2 E-Stop Reset","","F_CS04[2].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_CTCTR_FAULT,"MTR/O4T-21 Contactor Fault","","F_C[28].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_ENCODER_FAULT,"MTR/O4T-21 Encoder Fault","","F_C[28].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_MOL,"MTR/O4T-21 Motor Overload","","F_C[28].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_MSD_OFF,"MTR/O4T-21 Disconnect Off","","F_C[28].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_OUTSERV,"MTR/O4T-21 Out of Service","","F_C[28].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_OVRIDE,"MTR/O4T-21 HMI Override","","F_C[28].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_PE_JAMMED,"MTR/O4T-21 PE Jam","","F_PE[4].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_21_VFD_FAULT,"MTR/O4T-21 VFD Fault","","F_C[28].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_22_CTCTR_FAULT,"MTR/O4T-22 Contactor Fault","","F_C[27].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_22_ENCODER_FAULT,"MTR/O4T-22 Encoder Fault","","F_C[27].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_22_MOL,"MTR/O4T-22 Motor Overload","","F_C[27].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_22_MSD_OFF,"MTR/O4T-22 Disconnect Off","","F_C[27].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_22_OUTSERV,"MTR/O4T-22 Out of Service","","F_C[27].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_22_OVRIDE,"MTR/O4T-22 HMI Override","","F_C[27].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_22_PE_JAMMED,"MTR/O4T-22 PE Jam","","F_PE[4].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4T_22_VFD_FAULT,"MTR/O4T-22 VFD Fault","","F_C[27].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_O4_04_ENCODER_FAULT,"MTR/O4-04 Encoder Fault","","F_MISC[0].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,F_OH,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_OL,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_P,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_PE,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_PLC,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_BATTERY_FAULT,"CNTRL/PLC-101 Battery Fault","","F_PLC[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_CNTRL_MJR_FAULT,"CNTRL/PLC-101 Controller Major Fault","","F_PLC[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_FORCES_ON,"CNTRL/PLC-101 Forces On","","F_PLC[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_IO_NOT_OK,"CNTRL/PLC-101 IO Fault","","F_PLC[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_KSW_REM,"CNTRL/PLC-101 Keyswitch in Remote Position","","F_PLC[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_KSW_RUN,"CNTRL/PLC-101 Keyswitch in Run Position","","F_PLC[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_KSW_UNK,"CNTRL/PLC-101 Keyswitch in Unknown Position","","F_PLC[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_MSG_FROM_SAM_FAIL,"CNTRL/PLC-101 SAM Failed to Respond","","F_PLC[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_MSG_TO_UL_FAIL,"CNTRL/PLC-101 Upper Level Message Failure","","F_PLC[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_MSG_TO_UL_FULL,"CNTRL/PLC-101 Upper Level Message FIFO Full","","F_PLC[0].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_MSG_TO_UL_SAM_FULL,"CNTRL/PLC-101 Upper Level Message SAM FIFO Full","","F_PLC[0].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_PRG_MJR_FAULT,"CNTRL/PLC-101 Program Major Fault","","F_PLC[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_REDUNDANCY_FAULT,"CNTRL/PLC-101 Redundancy Fault","","F_PLC[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_SCAN_CRTCL,"CNTRL/PLC-101 Scan Time Critical","","F_PLC[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_PLC_101_SCAN_HI,"CNTRL/PLC-101 Scan Time High","","F_PLC[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_08_CTCTR_FAULT,"MTR/T5T-08 Contactor Fault","","F_C[19].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_08_ENCODER_FAULT,"MTR/T5T-08 Encoder Fault","","F_C[19].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_08_MOL,"MTR/T5T-08 Motor Overload","","F_C[19].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_08_MSD_OFF,"MTR/T5T-08 Disconnect Off","","F_C[19].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_08_OUTSERV,"MTR/T5T-08 Out of Service","","F_C[19].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_08_OVRIDE,"MTR/T5T-08 HMI Override","","F_C[19].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_08_PE_JAMMED,"MTR/T5T-08 PE Jam","","F_PE[2].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_08_VFD_FAULT,"MTR/T5T-08 VFD Fault","","F_C[19].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_09_CS_E_STOP,"MTR/T5T-09 CS E-Stop Active","","F_CS05[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_09_CS_E_STOP_RESET,"MTR/T5T-09 CS E-Stop Reset","","F_CS05[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_09_CTCTR_FAULT,"MTR/T5T-09 Contactor Fault","","F_C[19].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_09_ENCODER_FAULT,"MTR/T5T-09 Encoder Fault","","F_C[19].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_09_JOG_REVERSE,"MTR/T5T-09 Jog Reverse","","F_MISC[0].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_T5T_09_MOL,"MTR/T5T-09 Motor Overload","","F_C[19].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_09_MSD_OFF,"MTR/T5T-09 Disconnect Off","","F_C[19].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_09_OUTSERV,"MTR/T5T-09 Out of Service","","F_C[19].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_09_OVRIDE,"MTR/T5T-09 HMI Override","","F_C[19].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_09_PE_JAMMED,"MTR/T5T-09 PE Jam","","F_PE[2].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_T5T_09_VFD_FAULT,"MTR/T5T-09 VFD Fault","","F_C[19].9","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,F_TPE,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_VCOM,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,F_VS,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_CS_E_STOP,"MTR/XO1-01 CS E-Stop Active","","F_CS04[1].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_CS_E_STOP_RESET,"MTR/XO1-01 CS E-Stop Reset","","F_CS04[1].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_CTCTR_FAULT,"MTR/XO1-01 Contactor Fault","","F_C[19].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_ENCODER_FAULT,"MTR/XO1-01 Encoder Fault","","F_C[19].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_HSD_DIVERT_ALL,"HSD/XO1-01 Divert All Mode","","F_HSD[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_HSD_DIVERT_HALF,"HSD/XO1-01 Divert Half Mode","","F_HSD[0].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_HSD_FAIL_TO_EXTEND,"HSD/XO1-01 Failed To Extend","","F_HSD[0].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_HSD_FAIL_TO_RETRACT,"HSD/XO1-01 Failed to Retract","","F_HSD[0].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_HSD_FAULT,"HSD/XO1-01 Fault","","F_HSD[0].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_HSD_IP_DISC_OFF,"HSD/XO1-01 Interface Panel Disconnect Off","","F_HSD[0].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_HSD_MSD_OFF,"HSD/XO1-01 Motor Disconnect Off","","F_HSD[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_HSD_NOT_IN_AUTO,"HSD/XO1-01 Not in Auto","","F_HSD[0].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_HSD_OUTSERV,"HSD/XO1-01 Out of Service","","F_HSD[0].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_HSD_UNKNOWN_POS,"HSD/XO1-01 Unknown Position","","F_HSD[0].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_MOL,"MTR/XO1-01 Motor Overload","","F_C[19].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_MSD_OFF,"MTR/XO1-01 Disconnect Off","","F_C[19].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_OUTSERV,"MTR/XO1-01 Out of Service","","F_C[19].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_OVRIDE,"MTR/XO1-01 HMI Override","","F_C[19].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_PE1_JAMMED,"MTR/XO1-01 PE-A Jam","","F_PE[2].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_PE1_JAMMED1,"MTR/XO1-01 PE1 Jam","","F_PE[2].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_PE2_JAMMED,"MTR/XO1-01 PE-B Jam","","F_PE[2].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_PE2_JAMMED1,"MTR/XO1-01 PE2 Jam","","F_PE[2].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_PE_JAMMED,"MTR/XO1-01 PE Jam","","F_PE[2].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_01_VFD_FAULT,"MTR/XO1-01 VFD Fault","","F_C[19].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_02_CTCTR_FAULT,"MTR/XO1-02 Contactor Fault","","F_C[18].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_02_ENCODER_FAULT,"MTR/XO1-02 Encoder Fault","","F_C[18].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_02_MOL,"MTR/XO1-02 Motor Overload","","F_C[18].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_02_MSD_OFF,"MTR/XO1-02 Disconnect Off","","F_C[18].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_02_OUTSERV,"MTR/XO1-02 Out of Service","","F_C[18].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_02_OVRIDE,"MTR/XO1-02 HMI Override","","F_C[19].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_02_PE_JAMMED,"MTR/XO1-02 PE Jam","","F_PE[2].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_02_VFD_FAULT,"MTR/XO1-02 VFD Fault","","F_C[18].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_03_CTCTR_FAULT,"MTR/XO1-03 Contactor Fault","","F_C[18].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_03_ENCODER_FAULT,"MTR/XO1-03 Encoder Fault","","F_C[18].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_03_MOL,"MTR/XO1-03 Motor Overload","","F_C[18].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_03_MSD_OFF,"MTR/XO1-03 Disconnect Off","","F_C[18].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_03_OUTSERV,"MTR/XO1-03 Out of Service","","F_C[18].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_03_OVRIDE,"MTR/XO1-03 HMI Override","","F_C[18].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_03_PE_JAMMED,"MTR/XO1-03 PE Jam","","F_PE[2].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_03_VFD_FAULT,"MTR/XO1-03 VFD Fault","","F_C[18].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_HSD_DIVERT_ALL,"HSD/XO1- Divert All Mode","","F_HSD[0].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_HSD_DIVERT_HALF,"HSD/XO1- Divert Half Mode","","F_HSD[0].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_HSD_FAIL_TO_EXTEND,"HSD/XO1- Failed To Extend","","F_HSD[0].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_HSD_FAIL_TO_RETRACT,"HSD/XO1- Failed to Retract","","F_HSD[0].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_HSD_FAULT,"HSD/XO1- Fault","","F_HSD[0].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_HSD_IP_DISC_OFF,"HSD/XO1- Interface Panel Disconnect Off","","F_HSD[0].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_HSD_MSD_OFF,"HSD/XO1- Motor Disconnect Off","","F_HSD[0].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_HSD_NOT_IN_AUTO,"HSD/XO1- Not in Auto","","F_HSD[0].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_HSD_OUTSERV,"HSD/XO1- Out of Service","","F_HSD[0].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_HSD_PROX_OVR,"HSD/XO1- Home Prox Override","","F_HSD[0].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO1_HSD_UNKNOWN_POS,"HSD/XO1- Unknown Position","","F_HSD[0].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_CTCTR_FAULT,"MTR/XO2-01 Contactor Fault","","F_C[20].20","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_ENCODER_FAULT,"MTR/XO2-01 Encoder Fault","","F_C[20].21","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_HSD_DIVERT_ALL,"HSD/XO2-01 Divert All Mode","","F_HSD[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_HSD_DIVERT_HALF,"HSD/XO2-01 Divert Half Mode","","F_HSD[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_HSD_FAIL_TO_EXTEND,"HSD/XO2-01 Failed To Extend","","F_HSD[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_HSD_FAIL_TO_RETRACT,"HSD/XO2-01 Failed to Retract","","F_HSD[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_HSD_FAULT,"HSD/XO2-01 Fault","","F_HSD[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_HSD_IP_DISC_OFF,"HSD/XO2-01 Interface Panel Disconnect Off","","F_HSD[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_HSD_MSD_OFF,"HSD/XO2-01 Motor Disconnect Off","","F_HSD[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_HSD_NOT_IN_AUTO,"HSD/XO2-01 Not in Auto","","F_HSD[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_HSD_OUTSERV,"HSD/XO2-01 Out of Service","","F_HSD[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_HSD_UNKNOWN_POS,"HSD/XO2-01 Unknown Position","","F_HSD[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_MOL,"MTR/XO2-01 Motor Overload","","F_C[20].18","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_MSD_OFF,"MTR/XO2-01 Disconnect Off","","F_C[20].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_OUTSERV,"MTR/XO2-01 Out of Service","","F_C[20].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_OVRIDE,"MTR/XO2-01 HMI Override","","F_C[20].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_PE_JAMMED,"MTR/XO2-01 PE Jam","","F_PE[3].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_01_VFD_FAULT,"MTR/XO2-01 VFD Fault","","F_C[20].19","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_02_CS_E_STOP,"MTR/XO2-02 CS E-Stop Active","","F_CS04[1].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_02_CS_E_STOP_RESET,"MTR/XO2-02 CS E-Stop Reset","","F_CS04[1].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_02_CTCTR_FAULT,"MTR/XO2-02 Contactor Fault","","F_C[20].13","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_02_ENCODER_FAULT,"MTR/XO2-02 Encoder Fault","","F_C[20].14","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_02_MOL,"MTR/XO2-02 Motor Overload","","F_C[20].11","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_02_MSD_OFF,"MTR/XO2-02 Disconnect Off","","F_C[20].15","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_02_OUTSERV,"MTR/XO2-02 Out of Service","","F_C[20].16","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_02_OVRIDE,"MTR/XO2-02 HMI Override","","F_C[20].17","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_02_PE_JAMMED,"MTR/XO2-02 PE Jam","","F_PE[3].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_02_VFD_FAULT,"MTR/XO2-02 VFD Fault","","F_C[20].12","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_03_CTCTR_FAULT,"MTR/XO2-03 Contactor Fault","","F_C[20].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_03_ENCODER_FAULT,"MTR/XO2-03 Encoder Fault","","F_C[20].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_03_MOL,"MTR/XO2-03 Motor Overload","","F_C[20].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_03_MSD_OFF,"MTR/XO2-03 Disconnect Off","","F_C[20].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_03_OUTSERV,"MTR/XO2-03 Out of Service","","F_C[20].9","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_03_OVRIDE,"MTR/XO2-03 HMI Override","","F_C[20].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_03_PE_JAMMED,"MTR/XO2-03 PE Jam","","F_PE[3].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_03_VFD_FAULT,"MTR/XO2-03 VFD Fault","","F_C[20].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_04_CTCTR_FAULT,"MTR/XO2-04 Contactor Fault","","F_C[19].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_04_ENCODER_FAULT,"MTR/XO2-04 Encoder Fault","","F_C[20].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_04_MOL,"MTR/XO2-04 Motor Overload","","F_C[19].29","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_04_MSD_OFF,"MTR/XO2-04 Disconnect Off","","F_C[20].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_04_OUTSERV,"MTR/XO2-04 Out of Service","","F_C[20].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_04_OVRIDE,"MTR/XO2-04 HMI Override","","F_C[20].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_04_PE_JAMMED,"MTR/XO2-04 PE Jam","","F_PE[2].31","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_04_VFD_FAULT,"MTR/XO2-04 VFD Fault","","F_C[19].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_05_CS_E_STOP,"MTR/XO2-05 CS E-Stop Active","","F_CS05[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_05_CS_E_STOP_RESET,"MTR/XO2-05 CS E-Stop Reset","","F_CS05[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_05_CTCTR_FAULT,"MTR/XO2-05 Contactor Fault","","F_C[19].24","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_05_ENCODER_FAULT,"MTR/XO2-05 Encoder Fault","","F_C[19].25","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_05_JOG_REVERSE,"MTR/XO2-05 Jog Reverse","","F_MISC[0].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,F_XO2_05_MOL,"MTR/XO2-05 Motor Overload","","F_C[19].22","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_05_MSD_OFF,"MTR/XO2-05 Disconnect Off","","F_C[19].26","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_05_OUTSERV,"MTR/XO2-05 Out of Service","","F_C[19].27","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_05_OVRIDE,"MTR/XO2-05 HMI Override","","F_C[19].28","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_05_PE_JAMMED,"MTR/XO2-05 PE Jam","","F_PE[2].30","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_05_VFD_FAULT,"MTR/XO2-05 VFD Fault","","F_C[19].23","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_HSD_DIVERT_ALL,"HSD/XO2- Divert All Mode","","F_HSD[0].3","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_HSD_DIVERT_HALF,"HSD/XO2- Divert Half Mode","","F_HSD[0].4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_HSD_FAIL_TO_EXTEND,"HSD/XO2- Failed To Extend","","F_HSD[0].7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_HSD_FAIL_TO_RETRACT,"HSD/XO2- Failed to Retract","","F_HSD[0].8","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_HSD_FAULT,"HSD/XO2- Fault","","F_HSD[0].10","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_HSD_IP_DISC_OFF,"HSD/XO2- Interface Panel Disconnect Off","","F_HSD[0].1","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_HSD_MSD_OFF,"HSD/XO2- Motor Disconnect Off","","F_HSD[0].0","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_HSD_NOT_IN_AUTO,"HSD/XO2- Not in Auto","","F_HSD[0].5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_HSD_OUTSERV,"HSD/XO2- Out of Service","","F_HSD[0].2","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_HSD_PROX_OVR,"HSD/XO2- Home Prox Override","","F_HSD[0].6","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,F_XO2_HSD_UNKNOWN_POS,"HSD/XO2- Unknown Position","","F_HSD[0].9","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,G_ATR,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,G_BDS,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,G_BM1_01_STS,"MTR/BM1-01 Status","","G_C[37]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_02_STS,"MTR/BM1-02 Status","","G_C[36]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_03_STS,"MTR/BM1-03 Status","","G_C[35]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_04_STS,"MTR/BM1-04 Status","","G_C[34]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_05_STS,"MTR/BM1-05 Status","","G_C[33]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_06_STS,"MTR/BM1-06 Status","","G_C[32]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_07_STS,"MTR/BM1-07 Status","","G_C[31]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_08_STS,"MTR/BM1-08 Status","","G_C[30]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_09_STS,"MTR/BM1-09 Status","","G_C[29]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_10_STS,"MTR/BM1-10 Status","","G_C[28]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_11_STS,"MTR/BM1-11 Status","","G_C[27]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_12_STS,"MTR/BM1-12 Status","","G_C[26]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_13_STS,"MTR/BM1-13 Status","","G_C[25]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_14_STS,"MTR/BM1-14 Status","","G_C[24]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_15_STS,"MTR/BM1-15 Status","","G_C[23]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_16_STS,"MTR/BM1-16 Status","","G_C[22]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_17_STS,"MTR/BM1-17 Status","","G_C[21]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_18_STS,"MTR/BM1-18 Status","","G_C[20]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_19_STS,"MTR/BM1-19 Status","","G_C[19]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_20_STS,"MTR/BM1-20 Status","","G_C[18]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_21_STS,"MTR/BM1-21 Status","","G_C[17]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_22_STS,"MTR/BM1-22 Status","","G_C[16]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_23_STS,"MTR/BM1-23 Status","","G_C[15]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_24_STS,"MTR/BM1-24 Status","","G_C[14]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_25_STS,"MTR/BM1-25 Status","","G_C[13]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_26_STS,"MTR/BM1-26 Status","","G_C[12]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_27_STS,"MTR/BM1-27 Status","","G_C[11]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_28_STS,"MTR/BM1-28 Status","","G_C[10]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_29_STS,"MTR/BM1-29 Status","","G_C[9]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_30_STS,"MTR/BM1-30 Status","","G_C[8]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_31_STS,"MTR/BM1-31 Status","","G_C[7]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_32_STS,"MTR/BM1-32 Status","","G_C[6]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_33_STS,"MTR/BM1-33 Status","","G_C[5]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_34_STS,"MTR/BM1-34 Status","","G_C[4]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_35_STS,"MTR/BM1-35 Status","","G_C[3]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_36_STS,"MTR/BM1-36 Status","","G_C[2]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_37_STS,"MTR/BM1-37 Status","","G_C[1]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_BM1_38_STS,"MTR/BM1-38 Status","","G_C[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,G_BSD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,G_C,"HMI Base Tag Array","DINT[142]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,G_C2T_12_STS,"MTR/C2T-12 Status","","G_C[58]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_C2T_13_STS,"MTR/C2T-13 Status","","G_C[57]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_C2T_14_STS,"MTR/C2T-14 Status","","G_C[56]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_C2T_15_STS,"MTR/C2T-15 Status","","G_C[55]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_C2T_16_STS,"MTR/C2T-16 Status","","G_C[54]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_C2T_17_STS,"MTR/C2T-17 Status","","G_C[53]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL12T_35_STS,"MTR/CL12T-35 Status","","G_C[140]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL12T_36_STS,"MTR/CL12T-36 Status","","G_C[139]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_01_STS,"MTR/CL1T-01 Status","","G_C[121]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_02_STS,"MTR/CL1T-02 Status","","G_C[120]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_03_STS,"MTR/CL1T-03 Status","","G_C[119]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_04_STS,"MTR/CL1T-04 Status","","G_C[118]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_05_STS,"MTR/CL1T-05 Status","","G_C[117]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_06_STS,"MTR/CL1T-06 Status","","G_C[116]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_07_STS,"MTR/CL1T-07 Status","","G_C[115]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_08_STS,"MTR/CL1T-08 Status","","G_C[114]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_09_STS,"MTR/CL1T-09 Status","","G_C[113]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_10_STS,"MTR/CL1T-10 Status","","G_C[112]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_11_STS,"MTR/CL1T-11 Status","","G_C[111]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_12_STS,"MTR/CL1T-12 Status","","G_C[110]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_13_STS,"MTR/CL1T-13 Status","","G_C[109]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_14_STS,"MTR/CL1T-14 Status","","G_C[108]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_15_STS,"MTR/CL1T-15 Status","","G_C[107]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_16_STS,"MTR/CL1T-16 Status","","G_C[106]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_17_STS,"MTR/CL1T-17 Status","","G_C[105]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_18_STS,"MTR/CL1T-18 Status","","G_C[104]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_19_STS,"MTR/CL1T-19 Status","","G_C[103]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_20_STS,"MTR/CL1T-20 Status","","G_C[102]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_21_STS,"MTR/CL1T-21 Status","","G_C[101]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_22_STS,"MTR/CL1T-22 Status","","G_C[100]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_23_STS,"MTR/CL1T-23 Status","","G_C[99]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_24_STS,"MTR/CL1T-24 Status","","G_C[98]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_25_STS,"MTR/CL1T-25 Status","","G_C[97]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL1T_26_STS,"MTR/CL1T-26 Status","","G_C[96]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL2T_01_STS,"MTR/CL2T-01 Status","","G_C[67]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL2T_02_STS,"MTR/CL2T-02 Status","","G_C[66]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL2T_03_STS,"MTR/CL2T-03 Status","","G_C[65]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL2T_04_STS,"MTR/CL2T-04 Status","","G_C[64]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL2T_05_STS,"MTR/CL2T-05 Status","","G_C[63]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL2T_06_STS,"MTR/CL2T-06 Status","","G_C[62]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL2T_07_STS,"MTR/CL2T-07 Status","","G_C[61]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL2T_08_STS,"MTR/CL2T-08 Status","","G_C[60]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL2T_09_STS,"MTR/CL2T-09 Status","","G_C[59]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL3T_01_STS,"MTR/CL3T-01 Status","","G_C[75]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL3T_02_STS,"MTR/CL3T-02 Status","","G_C[74]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL3T_03_STS,"MTR/CL3T-03 Status","","G_C[73]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL3T_04_STS,"MTR/CL3T-04 Status","","G_C[72]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL3T_05_STS,"MTR/CL3T-05 Status","","G_C[71]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL3T_06_STS,"MTR/CL3T-06 Status","","G_C[70]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL3T_07_STS,"MTR/CL3T-07 Status","","G_C[69]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_CL3T_08_STS,"MTR/CL3T-08 Status","","G_C[68]","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,G_CS,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,G_CTX,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,G_DOOR,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,G_HCD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,G_HSD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,G_HX1T_06_STS,"MTR/HX1T-06 Status","","G_C[126]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_HX1T_07_STS,"MTR/HX1T-07 Status","","G_C[125]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_HX1T_08_STS,"MTR/HX1T-08 Status","","G_C[124]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_HX1T_09_STS,"MTR/HX1T-09 Status","","G_C[123]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_HX1T_10A_STS,"MTR/HX1T-10A Status","","G_C[95]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_HX1T_10_STS,"MTR/HX1T-10 Status","","G_C[122]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_HX1T_11_STS,"MTR/HX1T-11 Status","","G_C[119]","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,G_ISD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,G_L3,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,G_MCP,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,G_MCP_01_STS,"PNL/MCP-01 Status","","G_MCP[1]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_MCP_02_STS,"PNL/MCP-02 Status","","G_MCP[2]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_MCP_03_STS,"PNL/MCP-03 Status","","G_MCP[3]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_MCP_16_STS,"PNL/MCP-16 Status","","G_MCP[4]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_MCP_BM1_STS,"PNL/MCP-BM1 Status","","G_MCP[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,G_MEC,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,G_MU,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,G_O2T_04_STS,"MTR/O2T-04 Status","","G_C[52]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_05_STS,"MTR/O2T-05 Status","","G_C[51]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_06_STS,"MTR/O2T-06 Status","","G_C[50]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_07_STS,"MTR/O2T-07 Status","","G_C[49]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_08_STS,"MTR/O2T-08 Status","","G_C[48]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_09_STS,"MTR/O2T-09 Status","","G_C[47]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_10_STS,"MTR/O2T-10 Status","","G_C[46]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_11_STS,"MTR/O2T-11 Status","","G_C[45]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_12_STS,"MTR/O2T-12 Status","","G_C[44]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_13_STS,"MTR/O2T-13 Status","","G_C[43]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_14_STS,"MTR/O2T-14 Status","","G_C[42]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_15_STS,"MTR/O2T-15 Status","","G_C[41]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_16_STS,"MTR/O2T-16 Status","","G_C[40]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_17_STS,"MTR/O2T-17 Status","","G_C[39]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O2T_18_STS,"MTR/O2T-18 Status","","G_C[38]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O3T_17_STS,"MTR/O3T-17 Status","","G_C[138]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O3T_18_STS,"MTR/O3T-18 Status","","G_C[137]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O3T_19_STS,"MTR/O3T-19 Status","","G_C[136]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O3T_20_STS,"MTR/O3T-20 Status","","G_C[135]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O3T_21_STS,"MTR/O3T-21 Status","","G_C[134]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_05_STS,"MTR/O4T-05 Status","","G_C[84]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_06_STS,"MTR/O4T-06 Status","","G_C[83]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_07_STS,"MTR/O4T-07 Status","","G_C[82]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_08_STS,"MTR/O4T-08 Status","","G_C[81]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_09_STS,"MTR/O4T-09 Status","","G_C[80]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_10_STS,"MTR/O4T-10 Status","","G_C[79]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_11_STS,"MTR/O4T-11 Status","","G_C[78]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_12_STS,"MTR/O4T-12 Status","","G_C[77]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_13_STS,"MTR/O4T-13 Status","","G_C[76]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_16_STS,"MTR/O4T-16 Status","","G_C[133]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_17_STS,"MTR/O4T-17 Status","","G_C[132]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_18_STS,"MTR/O4T-18 Status","","G_C[131]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_19_STS,"MTR/O4T-19 Status","","G_C[130]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_20_STS,"MTR/O4T-20 Status","","G_C[129]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_21_STS,"MTR/O4T-21 Status","","G_C[128]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_O4T_22_STS,"MTR/O4T-22 Status","","G_C[127]","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,G_P,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,G_T5T_08_STS,"MTR/T5T-08 Status","","G_C[89]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_T5T_09_STS,"MTR/T5T-09 Status","","G_C[88]","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,G_VS,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,G_XO1_01_HSD_POS,"HSD/XO1-01 Position","","G_HSD[3]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO1_01_HSD_STS,"HSD/XO1-01 Status","","G_HSD[2]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO1_01_STS,"MTR/XO1-01 Status","","G_C[87]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO1_02_STS,"MTR/XO1-02 Status","","G_C[86]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO1_03_STS,"MTR/XO1-03 Status","","G_C[85]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO1_HSD_POS,"HSD/XO1- Position","","G_HSD[3]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO1_HSD_STS,"HSD/XO1- Status","","G_HSD[2]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO2_01_HSD_POS,"HSD/XO2-01 Position","","G_HSD[1]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO2_01_HSD_STS,"HSD/XO2-01 Status","","G_HSD[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO2_01_STS,"MTR/XO2-01 Status","","G_C[94]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO2_02_STS,"MTR/XO2-02 Status","","G_C[93]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO2_03_STS,"MTR/XO2-03 Status","","G_C[92]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO2_04_STS,"MTR/XO2-04 Status","","G_C[91]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO2_05_STS,"MTR/XO2-05 Status","","G_C[90]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO2_HSD_POS,"HSD/XO2- Position","","G_HSD[1]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,G_XO2_HSD_STS,"HSD/XO2- Status","","G_HSD[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,HMI_BDS,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_01_OUTSERV_REQ,"MTR/BM1-01 Out of Service Request","","HMI_C[2].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_01_OVRIDE_REQ,"MTR/BM1-01 HMI Override Request","","HMI_C[2].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_02_OUTSERV_REQ,"MTR/BM1-02 Out of Service Request","","HMI_C[2].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_02_OVRIDE_REQ,"MTR/BM1-02 HMI Override Request","","HMI_C[2].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_03_OUTSERV_REQ,"MTR/BM1-03 Out of Service Request","","HMI_C[2].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_03_OVRIDE_REQ,"MTR/BM1-03 HMI Override Request","","HMI_C[2].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_04_OUTSERV_REQ,"MTR/BM1-04 Out of Service Request","","HMI_C[2].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_04_OVRIDE_REQ,"MTR/BM1-04 HMI Override Request","","HMI_C[2].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_05_OUTSERV_REQ,"MTR/BM1-05 Out of Service Request","","HMI_C[2].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_05_OVRIDE_REQ,"MTR/BM1-05 HMI Override Request","","HMI_C[2].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_06_OUTSERV_REQ,"MTR/BM1-06 Out of Service Request","","HMI_C[2].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_06_OVRIDE_REQ,"MTR/BM1-06 HMI Override Request","","HMI_C[2].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_07_OUTSERV_REQ,"MTR/BM1-07 Out of Service Request","","HMI_C[1].30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_07_OVRIDE_REQ,"MTR/BM1-07 HMI Override Request","","HMI_C[1].31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_08_OUTSERV_REQ,"MTR/BM1-08 Out of Service Request","","HMI_C[1].28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_08_OVRIDE_REQ,"MTR/BM1-08 HMI Override Request","","HMI_C[1].29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_09_OUTSERV_REQ,"MTR/BM1-09 Out of Service Request","","HMI_C[1].26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_09_OVRIDE_REQ,"MTR/BM1-09 HMI Override Request","","HMI_C[1].27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_10_OUTSERV_REQ,"MTR/BM1-10 Out of Service Request","","HMI_C[1].24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_10_OVRIDE_REQ,"MTR/BM1-10 HMI Override Request","","HMI_C[1].25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_11_OUTSERV_REQ,"MTR/BM1-11 Out of Service Request","","HMI_C[1].22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_11_OVRIDE_REQ,"MTR/BM1-11 HMI Override Request","","HMI_C[1].23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_12_OUTSERV_REQ,"MTR/BM1-12 Out of Service Request","","HMI_C[1].20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_12_OVRIDE_REQ,"MTR/BM1-12 HMI Override Request","","HMI_C[1].21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_13_OUTSERV_REQ,"MTR/BM1-13 Out of Service Request","","HMI_C[1].18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_13_OVRIDE_REQ,"MTR/BM1-13 HMI Override Request","","HMI_C[1].19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_14_OUTSERV_REQ,"MTR/BM1-14 Out of Service Request","","HMI_C[1].16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_14_OVRIDE_REQ,"MTR/BM1-14 HMI Override Request","","HMI_C[1].17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_15_OUTSERV_REQ,"MTR/BM1-15 Out of Service Request","","HMI_C[1].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_15_OVRIDE_REQ,"MTR/BM1-15 HMI Override Request","","HMI_C[1].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_16_OUTSERV_REQ,"MTR/BM1-16 Out of Service Request","","HMI_C[1].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_16_OVRIDE_REQ,"MTR/BM1-16 HMI Override Request","","HMI_C[1].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_17_OUTSERV_REQ,"MTR/BM1-17 Out of Service Request","","HMI_C[1].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_17_OVRIDE_REQ,"MTR/BM1-17 HMI Override Request","","HMI_C[1].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_18_OUTSERV_REQ,"MTR/BM1-18 Out of Service Request","","HMI_C[1].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_18_OVRIDE_REQ,"MTR/BM1-18 HMI Override Request","","HMI_C[1].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_19_OUTSERV_REQ,"MTR/BM1-19 Out of Service Request","","HMI_C[1].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_19_OVRIDE_REQ,"MTR/BM1-19 HMI Override Request","","HMI_C[1].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_20_OUTSERV_REQ,"MTR/BM1-20 Out of Service Request","","HMI_C[1].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_20_OVRIDE_REQ,"MTR/BM1-20 HMI Override Request","","HMI_C[1].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_21_OUTSERV_REQ,"MTR/BM1-21 Out of Service Request","","HMI_C[1].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_21_OVRIDE_REQ,"MTR/BM1-21 HMI Override Request","","HMI_C[1].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_22_OUTSERV_REQ,"MTR/BM1-22 Out of Service Request","","HMI_C[1].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_22_OVRIDE_REQ,"MTR/BM1-22 HMI Override Request","","HMI_C[1].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_23_OUTSERV_REQ,"MTR/BM1-23 Out of Service Request","","HMI_C[0].30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_23_OVRIDE_REQ,"MTR/BM1-23 HMI Override Request","","HMI_C[0].31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_24_OUTSERV_REQ,"MTR/BM1-24 Out of Service Request","","HMI_C[0].28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_24_OVRIDE_REQ,"MTR/BM1-24 HMI Override Request","","HMI_C[0].29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_25_OUTSERV_REQ,"MTR/BM1-25 Out of Service Request","","HMI_C[0].26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_25_OVRIDE_REQ,"MTR/BM1-25 HMI Override Request","","HMI_C[0].27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_26_OUTSERV_REQ,"MTR/BM1-26 Out of Service Request","","HMI_C[0].24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_26_OVRIDE_REQ,"MTR/BM1-26 HMI Override Request","","HMI_C[0].25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_27_OUTSERV_REQ,"MTR/BM1-27 Out of Service Request","","HMI_C[0].22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_27_OVRIDE_REQ,"MTR/BM1-27 HMI Override Request","","HMI_C[0].23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_28_OUTSERV_REQ,"MTR/BM1-28 Out of Service Request","","HMI_C[0].20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_28_OVRIDE_REQ,"MTR/BM1-28 HMI Override Request","","HMI_C[0].21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_29_OUTSERV_REQ,"MTR/BM1-29 Out of Service Request","","HMI_C[0].18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_29_OVRIDE_REQ,"MTR/BM1-29 HMI Override Request","","HMI_C[0].19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_30_OUTSERV_REQ,"MTR/BM1-30 Out of Service Request","","HMI_C[0].16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_30_OVRIDE_REQ,"MTR/BM1-30 HMI Override Request","","HMI_C[0].17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_31_OUTSERV_REQ,"MTR/BM1-31 Out of Service Request","","HMI_C[0].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_31_OVRIDE_REQ,"MTR/BM1-31 HMI Override Request","","HMI_C[0].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_32_OUTSERV_REQ,"MTR/BM1-32 Out of Service Request","","HMI_C[0].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_32_OVRIDE_REQ,"MTR/BM1-32 HMI Override Request","","HMI_C[0].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_33_OUTSERV_REQ,"MTR/BM1-33 Out of Service Request","","HMI_C[0].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_33_OVRIDE_REQ,"MTR/BM1-33 HMI Override Request","","HMI_C[0].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_34_OUTSERV_REQ,"MTR/BM1-34 Out of Service Request","","HMI_C[0].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_34_OVRIDE_REQ,"MTR/BM1-34 HMI Override Request","","HMI_C[0].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_35_OUTSERV_REQ,"MTR/BM1-35 Out of Service Request","","HMI_C[0].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_35_OVRIDE_REQ,"MTR/BM1-35 HMI Override Request","","HMI_C[0].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_36_OUTSERV_REQ,"MTR/BM1-36 Out of Service Request","","HMI_C[0].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_36_OVRIDE_REQ,"MTR/BM1-36 HMI Override Request","","HMI_C[0].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_37_OUTSERV_REQ,"MTR/BM1-37 Out of Service Request","","HMI_C[0].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_37_OVRIDE_REQ,"MTR/BM1-37 HMI Override Request","","HMI_C[0].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_38_OUTSERV_REQ,"MTR/BM1-38 Out of Service Request","","HMI_C[0].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_BM1_38_OVRIDE_REQ,"MTR/BM1-38 HMI Override Request","","HMI_C[0].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,HMI_C,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
ALIAS,,HMI_C2T_12_OUTSERV_REQ,"MTR/C2T-12 Out of Service Request","","HMI_C[3].20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_C2T_12_OVRIDE_REQ,"MTR/C2T-12 HMI Override Request","","HMI_C[3].21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_C2T_13_OUTSERV_REQ,"MTR/C2T-13 Out of Service Request","","HMI_C[3].18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_C2T_13_OVRIDE_REQ,"MTR/C2T-13 HMI Override Request","","HMI_C[3].19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_C2T_14_OUTSERV_REQ,"MTR/C2T-14 Out of Service Request","","HMI_C[3].16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_C2T_14_OVRIDE_REQ,"MTR/C2T-14 HMI Override Request","","HMI_C[3].17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_C2T_15_OUTSERV_REQ,"MTR/C2T-15 Out of Service Request","","HMI_C[3].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_C2T_15_OVRIDE_REQ,"MTR/C2T-15 HMI Override Request","","HMI_C[3].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_C2T_16_OUTSERV_REQ,"MTR/C2T-16 Out of Service Request","","HMI_C[3].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_C2T_16_OVRIDE_REQ,"MTR/C2T-16 HMI Override Request","","HMI_C[3].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_C2T_17_OUTSERV_REQ,"MTR/C2T-17 Out of Service Request","","HMI_C[3].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_C2T_17_OVRIDE_REQ,"MTR/C2T-17 HMI Override Request","","HMI_C[3].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL12T_35_OUTSERV_REQ,"MTR/CL12T-35 Out of Service Request","","HMI_C[8].24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL12T_35_OVRIDE_REQ,"MTR/CL12T-35 HMI Override Request","","HMI_C[8].25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL12T_36_OUTSERV_REQ,"MTR/CL12T-36 Out of Service Request","","HMI_C[8].22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL12T_36_OVRIDE_REQ,"MTR/CL12T-36 HMI Override Request","","HMI_C[8].23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_01_OUTSERV_REQ,"MTR/CL1T-01 Out of Service Request","","HMI_C[7].18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_01_OVRIDE_REQ,"MTR/CL1T-01 HMI Override Request","","HMI_C[7].19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_02_OUTSERV_REQ,"MTR/CL1T-02 Out of Service Request","","HMI_C[7].16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_02_OVRIDE_REQ,"MTR/CL1T-02 HMI Override Request","","HMI_C[7].17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_03_OUTSERV_REQ,"MTR/CL1T-03 Out of Service Request","","HMI_C[7].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_03_OVRIDE_REQ,"MTR/CL1T-03 HMI Override Request","","HMI_C[7].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_04_OUTSERV_REQ,"MTR/CL1T-04 Out of Service Request","","HMI_C[7].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_04_OVRIDE_REQ,"MTR/CL1T-04 HMI Override Request","","HMI_C[7].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_05_OUTSERV_REQ,"MTR/CL1T-05 Out of Service Request","","HMI_C[7].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_05_OVRIDE_REQ,"MTR/CL1T-05 HMI Override Request","","HMI_C[7].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_06_OUTSERV_REQ,"MTR/CL1T-06 Out of Service Request","","HMI_C[7].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_06_OVRIDE_REQ,"MTR/CL1T-06 HMI Override Request","","HMI_C[7].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_07_OUTSERV_REQ,"MTR/CL1T-07 Out of Service Request","","HMI_C[7].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_07_OVRIDE_REQ,"MTR/CL1T-07 HMI Override Request","","HMI_C[7].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_08_OUTSERV_REQ,"MTR/CL1T-08 Out of Service Request","","HMI_C[7].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_08_OVRIDE_REQ,"MTR/CL1T-08 HMI Override Request","","HMI_C[7].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_09_OUTSERV_REQ,"MTR/CL1T-09 Out of Service Request","","HMI_C[7].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_09_OVRIDE_REQ,"MTR/CL1T-09 HMI Override Request","","HMI_C[7].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_10_OUTSERV_REQ,"MTR/CL1T-10 Out of Service Request","","HMI_C[7].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_10_OVRIDE_REQ,"MTR/CL1T-10 HMI Override Request","","HMI_C[7].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_11_OUTSERV_REQ,"MTR/CL1T-11 Out of Service Request","","HMI_C[6].30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_11_OVRIDE_REQ,"MTR/CL1T-11 HMI Override Request","","HMI_C[6].31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_12_OUTSERV_REQ,"MTR/CL1T-12 Out of Service Request","","HMI_C[6].28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_12_OVRIDE_REQ,"MTR/CL1T-12 HMI Override Request","","HMI_C[6].29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_13_OUTSERV_REQ,"MTR/CL1T-13 Out of Service Request","","HMI_C[6].26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_13_OVRIDE_REQ,"MTR/CL1T-13 HMI Override Request","","HMI_C[6].27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_14_OUTSERV_REQ,"MTR/CL1T-14 Out of Service Request","","HMI_C[6].24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_14_OVRIDE_REQ,"MTR/CL1T-14 HMI Override Request","","HMI_C[6].25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_15_OUTSERV_REQ,"MTR/CL1T-15 Out of Service Request","","HMI_C[6].22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_15_OVRIDE_REQ,"MTR/CL1T-15 HMI Override Request","","HMI_C[6].23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_16_OUTSERV_REQ,"MTR/CL1T-16 Out of Service Request","","HMI_C[6].20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_16_OVRIDE_REQ,"MTR/CL1T-16 HMI Override Request","","HMI_C[6].21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_17_OUTSERV_REQ,"MTR/CL1T-17 Out of Service Request","","HMI_C[6].18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_17_OVRIDE_REQ,"MTR/CL1T-17 HMI Override Request","","HMI_C[6].19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_18_OUTSERV_REQ,"MTR/CL1T-18 Out of Service Request","","HMI_C[6].16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_18_OVRIDE_REQ,"MTR/CL1T-18 HMI Override Request","","HMI_C[6].17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_19_OUTSERV_REQ,"MTR/CL1T-19 Out of Service Request","","HMI_C[6].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_19_OVRIDE_REQ,"MTR/CL1T-19 HMI Override Request","","HMI_C[6].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_20_OUTSERV_REQ,"MTR/CL1T-20 Out of Service Request","","HMI_C[6].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_20_OVRIDE_REQ,"MTR/CL1T-20 HMI Override Request","","HMI_C[6].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_21_OUTSERV_REQ,"MTR/CL1T-21 Out of Service Request","","HMI_C[6].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_21_OVRIDE_REQ,"MTR/CL1T-21 HMI Override Request","","HMI_C[6].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_22_OUTSERV_REQ,"MTR/CL1T-22 Out of Service Request","","HMI_C[6].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_22_OVRIDE_REQ,"MTR/CL1T-22 HMI Override Request","","HMI_C[6].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_23_OUTSERV_REQ,"MTR/CL1T-23 Out of Service Request","","HMI_C[6].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_23_OVRIDE_REQ,"MTR/CL1T-23 HMI Override Request","","HMI_C[6].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_24_OUTSERV_REQ,"MTR/CL1T-24 Out of Service Request","","HMI_C[6].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_24_OVRIDE_REQ,"MTR/CL1T-24 HMI Override Request","","HMI_C[6].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_25_OUTSERV_REQ,"MTR/CL1T-25 Out of Service Request","","HMI_C[6].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_25_OVRIDE_REQ,"MTR/CL1T-25 HMI Override Request","","HMI_C[6].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_26_OUTSERV_REQ,"MTR/CL1T-26 Out of Service Request","","HMI_C[6].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL1T_26_OVRIDE_REQ,"MTR/CL1T-26 HMI Override Request","","HMI_C[6].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_01_OUTSERV_REQ,"MTR/CL2T-01 Out of Service Request","","HMI_C[4].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_01_OVRIDE_REQ,"MTR/CL2T-01 HMI Override Request","","HMI_C[4].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_02_OUTSERV_REQ,"MTR/CL2T-02 Out of Service Request","","HMI_C[4].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_02_OVRIDE_REQ,"MTR/CL2T-02 HMI Override Request","","HMI_C[4].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_03_OUTSERV_REQ,"MTR/CL2T-03 Out of Service Request","","HMI_C[4].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_03_OVRIDE_REQ,"MTR/CL2T-03 HMI Override Request","","HMI_C[4].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_04_OUTSERV_REQ,"MTR/CL2T-04 Out of Service Request","","HMI_C[4].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_04_OVRIDE_REQ,"MTR/CL2T-04 HMI Override Request","","HMI_C[4].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_05_OUTSERV_REQ,"MTR/CL2T-05 Out of Service Request","","HMI_C[3].30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_05_OVRIDE_REQ,"MTR/CL2T-05 HMI Override Request","","HMI_C[3].31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_06_OUTSERV_REQ,"MTR/CL2T-06 Out of Service Request","","HMI_C[3].28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_06_OVRIDE_REQ,"MTR/CL2T-06 HMI Override Request","","HMI_C[3].29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_07_OUTSERV_REQ,"MTR/CL2T-07 Out of Service Request","","HMI_C[3].26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_07_OVRIDE_REQ,"MTR/CL2T-07 HMI Override Request","","HMI_C[3].27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_08_OUTSERV_REQ,"MTR/CL2T-08 Out of Service Request","","HMI_C[3].24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_08_OVRIDE_REQ,"MTR/CL2T-08 HMI Override Request","","HMI_C[3].25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_09_OUTSERV_REQ,"MTR/CL2T-09 Out of Service Request","","HMI_C[3].22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL2T_09_OVRIDE_REQ,"MTR/CL2T-09 HMI Override Request","","HMI_C[3].23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_01_OUTSERV_REQ,"MTR/CL3T-01 Out of Service Request","","HMI_C[4].22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_01_OVRIDE_REQ,"MTR/CL3T-01 HMI Override Request","","HMI_C[4].23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_02_OUTSERV_REQ,"MTR/CL3T-02 Out of Service Request","","HMI_C[4].20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_02_OVRIDE_REQ,"MTR/CL3T-02 HMI Override Request","","HMI_C[4].21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_03_OUTSERV_REQ,"MTR/CL3T-03 Out of Service Request","","HMI_C[4].18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_03_OVRIDE_REQ,"MTR/CL3T-03 HMI Override Request","","HMI_C[4].19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_04_OUTSERV_REQ,"MTR/CL3T-04 Out of Service Request","","HMI_C[4].16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_04_OVRIDE_REQ,"MTR/CL3T-04 HMI Override Request","","HMI_C[4].17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_05_OUTSERV_REQ,"MTR/CL3T-05 Out of Service Request","","HMI_C[4].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_05_OVRIDE_REQ,"MTR/CL3T-05 HMI Override Request","","HMI_C[4].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_06_OUTSERV_REQ,"MTR/CL3T-06 Out of Service Request","","HMI_C[4].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_06_OVRIDE_REQ,"MTR/CL3T-06 HMI Override Request","","HMI_C[4].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_07_OUTSERV_REQ,"MTR/CL3T-07 Out of Service Request","","HMI_C[4].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_07_OVRIDE_REQ,"MTR/CL3T-07 HMI Override Request","","HMI_C[4].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_08_OUTSERV_REQ,"MTR/CL3T-08 Out of Service Request","","HMI_C[4].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_CL3T_08_OVRIDE_REQ,"MTR/CL3T-08 HMI Override Request","","HMI_C[4].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,HMI_CTX,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,HMI_DOOR,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,HMI_HCD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,HMI_HSD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_06_OUTSERV_REQ,"MTR/HX1T-06 Out of Service Request","","HMI_C[7].28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_06_OVRIDE_REQ,"MTR/HX1T-06 HMI Override Request","","HMI_C[7].29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_07_OUTSERV_REQ,"MTR/HX1T-07 Out of Service Request","","HMI_C[7].26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_07_OVRIDE_REQ,"MTR/HX1T-07 HMI Override Request","","HMI_C[7].27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_08_OUTSERV_REQ,"MTR/HX1T-08 Out of Service Request","","HMI_C[7].24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_08_OVRIDE_REQ,"MTR/HX1T-08 HMI Override Request","","HMI_C[7].25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_09_OUTSERV_REQ,"MTR/HX1T-09 Out of Service Request","","HMI_C[7].22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_09_OVRIDE_REQ,"MTR/HX1T-09 HMI Override Request","","HMI_C[7].23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_10A_OUTSERV_REQ,"MTR/HX1T-10A Out of Service Request","","HMI_C[5].30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_10A_OVRIDE_REQ,"MTR/HX1T-10A HMI Override Request","","HMI_C[5].31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_10_OUTSERV_REQ,"MTR/HX1T-10 Out of Service Request","","HMI_C[7].20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_10_OVRIDE_REQ,"MTR/HX1T-10 HMI Override Request","","HMI_C[7].21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_11_OUTSERV_REQ,"MTR/HX1T-11 Out of Service Request","","HMI_C[7].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_HX1T_11_OVRIDE_REQ,"MTR/HX1T-11 HMI Override Request","","HMI_C[7].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,HMI_ISD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,HMI_L3,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,HMI_MEC,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,HMI_MU,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_04_OUTSERV_REQ,"MTR/O2T-04 Out of Service Request","","HMI_C[3].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_04_OVRIDE_REQ,"MTR/O2T-04 HMI Override Request","","HMI_C[3].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_05_OUTSERV_REQ,"MTR/O2T-05 Out of Service Request","","HMI_C[3].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_05_OVRIDE_REQ,"MTR/O2T-05 HMI Override Request","","HMI_C[3].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_06_OUTSERV_REQ,"MTR/O2T-06 Out of Service Request","","HMI_C[3].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_06_OVRIDE_REQ,"MTR/O2T-06 HMI Override Request","","HMI_C[3].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_07_OUTSERV_REQ,"MTR/O2T-07 Out of Service Request","","HMI_C[3].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_07_OVRIDE_REQ,"MTR/O2T-07 HMI Override Request","","HMI_C[3].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_08_OUTSERV_REQ,"MTR/O2T-08 Out of Service Request","","HMI_C[3].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_08_OVRIDE_REQ,"MTR/O2T-08 HMI Override Request","","HMI_C[3].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_09_OUTSERV_REQ,"MTR/O2T-09 Out of Service Request","","HMI_C[2].30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_09_OVRIDE_REQ,"MTR/O2T-09 HMI Override Request","","HMI_C[2].31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_10_OUTSERV_REQ,"MTR/O2T-10 Out of Service Request","","HMI_C[2].28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_10_OVRIDE_REQ,"MTR/O2T-10 HMI Override Request","","HMI_C[2].29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_11_OUTSERV_REQ,"MTR/O2T-11 Out of Service Request","","HMI_C[2].26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_11_OVRIDE_REQ,"MTR/O2T-11 HMI Override Request","","HMI_C[2].27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_12_OUTSERV_REQ,"MTR/O2T-12 Out of Service Request","","HMI_C[2].24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_12_OVRIDE_REQ,"MTR/O2T-12 HMI Override Request","","HMI_C[2].25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_13_OUTSERV_REQ,"MTR/O2T-13 Out of Service Request","","HMI_C[2].22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_13_OVRIDE_REQ,"MTR/O2T-13 HMI Override Request","","HMI_C[2].23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_14_OUTSERV_REQ,"MTR/O2T-14 Out of Service Request","","HMI_C[2].20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_14_OVRIDE_REQ,"MTR/O2T-14 HMI Override Request","","HMI_C[2].21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_15_OUTSERV_REQ,"MTR/O2T-15 Out of Service Request","","HMI_C[2].18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_15_OVRIDE_REQ,"MTR/O2T-15 HMI Override Request","","HMI_C[2].19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_16_OUTSERV_REQ,"MTR/O2T-16 Out of Service Request","","HMI_C[2].16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_16_OVRIDE_REQ,"MTR/O2T-16 HMI Override Request","","HMI_C[2].17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_17_OUTSERV_REQ,"MTR/O2T-17 Out of Service Request","","HMI_C[2].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_17_OVRIDE_REQ,"MTR/O2T-17 HMI Override Request","","HMI_C[2].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_18_OUTSERV_REQ,"MTR/O2T-18 Out of Service Request","","HMI_C[2].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O2T_18_OVRIDE_REQ,"MTR/O2T-18 HMI Override Request","","HMI_C[2].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O3T_17_OUTSERV_REQ,"MTR/O3T-17 Out of Service Request","","HMI_C[8].20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O3T_17_OVRIDE_REQ,"MTR/O3T-17 HMI Override Request","","HMI_C[8].21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O3T_18_OUTSERV_REQ,"MTR/O3T-18 Out of Service Request","","HMI_C[8].18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O3T_18_OVRIDE_REQ,"MTR/O3T-18 HMI Override Request","","HMI_C[8].19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O3T_19_OUTSERV_REQ,"MTR/O3T-19 Out of Service Request","","HMI_C[8].16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O3T_19_OVRIDE_REQ,"MTR/O3T-19 HMI Override Request","","HMI_C[8].17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O3T_20_OUTSERV_REQ,"MTR/O3T-20 Out of Service Request","","HMI_C[8].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O3T_20_OVRIDE_REQ,"MTR/O3T-20 HMI Override Request","","HMI_C[8].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O3T_21_OUTSERV_REQ,"MTR/O3T-21 Out of Service Request","","HMI_C[8].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O3T_21_OVRIDE_REQ,"MTR/O3T-21 HMI Override Request","","HMI_C[8].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_05_OUTSERV_REQ,"MTR/O4T-05 Out of Service Request","","HMI_C[5].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_05_OVRIDE_REQ,"MTR/O4T-05 HMI Override Request","","HMI_C[5].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_06_OUTSERV_REQ,"MTR/O4T-06 Out of Service Request","","HMI_C[5].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_06_OVRIDE_REQ,"MTR/O4T-06 HMI Override Request","","HMI_C[5].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_07_OUTSERV_REQ,"MTR/O4T-07 Out of Service Request","","HMI_C[5].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_07_OVRIDE_REQ,"MTR/O4T-07 HMI Override Request","","HMI_C[5].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_08_OUTSERV_REQ,"MTR/O4T-08 Out of Service Request","","HMI_C[5].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_08_OVRIDE_REQ,"MTR/O4T-08 HMI Override Request","","HMI_C[5].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_09_OUTSERV_REQ,"MTR/O4T-09 Out of Service Request","","HMI_C[5].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_09_OVRIDE_REQ,"MTR/O4T-09 HMI Override Request","","HMI_C[5].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_10_OUTSERV_REQ,"MTR/O4T-10 Out of Service Request","","HMI_C[4].30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_10_OVRIDE_REQ,"MTR/O4T-10 HMI Override Request","","HMI_C[4].31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_11_OUTSERV_REQ,"MTR/O4T-11 Out of Service Request","","HMI_C[4].28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_11_OVRIDE_REQ,"MTR/O4T-11 HMI Override Request","","HMI_C[4].29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_12_OUTSERV_REQ,"MTR/O4T-12 Out of Service Request","","HMI_C[4].26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_12_OVRIDE_REQ,"MTR/O4T-12 HMI Override Request","","HMI_C[4].27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_13_OUTSERV_REQ,"MTR/O4T-13 Out of Service Request","","HMI_C[4].24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_13_OVRIDE_REQ,"MTR/O4T-13 HMI Override Request","","HMI_C[4].25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_16_OUTSERV_REQ,"MTR/O4T-16 Out of Service Request","","HMI_C[8].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_16_OVRIDE_REQ,"MTR/O4T-16 HMI Override Request","","HMI_C[8].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_17_OUTSERV_REQ,"MTR/O4T-17 Out of Service Request","","HMI_C[8].8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_17_OVRIDE_REQ,"MTR/O4T-17 HMI Override Request","","HMI_C[8].9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_18_OUTSERV_REQ,"MTR/O4T-18 Out of Service Request","","HMI_C[8].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_18_OVRIDE_REQ,"MTR/O4T-18 HMI Override Request","","HMI_C[8].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_19_OUTSERV_REQ,"MTR/O4T-19 Out of Service Request","","HMI_C[8].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_19_OVRIDE_REQ,"MTR/O4T-19 HMI Override Request","","HMI_C[8].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_20_OUTSERV_REQ,"MTR/O4T-20 Out of Service Request","","HMI_C[8].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_20_OVRIDE_REQ,"MTR/O4T-20 HMI Override Request","","HMI_C[8].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_21_OUTSERV_REQ,"MTR/O4T-21 Out of Service Request","","HMI_C[8].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_21_OVRIDE_REQ,"MTR/O4T-21 HMI Override Request","","HMI_C[8].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_22_OUTSERV_REQ,"MTR/O4T-22 Out of Service Request","","HMI_C[7].30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_O4T_22_OVRIDE_REQ,"MTR/O4T-22 HMI Override Request","","HMI_C[7].31","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,HMI_P,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,HMI_PLC,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
ALIAS,,HMI_PLC_101_MAX_SCAN_RESET,"CNTRL/PLC-101 HMI Request Max Scan Time Reset","","HMI_PLC[0].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_PLC_101_RES_CNTRL_MJR_FLT,"CNTRL/PLC-101 HMI Request Major Controller Fault Reset","","HMI_PLC[0].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_PLC_101_RES_PRG_MJR_FLT,"CNTRL/PLC-101 HMI Request Major Program Fault Reset","","HMI_PLC[0].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_T5T_08_OUTSERV_REQ,"MTR/T5T-08 Out of Service Request","","HMI_C[5].18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_T5T_08_OVRIDE_REQ,"MTR/T5T-08 HMI Override Request","","HMI_C[5].19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_T5T_09_OUTSERV_REQ,"MTR/T5T-09 Out of Service Request","","HMI_C[5].16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_T5T_09_OVRIDE_REQ,"MTR/T5T-09 HMI Override Request","","HMI_C[5].17","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,HMI_VS,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO1_01_OUTSERV_REQ,"MTR/XO1-01 Out of Service Request","","HMI_C[5].14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO1_01_OVRIDE_REQ,"MTR/XO1-01 HMI Override Request","","HMI_C[5].15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO1_02_OUTSERV_REQ,"MTR/XO1-02 Out of Service Request","","HMI_C[5].12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO1_02_OVRIDE_REQ,"MTR/XO1-02 HMI Override Request","","HMI_C[5].13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO1_03_OUTSERV_REQ,"MTR/XO1-03 Out of Service Request","","HMI_C[5].10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO1_03_OVRIDE_REQ,"MTR/XO1-03 HMI Override Request","","HMI_C[5].11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO1_HSD_DIVERT_ALL_REQ,"HSD/XO1- All Request","","HMI_HSD[0].5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO1_HSD_DIVERT_HALF_REQ,"HSD/XO1- Half Request","","HMI_HSD[0].6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO1_HSD_OUTSERV_REQ,"HSD/XO1- Out of Service Request","","HMI_HSD[0].4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO1_HSD_PROX_OVR_REQ,"HSD/XO1- Home Prox Override","","HMI_HSD[0].7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_01_OUTSERV_REQ,"MTR/XO2-01 Out of Service Request","","HMI_C[5].28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_01_OVRIDE_REQ,"MTR/XO2-01 HMI Override Request","","HMI_C[5].29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_02_OUTSERV_REQ,"MTR/XO2-02 Out of Service Request","","HMI_C[5].26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_02_OVRIDE_REQ,"MTR/XO2-02 HMI Override Request","","HMI_C[5].27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_03_OUTSERV_REQ,"MTR/XO2-03 Out of Service Request","","HMI_C[5].24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_03_OVRIDE_REQ,"MTR/XO2-03 HMI Override Request","","HMI_C[5].25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_04_OUTSERV_REQ,"MTR/XO2-04 Out of Service Request","","HMI_C[5].22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_04_OVRIDE_REQ,"MTR/XO2-04 HMI Override Request","","HMI_C[5].23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_05_OUTSERV_REQ,"MTR/XO2-05 Out of Service Request","","HMI_C[5].20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_05_OVRIDE_REQ,"MTR/XO2-05 HMI Override Request","","HMI_C[5].21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_HSD_DIVERT_ALL_REQ,"HSD/XO2- All Request","","HMI_HSD[0].1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_HSD_DIVERT_HALF_REQ,"HSD/XO2- Half Request","","HMI_HSD[0].2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_HSD_OUTSERV_REQ,"HSD/XO2- Out of Service Request","","HMI_HSD[0].0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HMI_XO2_HSD_PROX_OVR_REQ,"HSD/XO2- Home Prox Override","","HMI_HSD[0].3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,HX1T,"","","SYS[11]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_06_MTR,"","","MTR[123]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_06_MTRx,"","","MTRx[123]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_06_PE,"","","PE[129]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_06_VFD,"","","VFD[123]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_07_MTR,"","","MTR[122]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_07_MTRx,"","","MTRx[122]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_07_PE,"","","PE[128]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_07_VFD,"","","VFD[122]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_08_MTR,"","","MTR[121]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_08_MTRx,"","","MTRx[121]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_08_PE,"","","PE[127]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_08_VFD,"","","VFD[121]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_09_BT,"","","BTP[11]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_09_BTx,"","","BTx[11]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_09_LEN,"","","LEN[5]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_09_LENx,"","","LENx[5]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_09_MTR,"","","MTR[120]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_09_MTRx,"","","MTRx[120]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_09_PE,"","","PE[126]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_09_VFD,"","","VFD[120]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_10A_MTR,"","","MTR[118]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_10A_MTRx,"","","MTRx[118]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_10A_PE,"","","PE[124]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_10A_VFD,"","","VFD[118]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_10_BT,"","","BTP[10]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_10_BTx,"","","BTx[10]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_10_EPB_ONS,"","","EPB_ONS[86]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,HX1T_10_MRG,"","","MRG[5]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_10_MRGx,"","","MRGx[5]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_10_MTR,"","","MTR[119]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_10_MTRx,"","","MTRx[119]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_10_PE,"","","PE[125]","(ExternalAccess := Read Only)"
ALIAS,,HX1T_10_VFD,"","","VFD[119]","(ExternalAccess := Read Only)"
ALIAS,,HXA_ZZ_MTRx,"","","MTRx[137]","(ExternalAccess := Read Only)"
TAG,,INT,"","INTERNAL","","(Constant := false, ExternalAccess := Read Only)"
ALIAS,,I_BAL_BM1_27,"BAG ADVANCE LANYARD","","MCP_BM1_RK2_S0:12:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_BAL_BM1_28,"BAG ADVANCE LANYARD","","MCP_BM1_RK2_S0:12:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_BAL_BM1_29,"BAG ADVANCE LANYARD","","MCP_BM1_RK2_S0:12:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_BAL_BM1_30,"BAG ADVANCE LANYARD","","MCP_BM1_RK2_S0:12:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_14_EPB,"BM1-14-A E-STOP","","MCP_BM1_RK1_S16:3:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_14_RPBA,"BM1-14-A RESET","","MCP_BM1_RK1_S16:5:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_16_EPB,"BM1-16-A E-STOP","","MCP_BM1_RK1_S16:3:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_16_RPBA,"BM1-16-A RESET","","MCP_BM1_RK1_S16:5:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_17_EPB,"BM1-17-B E-STOP","","MCP_BM1_RK1_S16:3:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_17_RPBA,"BM1-17-B RESET","","MCP_BM1_RK1_S16:5:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_23_EPB,"BM1-23-A E-STOP","","MCP_03_RK1_S0:4:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_23_RPBA,"BM1-23-A JAM RESET","","MCP_03_RK1_S0:4:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_23_SPBG,"BM1-23-A START","","MCP_03_RK1_S0:4:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_27_EPB,"BM1-28-B E-STOP","","MCP_BM1_RK1_S16:4:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_27_RPBA,"BM1-28-B RESET","","MCP_BM1_RK1_S16:6:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_28_EPB,"BM1-29-B E-STOP","","MCP_BM1_RK1_S16:4:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_28_RPBA,"RESET","","MCP_BM1_RK1_S16:6:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_29_EPB,"BM1-29-A E-STOP","","MCP_BM1_RK1_S16:4:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_29_RPBA,"BM1-29-B RESET","","MCP_BM1_RK1_S16:6:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_30_EPB,"BM1-30-A E-STOP","","MCP_BM1_RK1_S16:4:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_BM1_30_RPBA,"BM1-30-A RESET","","MCP_BM1_RK1_S16:6:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL1T_01_EPB,"CL1T-01-A E-STOP","","MCP_03_RK1_S0:3:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL1T_01_SPBG,"CL1T-01-A START","","MCP_03_RK1_S0:3:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL1T_02_EPB,"CL1T-02-A E-STOP","","MCP_03_RK1_S0:3:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL1T_02_RPBA,"CL1T-02-A JAM RESET","","MCP_03_RK1_S0:3:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL1T_02_SPBG,"CL1T-02-A START","","MCP_03_RK1_S0:3:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL2T_01_EPB,"CL2T-01-A E-STOP","","MCP_02_RK1_S0:3:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL2T_01_SPBG,"CL2T-01-A START","","MCP_02_RK1_S0:3:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL2T_02_EPB,"CL2T-02-A E-STOP","","MCP_02_RK1_S0:3:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL2T_02_RPBA,"CL2T-02-A JAM RESET","","MCP_02_RK1_S0:3:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL2T_02_SPBG,"CL2T-02-A START","","MCP_02_RK1_S0:3:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL2T_05_EPB,"CL2T-05-A E-STOP","","MCP_02_RK1_S0:3:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL2T_05_RPBA,"CL2T-05-A JAM RESET","","MCP_02_RK1_S0:3:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL2T_05_SPBG,"CL2T-05-A START","","MCP_02_RK1_S0:3:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL3T_01_EPB,"CL3T-01-A E-STOP","","MCP_02_RK1_S0:4:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL3T_01_SPBG,"CL3T-01-A START","","MCP_02_RK1_S0:4:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL3T_02_EPB,"CL3T-02-A E-STOP","","MCP_02_RK1_S0:4:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL3T_02_RPBA,"CL3T-02-A JAM RESET","","MCP_02_RK1_S0:4:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_CL3T_02_SPBG,"CL3T-02-A START","","MCP_02_RK1_S0:4:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_O3T_19_EPB,"O3T-19-A E-STOP","","MCP_16_RK1_S0:3:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_O3T_19_RPBA,"O3T-19-A JAM RESET","","MCP_16_RK1_S0:3:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_O3T_19_SPBG,"O3T-19-A START","","MCP_16_RK1_S0:3:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_O4T_21_EPB,"O4T-21-A E-STOP","","MCP_16_RK1_S0:3:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_O4T_21_RPBA,"O4T-21-A JAM RESET","","MCP_16_RK1_S0:3:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS1_O4T_21_SPBG,"O4T-21-A START","","MCP_16_RK1_S0:3:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_14_EPB,"BM1-14-B E-STOP","","MCP_BM1_RK1_S16:3:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_14_RPBA,"BM1-14-B RESET","","MCP_BM1_RK1_S16:5:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_16_EPB,"BM1-16-B E-STOP","","MCP_BM1_RK1_S16:3:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_16_RPBA,"BM1-16-B RESET","","MCP_BM1_RK1_S16:5:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_17_EPB,"BM1-17-A E-STOP","","MCP_BM1_RK1_S16:3:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_17_RPBA,"","","MCP_BM1_RK1_S16:5:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_17_SPBG,"BM1-17 START","","MCP_BM1_RK1_S16:7:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_27_EPB,"BM1-27 E-STOP","","MCP_BM1_RK1_S16:4:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_27_RPBA,"BM1-27 RESET","","MCP_BM1_RK1_S16:6:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_28_EPB,"BM1-28-A E-STOP","","MCP_BM1_RK1_S16:4:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_28_RPBA,"BM1-28-A RESET","","MCP_BM1_RK1_S16:6:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_29_EPB,"BM1-29-B E-STOP","","MCP_BM1_RK2_S0:11:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_29_FWD,"BM1-29-B FORWARD/REVERSE KSW","","MCP_BM1_RK2_S0:11:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_29_RPBA,"BM1-29-B RESET","","MCP_BM1_RK2_S0:11:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_29_SPBG,"BM1-29-B START","","MCP_BM1_RK2_S0:11:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_30_EPB,"BM1-30-B E-STOP","","MCP_BM1_RK1_S16:4:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_BM1_30_RPBA,"BM1-30-B RESET","","MCP_BM1_RK1_S16:6:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL1T_01_EPB,"CL1T-01-B E-STOP","","MCP_03_RK1_S0:3:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL1T_01_SPBG,"CL1T-01-B START","","MCP_03_RK1_S0:3:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL1T_02_EPB,"CL1T-02-B E-STOP","","MCP_03_RK1_S0:3:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL1T_02_SPBG,"CL1T-02-B START","","MCP_03_RK1_S0:3:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL2T_01_EPB,"CL2T-01-B E-STOP","","MCP_02_RK1_S0:3:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL2T_01_SPBG,"CL2T-01-B START","","MCP_02_RK1_S0:3:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL2T_02_EPB,"CL2T-02-B E-STOP","","MCP_02_RK1_S0:3:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL2T_02_SPBG,"CL2T-02-B START","","MCP_02_RK1_S0:3:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL2T_05_EPB,"CL2T-05-B E-STOP","","MCP_02_RK1_S0:3:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL2T_05_RPBA,"CL2T-05-B JAM RESET","","MCP_02_RK1_S0:3:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL2T_05_SPBG,"CL2T-05-B START","","MCP_02_RK1_S0:3:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL3T_01_EPB,"CL3T-01-B E-STOP","","MCP_02_RK1_S0:4:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL3T_01_SPBG,"CL3T-01-B START","","MCP_02_RK1_S0:4:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL3T_02_EPB,"CL3T-02-B E-STOP","","MCP_02_RK1_S0:4:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_CL3T_02_SPBG,"CL3T-02-B START","","MCP_02_RK1_S0:4:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_O3T_19_EPB,"O3T-19-B E-STOP","","MCP_16_RK1_S0:3:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_O3T_19_RPBA,"O3T-19-B JAM RESET","","MCP_16_RK1_S0:3:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_O3T_19_SPBG,"O3T-19-B START","","MCP_16_RK1_S0:3:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_O4T_21_EPB,"O4T-21-B E-STOP","","MCP_16_RK1_S0:3:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_O4T_21_RPBA,"O4T-21-B JAM RESET","","MCP_16_RK1_S0:3:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS2_O4T_21_SPBG,"O4T-21-B START","","MCP_16_RK1_S0:3:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_BM1_27_EPB,"BM1-27-C E-STOP","","MCP_BM1_RK2_S0:11:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_BM1_28_EPB,"BM1-28-C E-STOP","","MCP_BM1_RK2_S0:11:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_BM1_29_EPB,"BM1-29-C E-STOP","","MCP_BM1_RK2_S0:11:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_BM1_30_EPB,"BM1-30-C E-STOP","","MCP_BM1_RK2_S0:11:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_BM1_30_FWD,"BM1-30-C FORWARD/REVERSE KSW","","MCP_BM1_RK2_S0:11:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_BM1_30_RPBA,"BM1-30-C RESET","","MCP_BM1_RK2_S0:11:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_BM1_30_SPBG,"BM1-30-C START","","MCP_BM1_RK2_S0:11:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_CL1T_01_EPB,"CL1T-01-C E-STOP","","MCP_03_RK1_S0:3:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_CL1T_01_SPBG,"CL1T-01-C START","","MCP_03_RK1_S0:3:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_CL1T_02_EPB,"CL1T-02-C E-STOP","","MCP_03_RK1_S0:3:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_CL1T_02_SPBG,"CL1T-02-C START","","MCP_03_RK1_S0:3:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_CL2T_02_EPB,"CL2T-02-C E-STOP","","MCP_02_RK1_S0:3:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_CL2T_02_SPBG,"CL2T-02-C START","","MCP_02_RK1_S0:3:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_CL3T_02_EPB,"CL3T-02-C E-STOP","","MCP_02_RK1_S0:4:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS3_CL3T_02_SPBG,"CL3T-02-C START","","MCP_02_RK1_S0:4:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS4_BM1_27_EPB,"BM1-27-D E-STOP","","MCP_BM1_RK2_S0:11:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS4_BM1_28_EPB,"BM1-28-D E-STOP","","MCP_BM1_RK2_S0:11:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS4_BM1_28_FWD,"FORWARD/REVERSE KSW","","MCP_BM1_RK2_S0:11:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS4_BM1_28_SPBG,"BM1-29 START","","MCP_BM1_RK1_S16:7:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS4_BM1_29_EPB,"BM1-29-D E-STOP","","MCP_BM1_RK2_S0:11:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS4_BM1_30_EPB,"BM1-30-D E-STOP","","MCP_BM1_RK2_S0:11:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS4_CL3T_02_EPB,"CL3T-02-D E-STOP","","MCP_02_RK1_S0:4:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS4_CL3T_02_RPBA,"CL3T-02-D JAM RESET","","MCP_02_RK1_S0:4:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS4_CL3T_02_SPBG,"CL3T-02-D START","","MCP_02_RK1_S0:4:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS5_BM1_27_EPB,"BM1-27-E E-STOP","","MCP_BM1_RK2_S0:11:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS5_BM1_27_FWD,"BM1-27-E FORWARD/REVERSE KSW","","MCP_BM1_RK2_S0:11:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS5_BM1_27_RPBA,"BM1-27-E RESET","","MCP_BM1_RK2_S0:11:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS5_BM1_27_SPBG,"BM1-27-E START","","MCP_BM1_RK2_S0:11:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS5_BM1_28_EPB,"BM1-28-E E-STOP","","MCP_BM1_RK2_S0:11:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS5_BM1_28_FWD,"BM1-28-E FORWARD/REVERSE KSW","","MCP_BM1_RK2_S0:11:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS5_BM1_28_RPBA,"BM1-28-E RESET","","MCP_BM1_RK2_S0:11:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS5_BM1_28_SPBG,"BM1-28-E START","","MCP_BM1_RK2_S0:11:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_01_EPB,"BM1-01 E-STOP","","MCP_BM1_RK1_S16:3:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_01_RPBA,"BM1-01 RESET","","MCP_BM1_RK1_S16:5:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_02_EPB,"BM1-02 E-STOP","","MCP_BM1_RK1_S16:3:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_02_RPBA,"BM1-02 RESET","","MCP_BM1_RK1_S16:5:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_03_EPB,"BM1-03 E-STOP","","MCP_BM1_RK1_S16:3:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_03_RPBA,"BM1-03 RESET","","MCP_BM1_RK1_S16:5:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_06_EPB,"BM1-06 E-STOP","","MCP_BM1_RK1_S16:3:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_06_RPBA,"BM1-06 RESET","","MCP_BM1_RK1_S16:5:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_07_EPB,"BM1-07 E-STOP","","MCP_BM1_RK1_S16:3:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_07_SPBG,"BM1-07 START","","MCP_BM1_RK1_S16:7:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_13_EPB,"BM1-13 E-STOP","","MCP_BM1_RK1_S16:3:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_13_JRB,"BM1-13 JOG REVERSE","","MCP_BM1_RK1_S16:7:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_13_RPBA,"BM1-13 RESET","","MCP_BM1_RK1_S16:5:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_15_EPB,"BM1-15 E-STOP","","MCP_BM1_RK1_S16:3:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_15_RPBA,"BM1-15 RESET","","MCP_BM1_RK1_S16:5:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_17_SPBG,"START","","MCP_BM1_RK1_S16:7:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_18_EPB,"BM1-18 E-STOP","","MCP_BM1_RK1_S16:3:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_18_RPBA,"BM1-18 RESET","","MCP_BM1_RK1_S16:5:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_19_EPB,"BM1-19 E-STOP","","MCP_BM1_RK1_S16:3:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_19_RPBA,"BM1-19 RESET","","MCP_BM1_RK1_S16:5:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_20_EPB,"BM1-20 E-STOP","","MCP_BM1_RK1_S16:4:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_20_RPBA,"BM1-20 RESET","","MCP_BM1_RK1_S16:5:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_23_EPB,"BM1-23 E-STOP","","MCP_BM1_RK1_S16:4:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_23_RPBA,"BM1-23 RESET","","MCP_BM1_RK1_S16:5:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_25_EPB,"BM1-25 E-STOP","","MCP_BM1_RK1_S16:4:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_25_RPBA,"BM1-25 RESET","","MCP_BM1_RK1_S16:5:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_34_EPB,"BM1-34 E-STOP","","MCP_BM1_RK1_S16:4:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_34_RPBA,"BM1-34 RESET","","MCP_BM1_RK1_S16:6:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_38_EPB,"BM1-38 E-STOP","","MCP_BM1_RK1_S16:4:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_38_RPBA,"BM1-38 RESET","","MCP_BM1_RK1_S16:6:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_BM1_MCP_RPBA,"RESET","","MCP_BM1_RK1_S16:6:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_C2T_13_EPB,"C2T-13 E-STOP","","MCP_01_RK1_S0:4:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_C2T_13_RPBA,"C2T-13 JAM RESET","","MCP_01_RK1_S0:4:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_C2T_13_SPBG,"C2T-13 START","","MCP_01_RK1_S0:4:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_C2T_17_AUTO,"C2T-17 AUTO","","MCP_01_RK1_S0:5:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_C2T_17_EPB,"C2T-17 E-STOP","","MCP_01_RK1_S0:4:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_C2T_17_JRB,"C2T-17 JOG REVERSE","","MCP_01_RK1_S0:4:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_C2T_17_RPBA,"C2T-17 JAM RESET","","MCP_01_RK1_S0:4:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_C2T_17_SPBG,"C2T-17 START","","MCP_01_RK1_S0:4:I.Data.29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL12T_36_AUTO,"CL12T-36 AUTO","","MCP_16_RK1_S0:3:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL12T_36_EPB,"CL12T-36 E-STOP","","MCP_16_RK1_S0:3:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL12T_36_JRB,"CL12T-36 JOG REVERSE","","MCP_16_RK1_S0:3:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL12T_36_RPBA,"CL12T-36 JAM RESET","","MCP_16_RK1_S0:3:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL12T_36_SPBG,"CL12T-36 START","","MCP_16_RK1_S0:3:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_05_EPB,"CL1T-05 E-STOP","","MCP_03_RK1_S0:3:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_05_RPBA,"CL1T-05 JAM RESET","","MCP_03_RK1_S0:3:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_05_SPBG,"CL1T-05 START","","MCP_03_RK1_S0:3:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_09_EPB,"CL1T-09 E-STOP","","MCP_03_RK1_S0:3:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_09_RPBA,"CL1T-09 JAM RESET","","MCP_03_RK1_S0:3:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_09_SPBG,"CL1T-09 START","","MCP_03_RK1_S0:3:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_11_EPB,"CL1T-11 E-STOP","","MCP_03_RK1_S0:3:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_11_RPBA,"CL1T-11 JAM RESET","","MCP_03_RK1_S0:3:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_11_SPBG,"CL1T-11 START","","MCP_03_RK1_S0:3:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_12_EPB,"CL1T-12 E-STOP","","MCP_03_RK1_S0:3:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_12_RPBA,"CL1T-12 JAM RESET","","MCP_03_RK1_S0:3:I.Data.29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_12_SPBG,"CL1T-12 START","","MCP_03_RK1_S0:3:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_16_EPB,"CL1T-16 E-STOP","","MCP_03_RK1_S0:3:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_16_RPBA,"CL1T-16 JAM RESET","","MCP_03_RK1_S0:4:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_16_SPBG,"CL1T-16 START","","MCP_03_RK1_S0:3:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_20_EPB,"CL1T-20 E-STOP","","MCP_03_RK1_S0:4:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_20_RPBA,"CL1T-20 JAM RESET","","MCP_03_RK1_S0:4:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_20_SPBG,"CL1T-20 START","","MCP_03_RK1_S0:4:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_24_EPB,"CL1T-24 E-STOP","","MCP_03_RK1_S0:4:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_24_RPBA,"CL1T-24 JAM RESET","","MCP_03_RK1_S0:4:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL1T_24_SPBG,"CL1T-24 START","","MCP_03_RK1_S0:4:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL2T_04_EPB,"CL2T-04 E-STOP","","MCP_02_RK1_S0:3:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL2T_04_RPBA,"CL2T-04 JAM RESET","","MCP_02_RK1_S0:3:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL2T_04_SPBG,"CL2T-04 START","","MCP_02_RK1_S0:3:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL2T_09_EPB,"CL2T-09 E-STOP","","MCP_02_RK1_S0:3:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL2T_09_RPBA,"CL2T-09 JAM RESET","","MCP_02_RK1_S0:3:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL2T_09_SPBG,"CL2T-09 START","","MCP_02_RK1_S0:3:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL3T_03_EPB,"CL3T-03 E-STOP","","MCP_02_RK1_S0:4:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL3T_03_RPBA,"CL3T-03 JAM RESET","","MCP_02_RK1_S0:4:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL3T_03_SPBG,"CL3T-03 START","","MCP_02_RK1_S0:4:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL3T_04_EPB,"CL3T-04 E-STOP","","MCP_02_RK1_S0:4:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL3T_04_RPBA,"CL3T-04 JAM RESET","","MCP_02_RK1_S0:4:I.Data.29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_CL3T_04_SPBG,"CL3T-04 START","","MCP_02_RK1_S0:4:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_HX1T_10_AUTO,"HX1T-10 AUTO","","MCP_03_RK1_S0:4:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_HX1T_10_EPB,"HX1T-10 E-STOP","","MCP_03_RK1_S0:4:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_HX1T_10_JRB,"HX1T-10 JOG REVERSE","","MCP_03_RK1_S0:4:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_HX1T_10_RPBA,"HX1T-10 JAM RESET","","MCP_03_RK1_S0:4:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_HX1T_10_SPBG,"HX1T-10 START","","MCP_03_RK1_S0:4:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_01_APB,"MCP-01 ALARM SILENCE","","MCP_01_RK1_S0:4:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_01_EPB,"MCP-01 E-STOP","","MCP_01_RK1_S0:4:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_01_SPBG,"MCP-01 RESET/START","","MCP_01_RK1_S0:4:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_01_TPB,"MCP-01 LAMP TEST","","MCP_01_RK1_S0:4:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_02_APB,"MCP-02 ALARM SILENCE","","MCP_02_RK1_S0:3:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_02_EPB,"MCP-02 E-STOP","","MCP_02_RK1_S0:3:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_02_SPBG,"MCP-02 RESET/START","","MCP_02_RK1_S0:3:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_02_TPB,"MCP-02 LAMP TEST","","MCP_02_RK1_S0:3:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_03_APB,"MCP-03 ALARM SILENCE","","MCP_03_RK1_S0:3:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_03_EPB,"MCP-03 E-STOP","","MCP_03_RK1_S0:3:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_03_SPBG,"MCP-03 RESET/START","","MCP_03_RK1_S0:3:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_03_TPB,"MCP-03 LAMP TEST","","MCP_03_RK1_S0:3:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_16_APB,"MCP-16 ALARM SILENCE","","MCP_16_RK1_S0:3:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_16_EPB,"MCP-16 E-STOP","","MCP_16_RK1_S0:3:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_16_SPBG,"MCP-16 RESET/START","","MCP_16_RK1_S0:3:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_16_TPB,"MCP-16 LAMP TEST","","MCP_16_RK1_S0:3:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_BM1_APB,"MCP-BM1 ALARM SILENCE","","MCP_BM1_RK1_S16:6:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_BM1_EPB,"MCP-BM1 E-STOP","","MCP_BM1_RK1_S16:3:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_BM1_SPBG,"BM1-MCP RESET","","MCP_BM1_RK1_S16:6:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_MCP_BM1_TPB,"MCP-BM1 LAMP TEST","","MCP_BM1_RK1_S16:6:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_04_EPB,"O2T-04 E-STOP","","MCP_01_RK1_S0:4:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_04_RPBA,"O2T-04 JAM RESET","","MCP_01_RK1_S0:4:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_04_SPBG,"O2T-04 START","","MCP_01_RK1_S0:4:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_06_EPB,"O2T-06 E-STOP","","MCP_01_RK1_S0:4:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_06_RPBA,"O2T-06 JAM RESET","","MCP_01_RK1_S0:4:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_06_SPBG,"O2T-06 START","","MCP_01_RK1_S0:4:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_10_EPB,"O2T-10 E-STOP","","MCP_01_RK1_S0:4:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_10_RPBA,"O2T-10 JAM RESET","","MCP_01_RK1_S0:4:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_10_SPBG,"O2T-10 START","","MCP_01_RK1_S0:4:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_12_EPB,"O2T-12 E-STOP","","MCP_01_RK1_S0:4:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_12_RPBA,"O2T-12 JAM RESET","","MCP_01_RK1_S0:4:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_12_SPBG,"O2T-12 START","","MCP_01_RK1_S0:4:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_14_EPB,"O2T-14 E-STOP","","MCP_01_RK1_S0:4:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_14_RPBA,"O2T-14 JAM RESET","","MCP_01_RK1_S0:4:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_14_SPBG,"O2T-14 START","","MCP_01_RK1_S0:4:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_18_AUTO,"O2T-18 AUTO","","MCP_01_RK1_S0:4:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_18_EPB,"O2T-18 E-STOP","","MCP_01_RK1_S0:4:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_18_JRB,"O2T-18 JOG REVERSE","","MCP_01_RK1_S0:4:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_18_RPBA,"O2T-18 JAM RESET","","MCP_01_RK1_S0:4:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O2T_18_SPBG,"O2T-18 START","","MCP_01_RK1_S0:4:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O3T_17_EPB,"O3T-17 E-STOP","","MCP_16_RK1_S0:3:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O3T_17_RPBA,"O3T-17 JAM RESET","","MCP_16_RK1_S0:3:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O3T_17_SPBG,"O3T-17 START","","MCP_16_RK1_S0:3:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O4T_06_EPB,"O4T-06 E-STOP","","MCP_02_RK1_S0:4:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O4T_06_RPBA,"O4T-06 JAM RESET","","MCP_02_RK1_S0:4:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O4T_06_SPBG,"O4T-06 START","","MCP_02_RK1_S0:4:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O4T_10_EPB,"O4T-10 E-STOP","","MCP_02_RK1_S0:4:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O4T_10_RPBA,"O4T-10 JAM RESET","","MCP_02_RK1_S0:4:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O4T_10_SPBG,"O4T-10 START","","MCP_02_RK1_S0:4:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O4T_16_EPB,"O4T-16 E-STOP","","MCP_16_RK1_S0:3:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O4T_16_RPBA,"O4T-16 JAM RESET","","MCP_16_RK1_S0:3:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_O4T_16_SPBG,"O4T-16 START","","MCP_16_RK1_S0:3:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_T5T_09_AUTO,"T5T-09 AUTO","","MCP_02_RK1_S0:4:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_T5T_09_EPB,"T5T-09 E-STOP","","MCP_02_RK1_S0:3:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_T5T_09_JRB,"T5T-09 JOG REVERSE","","MCP_02_RK1_S0:3:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_T5T_09_RPBA,"T5T-09 JAM RESET","","MCP_02_RK1_S0:3:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_T5T_09_SPBG,"T5T-09 START","","MCP_02_RK1_S0:3:I.Data.29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_XO1_01_EPB,"XO1-01 E-STOP","","MCP_02_RK1_S0:4:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_XO1_01_RPBA,"XO1-01 JAM RESET","","MCP_02_RK1_S0:4:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_XO1_01_SPBG,"XO1-01 START","","MCP_02_RK1_S0:4:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_XO2_02_EPB,"XO2-02 E-STOP","","MCP_03_RK1_S0:4:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_XO2_02_RPBA,"XO2-02 JAM RESET","","MCP_03_RK1_S0:4:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_XO2_02_SPBG,"XO2-02 START","","MCP_03_RK1_S0:4:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_XO2_05_AUTO,"XO2-05 AUTO","","MCP_03_RK1_S0:4:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_XO2_05_EPB,"XO2-05 E-STOP","","MCP_03_RK1_S0:4:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_XO2_05_JRB,"XO2-05 JOG REVERSE","","MCP_03_RK1_S0:4:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_XO2_05_RPBA,"XO2-05 JAM RESET","","MCP_03_RK1_S0:4:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_CS_XO2_05_SPBG,"XO2-05 START","","MCP_03_RK1_S0:4:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_01,"BM1-01 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:7:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_02,"BM1-02 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:7:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_03,"BM1-03 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:7:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_04,"BM1-04 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:7:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_05,"BM1-05 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:7:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_06,"BM1-06 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:7:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_07,"BM1-07 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:7:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_08,"BM1-08 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_09,"BM1-09 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_10,"BM1-10 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_11,"BM1-11 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_12,"BM1-12 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_13,"BM1-13 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_13_FWD,"BM1-13 MOTOR FORWARD","","MCP_BM1_RK1_S16:8:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_13_REV,"BM1-13 MOTOR REVERSE","","MCP_BM1_RK1_S16:8:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_14,"BM1-14 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_15,"BM1-15 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_16,"BM1-16 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_17,"BM1-17 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_18,"BM1-18 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_19,"BM1-19 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_20,"BM1-20 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_21,"BM1-21 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_22,"BM1-22 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:8:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_23,"BM1-23 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_24,"BM1-24 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_25,"BM1-25 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_26,"BM1-26 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_27,"BM1-27 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_28,"BM1-28 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_29,"BM1-29 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_30,"BM1-30 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_31,"BM1-31 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_32,"BM1-32 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_33,"BM1-33 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_34,"BM1-34 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_35,"BM1-35 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_36,"BM1-36 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_37,"BM1-37 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_C_BM1_38,"BM1-38 CONTACTOR ENERGIZED","","MCP_BM1_RK1_S16:9:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_ECR_BM1_01,"BM1-01 ESTOP CONTACTOR","","MCP_BM1_RK1_S16:6:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_ECR_BM1_02,"BM1-02 ESTOP CONTACTOR","","MCP_BM1_RK1_S16:6:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_ECR_BM1_03,"BM1-03 ESTOP CONTACTOR","","MCP_BM1_RK1_S16:6:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_C2T_12_RES,"C2T-12 RESET SIGNAL","","MCP_01_RK1_S0:7:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_C2T_12_START,"C2T-12 START SIGNAL","","MCP_01_RK1_S0:7:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_C2_11_JAM,"C2-11 JAM SIGNAL","","MCP_01_RK1_S0:7:I.Data.29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_C4_09_RUN,"C4-09 CONVEYOR RUNNING SIGNAL","","MCP_03_RK1_S0:8:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_CL12T_35_RES,"CL12T-35 FAULT RESET","","MCP_16_RK1_S0:5:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_CL12T_35_START,"CL12T-35 START SIGNAL","","MCP_16_RK1_S0:5:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_CL12_34_JAM,"CL12-34 JAM SIGNAL","","MCP_16_RK1_S0:5:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_HX1T_06_RES,"HX1T-06 RESET SIGNAL","","MCP_03_RK1_S0:8:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_HX1T_06_START,"HX1T-06 START SIGNAL","","MCP_03_RK1_S0:8:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_HX1_05_JAM,"HX1-05 JAM SIGNAL","","MCP_03_RK1_S0:8:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_HX1_11_RUN,"HX1-11 CONVEYOR RUNNING SIGNAL","","MCP_03_RK1_S0:8:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O2T_04_RES,"O2T-04 RESET SIGNAL","","MCP_01_RK1_S0:7:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O2T_04_START,"O2T-04 START SIGNAL","","MCP_01_RK1_S0:7:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O2_03_JAM,"O2-03 JAM SIGNAL","","MCP_01_RK1_S0:7:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O3T_17_START,"O3T-17 START SIGNAL","","MCP_16_RK1_S0:5:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O3T_21_RUN,"O3T-21 CONVEYOR RUNNING SIGNAL","","MCP_16_RK1_S0:5:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O3_16_JAM,"O3-16 JAM SIGNAL","","MCP_16_RK1_S0:5:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O4T_05_RES,"O4T-05 RESET SIGNAL","","MCP_02_RK1_S0:8:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O4T_05_START,"O4T-05 START SIGNAL","","MCP_02_RK1_S0:8:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O4T_16_START,"O4T-16 START SIGNAL","","MCP_16_RK1_S0:5:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O4T_21_RUN,"O4T-21 CONVEYOR RUNNING SIGNAL","","MCP_16_RK1_S0:5:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O4_03_MRG,"O4-03 MERGE PE SIGNAL","","MCP_02_RK1_S0:8:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O4_04_JAM,"O4-04 JAM SIGNAL","","MCP_02_RK1_S0:8:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O4_04_RUN,"O4-04 CONVEYOR RUNNING SIGNAL","","MCP_02_RK1_S0:8:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O4_06_RUN,"O4-06 CONVEYOR RUNNING SIGNAL","","MCP_02_RK1_S0:8:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_O4_15_JAM,"O4-15 JAM SIGNAL","","MCP_16_RK1_S0:5:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_T5T_08_RES,"T5T-08 RESET SIGNAL","","MCP_02_RK1_S0:8:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_T5T_08_START,"T5T-08 START SIGNAL","","MCP_02_RK1_S0:8:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_T5_07_JAM,"T5-07 JAM SIGNAL","","MCP_02_RK1_S0:8:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_INT_T5_10_RUN,"T5-10 CONVEYOR RUNNING SIGNAL","","MCP_02_RK1_S0:8:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_01,"BM1-01 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_02,"BM1-02 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_03,"BM1-03 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_04,"BM1-04 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_05,"BM1-05 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_06,"BM1-06 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_07,"BM1-07 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_08,"BM1-08 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_09,"BM1-09 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_10,"BM1-10 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_11,"BM1-11 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_12,"BM1-12 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_13,"BM1-13 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_14,"BM1-14 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_15,"BM1-15 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_16,"BM1-16 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:10:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_17,"BM1-17 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_18,"BM1-18 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_19,"BM1-19 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_20,"BM1-20 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_21,"BM1-21 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_22,"BM1-22 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_23,"BM1-23 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_24,"BM1-24 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_25,"BM1-25 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_26,"BM1-26 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_27,"BM1-27 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_28,"BM1-28 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_29,"BM1-29 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_30,"BM1-30 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_31,"BM1-31 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_32,"BM1-32 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:11:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_33,"BM1-33 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:12:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_34,"BM1-34 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:12:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_35,"BM1-35 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:12:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_36,"BM1-36 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:12:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_37,"BM1-37 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:12:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MOL_BM1_38,"BM1-38 MOTOR OVERLOAD","","MCP_BM1_RK1_S16:12:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_01,"BM1-01 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:12:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_02,"BM1-02 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:12:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_03,"BM1-03 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:12:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_04,"BM1-04 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:12:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_05,"BM1-05 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:12:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_06,"BM1-06 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:12:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_07,"BM1-07 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_08,"BM1-08 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_09,"BM1-09 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_10,"BM1-10 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_11,"BM1-11 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_12,"BM1-12 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_13,"BM1-13 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_14,"BM1-14 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_15,"BM1-15 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_16,"BM1-16 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_17,"BM1-17 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_18,"BM1-18 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_19,"BM1-19 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_20,"BM1-20 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_21,"BM1-21 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_22,"BM1-22 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK1_S16:13:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_23,"BM1-23 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_24,"BM1-24 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_25,"BM1-25 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_26,"BM1-26 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_27,"BM1-27 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_28,"BM1-28 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_29,"BM1-29 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_30,"BM1-30 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_31,"BM1-31 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_32,"BM1-32 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_33,"BM1-33 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_34,"BM1-34 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_35,"BM1-35 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_36,"BM1-36 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_37,"BM1-37 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_BM1_38,"BM1-38 MOTOR SAFETY DISCONNECT","","MCP_BM1_RK2_S0:10:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_C2T_12,"C2T-12 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_C2T_13,"C2T-13 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:6:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_C2T_14,"C2T-14 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:6:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_C2T_15,"C2T-15 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:6:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_C2T_16,"C2T-16 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:6:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_C2T_17,"C2T-17 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:6:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL12T_35,"CL12T-35 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL12T_36,"CL12T-36 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_01,"CL1T-01 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_02,"CL1T-02 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_03,"CL1T-03 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_04,"CL1T-04 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_05,"CL1T-05 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_06,"CL1T-06 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_07,"CL1T-07 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_08,"CL1T-08 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_09,"CL1T-09 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_10,"CL1T-10 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_11,"CL1T-11 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_12,"CL1T-12 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_13,"CL1T-13 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_14,"CL1T-14 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_15,"CL1T-15 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_16,"CL1T-16 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_17,"CL1T-17 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_18,"CL1T-18 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_19,"CL1T-19 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_20,"CL1T-20 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_21,"CL1T-21 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_23,"CL1T-23 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_24,"CL1T-24 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL1T_26,"CL1T-26 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL2T_01,"CL2T-01 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL2T_02,"CL2T-02 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL2T_03,"CL2T-03 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL2T_04,"CL2T-04 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL2T_05,"CL2T-05 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL2T_06,"CL2T-06 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL2T_07,"CL2T-07 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL2T_08,"CL2T-08 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL2T_09,"CL2T-09 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL3T_01,"CL3T-01 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL3T_02,"CL3T-02 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL3T_03,"CL3T-03 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL3T_04,"CL3T-04 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL3T_05,"CL3T-05 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL3T_06,"CL3T-06 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL3T_07,"CL3T-07 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:5:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_CL3T_08,"CL3T-08 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_HX1T_06,"HX1T-06 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_HX1T_07,"HX1T-07 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_HX1T_08,"HX1T-08 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_HX1T_09,"HX1T-09 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:6:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_HX1T_10,"HX1T-10 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:6:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_HX1T_10A,"HX1T-10A MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:6:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_04,"O2T-04 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_05,"O2T-05 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_06,"O2T-06 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_07,"O2T-07 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_08,"O2T-08 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_09,"O2T-09 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_10,"O2T-10 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_11,"O2T-11 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_12,"O2T-12 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_13,"O2T-13 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_14,"O2T-14 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_15,"O2T-15 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_16,"O2T-16 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_17,"O2T-17 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O2T_18,"O2T-18 MOTOR SAFETY DISCONNECT","","MCP_01_RK1_S0:5:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O3T_17,"O3T-17 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O3T_18,"O3T-18 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O3T_19,"O3T-19 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O3T_20,"O3T-20 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_05,"O4T-05 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_06,"O4T-06 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_07,"O4T-07 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_08,"O4T-08 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_09,"O4T-09 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_10,"O4T-10 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_11,"O4T-11 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_12,"O4T-12 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_13,"O4T-13 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_16,"O4T-16 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_17,"O4T-17 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_18,"O4T-18 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_19,"O4T-19 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_20,"O4T-20 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_21,"O4T-21 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_O4T_22,"O4T-22 MOTOR SAFETY DISCONNECT","","MCP_16_RK1_S0:4:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_T5T_08,"T5T-08 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_T5T_09,"T5T-09 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_XO1_01,"XO1-01 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_XO1_02,"XO1-02 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_XO1_03,"XO1-03 MOTOR SAFETY DISCONNECT","","MCP_02_RK1_S0:6:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_XO2_01,"XO2-01 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_XO2_02,"XO2-02 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_XO2_03,"XO2-03 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_XO2_04,"XO2-04 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_MSD_XO2_05,"XO2-05 MOTOR SAFETY DISCONNECT","","MCP_03_RK1_S0:5:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE1_BM1_06,"BM1-06-A PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE1_BM1_14,"BM1-14-A PHOTOEYE","","MCP_BM1_RK2_S0:11:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE1_BM1_19,"BM1-19-A PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE1_BM1_23,"BM1-23-A JAM, DIVERT","","MCP_03_RK1_S0:7:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE1_BM1_27,"BM1-27-A PHOTOEYE","","MCP_BM1_RK2_S0:11:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE1_BM1_28,"BM1-28-A PHOTOEYE","","MCP_BM1_RK2_S0:11:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE1_BM1_29,"BM1-29-A PHOTOEYE","","MCP_BM1_RK2_S0:11:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE1_BM1_30,"BM1-30-A PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE1_CL1T_26,"CL1T-26-A HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE1_O4T_10,"O4T-10-A HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE1_XO1_01,"XO1-01-A HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE2_BM1_06,"BM1-06-B PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE2_BM1_14,"BM1-14-B PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE2_BM1_19,"BM1-19-B PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE2_BM1_23,"BM1-23-B PHOTOEYE","","MCP_03_RK1_S0:7:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE2_BM1_27,"BM1-27-B PHOTOEYE","","MCP_BM1_RK2_S0:11:I.Data.29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE2_BM1_28,"BM1-28-B PHOTOEYE","","MCP_BM1_RK2_S0:11:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE2_BM1_29,"BM1-29-B PHOTOEYE","","MCP_BM1_RK2_S0:11:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE2_BM1_30,"BM1-30-B PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE2_CL1T_26,"CL1T-26-B JAM, MERGE CONTROL","","MCP_03_RK1_S0:7:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE2_O4T_10,"O4T-10-B JAM, DIVERT","","MCP_02_RK1_S0:7:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE2_XO1_01,"XO1-01-B JAM, DIVERT","","MCP_02_RK1_S0:7:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE3_BM1_30,"BM1-30-C PHOTOEYE","","MCP_BM1_RK2_S0:11:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_07,"BM1-07 PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_08,"BM1-08 PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_09,"BM1-09 PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_10,"BM1-10 PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_11,"BM1-11 PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_12,"BM1-12 PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_13,"BM1-13 PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_15,"BM1-15 PHOTOEYE","","MCP_BM1_RK2_S0:11:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_16,"BM1-16 PHOTOEYE","","MCP_BM1_RK2_S0:11:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_17,"BM1-17 PHOTOEYE","","MCP_BM1_RK2_S0:11:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_18,"BM1-18 PHOTOEYE","","MCP_BM1_RK1_S16:6:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_20,"BM1-20 PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_21,"BM1-21 PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_22,"BM1-22 PHOTOEYE","","MCP_BM1_RK1_S16:1:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_23,"BM1-23  HEAD END, JAM","","MCP_BM1_RK1_S16:1:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_24,"BM1-24 PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_25,"BM1-25 PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_26,"BM1-26 PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_31,"BM1-31 PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_32,"BM1-32 PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_33,"BM1-33 PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_34,"BM1-34 PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_35,"BM1-35 PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_36,"BM1-36 PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_37,"BM1-37 PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_BM1_38,"BM1-38 PHOTOEYE","","MCP_BM1_RK1_S16:2:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_C2T_12,"C2T-12 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_C2T_13,"C2T-13 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_C2T_14,"C2T-14 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_C2T_15,"C2T-15 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_C2T_16,"C2T-16 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_C2T_17,"C2T-17 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_C4_08,"C4-08 JAM, MERGE","","MCP_03_RK1_S0:7:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL12T_35,"CL12T-35 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL12T_36,"CL12T-36 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_01,"CL1T-01 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_02,"CL1T-02 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_03,"CL1T-03 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_04,"CL1T-04 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_05,"CL1T-05 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_06,"CL1T-06 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_07,"CL1T-07 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_08,"CL1T-08 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_09,"CL1T-09 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_10,"CL1T-10 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_11,"CL1T-11 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_12,"CL1T-12 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_13,"CL1T-13 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_14,"CL1T-14 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_15,"CL1T-15 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_16,"CL1T-16 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_17,"CL1T-17 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_18,"CL1T-18 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_19,"CL1T-19 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_20,"CL1T-20 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_21,"CL1T-21 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_23,"CL1T-23 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL1T_24,"CL1T-24 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL2T_01,"CL2T-01 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL2T_02,"CL2T-02 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL2T_03,"CL2T-03 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL2T_04,"CL2T-04 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL2T_05,"CL2T-05 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL2T_06,"CL2T-06 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL2T_07,"CL2T-07 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL2T_08,"CL2T-08 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL2T_09,"CL2T-09 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL3T_01,"CL3T-01 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL3T_02,"CL3T-02 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL3T_03,"CL3T-03 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL3T_04,"CL3T-04 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL3T_05,"CL3T-05 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL3T_06,"CL3T-06 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL3T_07,"CL3T-07 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_CL3T_08,"CL3T-08 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_HX1T_06,"HX1T-06 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_HX1T_07,"HX1T-07 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_HX1T_08,"HX1T-08 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_HX1T_09,"HX1T-09 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_HX1T_10,"HX1T-10 HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_HX1T_10A,"HX1T-10A HEAD END, JAM","","MCP_03_RK1_S0:7:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_04,"O2T-04 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_05,"O2T-05 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_06,"O2T-06 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_07,"O2T-07 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_08,"O2T-08 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_09,"O2T-09 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_10,"O2T-10 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_11,"O2T-11 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_12,"O2T-12 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_13,"O2T-13 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_14,"O2T-14 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_15,"O2T-15 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_16,"O2T-16 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_17,"O2T-17 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O2T_18,"O2T-18 HEAD END, JAM","","MCP_01_RK1_S0:7:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O3T_17,"O3T-17 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O3T_18,"O3T-18 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O3T_19,"O3T-19 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O3T_20,"O3T-20 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_05,"O4T-05 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_06,"O4T-06 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_07,"O4T-07 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_08,"O4T-08 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_09,"O4T-09 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_11,"O4T-11 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_12,"O4T-12 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_13,"O4T-13 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_16,"O4T-16 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_17,"O4T-17 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_18,"O4T-18 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_19,"O4T-19 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_20,"O4T-20 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_21,"O4T-21 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_O4T_22,"O4T-22 HEAD END, JAM","","MCP_16_RK1_S0:5:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_T5T_08,"T5T-08 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_T5T_09,"T5T-09 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_XO1_02,"XO1-02 HEAD END, JAM","","MCP_02_RK1_S0:7:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_XO1_03,"XO1-03 HEAD END, JAM","","MCP_02_RK1_S0:8:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_XO2_01,"XO2-01 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_XO2_02,"XO2-02 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_XO2_03,"XO2-03 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_XO2_04,"XO2-04 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_PE_XO2_05,"XO2-05 HEAD END, JAM","","MCP_03_RK1_S0:6:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO1_AUTO,"XO1 AUTO/MAINTENANCE","","MCP_02_RK1_S0:6:I.Data.29","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO1_CUR,"XO1 CONTROL UNIT READY","","MCP_02_RK1_S0:6:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO1_DS,"XO1 PANEL DISCONNECT","","MCP_02_RK1_S0:6:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO1_EXT,"XO1 PADDLE POSITION EXTENDED","","MCP_02_RK1_S0:6:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO1_FLT,"XO1 FAULT","","MCP_02_RK1_S0:6:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO1_SLMR,"XO1 SMART LINE MODULE READY","","MCP_02_RK1_S0:6:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO1_ZERO,"XO1 PADDLE POSITION ZERO","","MCP_02_RK1_S0:6:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO2_AUTO,"XO2 AUTO/MAINTENANCE","","MCP_03_RK1_S0:8:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO2_CUR,"XO2 CONTROL UNIT READY","","MCP_03_RK1_S0:8:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO2_DS,"XO2 PANEL DISCONNECT","","MCP_03_RK1_S0:8:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO2_EXT,"XO2 PADDLE POSITION EXTENDED","","MCP_03_RK1_S0:8:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO2_FLT,"XO2 FAULT","","MCP_03_RK1_S0:8:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO2_SLMR,"XO2 SMART LINE MODULE READY","","MCP_03_RK1_S0:8:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SD_XO2_ZERO,"XO2 PADDLE POSITION ZERO","","MCP_03_RK1_S0:8:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SE_BM1_14,"BM1-14 SHAFT ENCODER","","MCP_BM1_RK1_S16:6:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SE_BM1_23,"BM1-23 SHAFT ENCODER","","MCP_03_RK1_S0:2:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SE_C4_09,"","","MCP_03_RK1_S0:2:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SE_CL1T_26,"CL1T-26 SHAFT ENCODER","","MCP_03_RK1_S0:2:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SE_O2T_10,"O2T-10 SHAFT ENCODER","","MCP_01_RK1_S0:1:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SE_O4T_10,"O4T-10 SHAFT ENCODER","","MCP_02_RK1_S0:2:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SE_O4T_20,"","","MCP_16_RK1_S0:1:I.Data.31","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_SE_O4_04,"","","MCP_02_RK1_S0:2:I.Data.30","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_TS_MCP_01_ALM,"MCP-01 MCP HIGH TEMPERATURE","","MCP_01_RK1_S0:4:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_TS_MCP_02_ALM,"MCP-02 MCP HIGH TEMPERATURE","","MCP_02_RK1_S0:3:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_TS_MCP_03_ALM,"MCP-03 MCP HIGH TEMPERATURE","","MCP_03_RK1_S0:3:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_TS_MCP_16_ALM,"MCP-16 MCP HIGH TEMPERATURE","","MCP_16_RK1_S0:3:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_BM1_27_RDY,"BM1-27 VFD READY","","MCP_BM1_RK1_S16:9:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_BM1_28_RDY,"BM1-28 VFD READY","","MCP_BM1_RK1_S16:9:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_BM1_29_RDY,"BM1-29 VFD READY","","MCP_BM1_RK1_S16:9:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_BM1_30_RDY,"BM1-30 VFD READY","","MCP_BM1_RK1_S16:9:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_C2T_12_RDY,"C2T-12 VFD READY","","MCP_01_RK1_S0:1:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_C2T_13_RDY,"C2T-13 VFD READY","","MCP_01_RK1_S0:1:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_C2T_14_RDY,"C2T-14 VFD READY","","MCP_01_RK1_S0:1:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_C2T_15_RDY,"C2T-15 VFD READY","","MCP_01_RK1_S0:1:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_C2T_16_RDY,"C2T-16 VFD READY","","MCP_01_RK1_S0:1:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_C2T_17_RDY,"C2T-17 VFD READY","","MCP_01_RK1_S0:1:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL12T_35_RDY,"CL12T-35 VFD READY","","MCP_16_RK1_S0:1:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL12T_36_RDY,"CL12T-36 VFD READY","","MCP_16_RK1_S0:1:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_01_RDY,"CL1T-01 VFD READY","","MCP_03_RK1_S0:1:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_02_RDY,"CL1T-02 VFD READY","","MCP_03_RK1_S0:1:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_03_RDY,"CL1T-03 VFD READY","","MCP_03_RK1_S0:1:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_04_RDY,"CL1T-04 VFD READY","","MCP_03_RK1_S0:1:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_05_RDY,"CL1T-05 VFD READY","","MCP_03_RK1_S0:1:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_06_RDY,"CL1T-06 VFD READY","","MCP_03_RK1_S0:1:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_07_RDY,"CL1T-07 VFD READY","","MCP_03_RK1_S0:1:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_08_RDY,"CL1T-08 VFD READY","","MCP_03_RK1_S0:1:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_09_RDY,"CL1T-09 VFD READY","","MCP_03_RK1_S0:1:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_10_RDY,"CL1T-10 VFD READY","","MCP_03_RK1_S0:1:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_11_RDY,"CL1T-11 VFD READY","","MCP_03_RK1_S0:1:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_12_RDY,"CL1T-12 VFD READY","","MCP_03_RK1_S0:1:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_13_RDY,"CL1T-13 VFD READY","","MCP_03_RK1_S0:1:I.Data.17","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_14_RDY,"CL1T-14 VFD READY","","MCP_03_RK1_S0:1:I.Data.18","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_15_RDY,"CL1T-15 VFD READY","","MCP_03_RK1_S0:1:I.Data.19","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_16_RDY,"CL1T-16 VFD READY","","MCP_03_RK1_S0:1:I.Data.20","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_17_RDY,"CL1T-17 VFD READY","","MCP_03_RK1_S0:1:I.Data.21","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_18_RDY,"CL1T-18 VFD READY","","MCP_03_RK1_S0:1:I.Data.22","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_19_RDY,"CL1T-19 VFD READY","","MCP_03_RK1_S0:1:I.Data.23","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_20_RDY,"CL1T-20 VFD READY","","MCP_03_RK1_S0:1:I.Data.24","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_21_RDY,"CL1T-21 VFD READY","","MCP_03_RK1_S0:1:I.Data.25","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_23_RDY,"CL1T-23 VFD READY","","MCP_03_RK1_S0:1:I.Data.26","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_24_RDY,"CL1T-24 VFD READY","","MCP_03_RK1_S0:1:I.Data.27","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL1T_26_RDY,"CL1T-26 VFD READY","","MCP_03_RK1_S0:1:I.Data.28","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL2T_01_RDY,"CL2T-01 VFD READY","","MCP_02_RK1_S0:1:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL2T_02_RDY,"CL2T-02 VFD READY","","MCP_02_RK1_S0:1:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL2T_03_RDY,"CL2T-03 VFD READY","","MCP_02_RK1_S0:1:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL2T_04_RDY,"CL2T-04 VFD READY","","MCP_02_RK1_S0:1:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL2T_05_RDY,"CL2T-05 VFD READY","","MCP_02_RK1_S0:1:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL2T_06_RDY,"CL2T-06 VFD READY","","MCP_02_RK1_S0:1:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL2T_07_RDY,"CL2T-07 VFD READY","","MCP_02_RK1_S0:1:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL2T_08_RDY,"CL2T-08 VFD READY","","MCP_02_RK1_S0:1:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL2T_09_RDY,"CL2T-09 VFD READY","","MCP_02_RK1_S0:1:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL3T_01_RDY,"CL3T-01 VFD READY","","MCP_02_RK1_S0:1:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL3T_02_RDY,"CL3T-02 VFD READY","","MCP_02_RK1_S0:1:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL3T_03_RDY,"CL3T-03 VFD READY","","MCP_02_RK1_S0:1:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL3T_04_RDY,"CL3T-04 VFD READY","","MCP_02_RK1_S0:1:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL3T_05_RDY,"CL3T-05 VFD READY","","MCP_02_RK1_S0:1:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL3T_06_RDY,"CL3T-06 VFD READY","","MCP_02_RK1_S0:1:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL3T_07_RDY,"CL3T-07 VFD READY","","MCP_02_RK1_S0:1:I.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_CL3T_08_RDY,"CL3T-08 VFD READY","","MCP_02_RK1_S0:1:I.Data.16","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_HX1T_06_RDY,"HX1T-06 VFD READY","","MCP_03_RK1_S0:2:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_HX1T_07_RDY,"HX1T-07 VFD READY","","MCP_03_RK1_S0:2:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_HX1T_08_RDY,"HX1T-08 VFD READY","","MCP_03_RK1_S0:2:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_HX1T_09_RDY,"HX1T-09 VFD READY","","MCP_03_RK1_S0:2:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_HX1T_10A_RDY,"HX1T-10A VFD READY","","MCP_03_RK1_S0:2:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_HX1T_10_RDY,"HX1T-10 VFD READY","","MCP_03_RK1_S0:2:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_04_RDY,"O2T-04 VFD READY","","MCP_01_RK1_S0:1:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_05_RDY,"O2T-05 VFD READY","","MCP_01_RK1_S0:1:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_06_RDY,"O2T-06 VFD READY","","MCP_01_RK1_S0:1:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_07_RDY,"O2T-07 VFD READY","","MCP_01_RK1_S0:1:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_08_RDY,"O2T-08 VFD READY","","MCP_01_RK1_S0:1:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_09_RDY,"O2T-09 VFD READY","","MCP_01_RK1_S0:1:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_10_RDY,"O2T-10 VFD READY","","MCP_01_RK1_S0:1:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_11_RDY,"O2T-11 VFD READY","","MCP_01_RK1_S0:1:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_12_RDY,"O2T-12 VFD READY","","MCP_01_RK1_S0:1:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_13_RDY,"O2T-13 VFD READY","","MCP_01_RK1_S0:1:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_14_RDY,"O2T-14 VFD READY","","MCP_01_RK1_S0:1:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_15_RDY,"O2T-15 VFD READY","","MCP_01_RK1_S0:1:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_16_RDY,"O2T-16 VFD READY","","MCP_01_RK1_S0:1:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_17_RDY,"O2T-17 VFD READY","","MCP_01_RK1_S0:1:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O2T_18_RDY,"O2T-18 VFD READY","","MCP_01_RK1_S0:1:I.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O3T_17_RDY,"O3T-17 VFD READY","","MCP_16_RK1_S0:1:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O3T_18_RDY,"O3T-18 VFD READY","","MCP_16_RK1_S0:1:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O3T_19_RDY,"O3T-19 VFD READY","","MCP_16_RK1_S0:1:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O3T_20_RDY,"O3T-20 VFD READY","","MCP_16_RK1_S0:1:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_05_RDY,"O4T-05 VFD READY","","MCP_02_RK1_S0:2:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_06_RDY,"O4T-06 VFD READY","","MCP_02_RK1_S0:2:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_07_RDY,"O4T-07 VFD READY","","MCP_02_RK1_S0:2:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_08_RDY,"O4T-08 VFD READY","","MCP_02_RK1_S0:2:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_09_RDY,"O4T-09 VFD READY","","MCP_02_RK1_S0:2:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_10_RDY,"O4T-10 VFD READY","","MCP_02_RK1_S0:2:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_11_RDY,"O4T-11 VFD READY","","MCP_02_RK1_S0:2:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_12_RDY,"O4T-12 VFD READY","","MCP_02_RK1_S0:2:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_13_RDY,"O4T-13 VFD READY","","MCP_02_RK1_S0:2:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_16_RDY,"O4T-16 VFD READY","","MCP_16_RK1_S0:1:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_17_RDY,"O4T-17 VFD READY","","MCP_16_RK1_S0:1:I.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_18_RDY,"O4T-18 VFD READY","","MCP_16_RK1_S0:1:I.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_19_RDY,"O4T-19 VFD READY","","MCP_16_RK1_S0:1:I.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_20_RDY,"O4T-20 VFD READY","","MCP_16_RK1_S0:1:I.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_21_RDY,"O4T-21 VFD READY","","MCP_16_RK1_S0:1:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_O4T_22_RDY,"O4T-22 VFD READY","","MCP_16_RK1_S0:1:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_T5T_08_RDY,"T5T-08 VFD READY","","MCP_02_RK1_S0:2:I.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_T5T_09_RDY,"T5T-09 VFD READY","","MCP_02_RK1_S0:2:I.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_XO1_01_RDY,"XO1-01 VFD READY","","MCP_02_RK1_S0:2:I.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_XO1_02_RDY,"XO1-02 VFD READY","","MCP_02_RK1_S0:2:I.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_XO1_03_RDY,"XO1-03 VFD READY","","MCP_02_RK1_S0:2:I.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_XO2_01_RDY,"XO2-01 VFD READY","","MCP_03_RK1_S0:1:I.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_XO2_02_RDY,"XO2-02 VFD READY","","MCP_03_RK1_S0:1:I.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_XO2_03_RDY,"XO2-03 VFD READY","","MCP_03_RK1_S0:1:I.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_XO2_04_RDY,"XO2-04 VFD READY","","MCP_03_RK1_S0:1:I.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,I_VFD_XO2_05_RDY,"XO2-05 VFD READY","","MCP_03_RK1_S0:1:I.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,LAST_MAJOR_FAULT,"","FAULTRECORD","","(Constant := false, ExternalAccess := Read Only)"
TAG,,LEN,"","LEN[7]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,LENx,"","LENx[7]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,LTA_FLASH,"LTA FLASH ARRAY","BOOL[128]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,LTW_FLASH,"LTW FLASH ARRAY","BOOL[64]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,MAJOR_FAULT_DISCARD,"","FAULTRECORD","","(Constant := false, ExternalAccess := Read Only)"
TAG,,MAJOR_FAULT_FIFO,"","FAULTRECORD[10]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,MAJOR_FAULT_FIFO_CONTROL,"Major Fault Fifo Control","CONTROL","","(Constant := false, ExternalAccess := Read Only)"
TAG,,MaxLengthSetupCount,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,MCP_01,"","","SYS[1]","(ExternalAccess := Read Only)"
ALIAS,,MCP_01_EPB_ONS,"","","EPB_ONS[39]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,MCP_01_RK1_S0_STATUS,"","","COM_STATUS[3]","(ExternalAccess := Read Only)"
ALIAS,,MCP_01_RK2_S0_STATUS,"","","COM_STATUS[4]","(ExternalAccess := Read Only)"
ALIAS,,MCP_02,"","","SYS[2]","(ExternalAccess := Read Only)"
ALIAS,,MCP_02_EPB_ONS,"","","EPB_ONS[40]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,MCP_02_RK1_S0_STATUS,"","","COM_STATUS[5]","(ExternalAccess := Read Only)"
ALIAS,,MCP_02_RK2_S0_STATUS,"","","COM_STATUS[6]","(ExternalAccess := Read Only)"
ALIAS,,MCP_03,"","","SYS[3]","(ExternalAccess := Read Only)"
ALIAS,,MCP_03_EPB_ONS,"","","EPB_ONS[41]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,MCP_03_RK1_S0_STATUS,"","","COM_STATUS[7]","(ExternalAccess := Read Only)"
ALIAS,,MCP_03_RK2_S0_STATUS,"","","COM_STATUS[8]","(ExternalAccess := Read Only)"
ALIAS,,MCP_16,"","","SYS[4]","(ExternalAccess := Read Only)"
ALIAS,,MCP_16_EPB_ONS,"","","EPB_ONS[42]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,MCP_16_RK1_S0_STATUS,"","","COM_STATUS[9]","(ExternalAccess := Read Only)"
ALIAS,,MCP_16_RK2_S0_STATUS,"","","COM_STATUS[10]","(ExternalAccess := Read Only)"
ALIAS,,MCP_BM1,"","","SYS[0]","(ExternalAccess := Read Only)"
ALIAS,,MCP_BM1_EPB_ONS,"","","EPB_ONS[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,MCP_BM1_RK1_S16_STATUS,"","","COM_STATUS[1]","(ExternalAccess := Read Only)"
ALIAS,,MCP_BM1_RK2_S0_STATUS,"","","COM_STATUS[2]","(ExternalAccess := Read Only)"
TAG,,Merge_mask_size,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,Merge_mask_size_adjusted,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,Merge_UDTs,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,MRG,"","MRG[7]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,MrgLenMask1,"","DINT[96]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,MrgLenMask2,"","DINT[96]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,MrgLenMask3,"","DINT[96]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,MrgSetupCount,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,MrgSetupShiftControl,"","CONTROL","","(Constant := false, ExternalAccess := Read Only)"
TAG,,MrgSetupTempRegs,"","DINT[3]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,MRGx,"","MRGx[7]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,MRG_array_index,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,MRG_array_size,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,MsgConst,"","MSG_CONST","","(Constant := false, ExternalAccess := Read Only)"
TAG,,MSG_QUEUE,"","MSG_P2UL_SMH[50]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,MSG_TO_UL,"","MSG_P2UL_SMH[10]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,MSG_TO_UL_Add,"","MSG_P2UL_SMH","","(Constant := false, ExternalAccess := Read Only)"
ALIAS,,MSG_TO_UL_DN,"Msg status Bit5 - Transfer Done","","R_MSG_TO_UL.FLAGS.5","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,MSG_TO_UL_EN,"Msg status Bit7 - Transfer Enable","","R_MSG_TO_UL.FLAGS.7","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,MSG_TO_UL_ER,"Msg status Bit4 - Transfer Error","","R_MSG_TO_UL.FLAGS.4","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,MSG_TO_UL_EW,"Msg status Bit2 - Enable Waiting","","R_MSG_TO_UL.FLAGS.2","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,MSG_TO_UL_QUEUE,"","MSG_P2UL_QUEUE","","(Constant := false, ExternalAccess := Read Only)"
ALIAS,,MSG_TO_UL_ST,"Msg status Bit6 - Transfer Executing","","R_MSG_TO_UL.FLAGS.6","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,MTR,"","MTR[300]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,MTRx,"","MTRx[300]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,NET_MON_PLC_101,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,O2T,"","","SYS[3]","(ExternalAccess := Read Only)"
ALIAS,,O2T_04_EPB_ONS,"","","EPB_ONS[43]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O2T_04_MTR,"","","MTR[49]","(ExternalAccess := Read Only)"
ALIAS,,O2T_04_MTRx,"","","MTRx[49]","(ExternalAccess := Read Only)"
ALIAS,,O2T_04_PE,"","","PE[54]","(ExternalAccess := Read Only)"
ALIAS,,O2T_04_VFD,"","","VFD[49]","(ExternalAccess := Read Only)"
ALIAS,,O2T_05_MTR,"","","MTR[48]","(ExternalAccess := Read Only)"
ALIAS,,O2T_05_MTRx,"","","MTRx[48]","(ExternalAccess := Read Only)"
ALIAS,,O2T_05_PE,"","","PE[53]","(ExternalAccess := Read Only)"
ALIAS,,O2T_05_VFD,"","","VFD[48]","(ExternalAccess := Read Only)"
ALIAS,,O2T_06_EPB_ONS,"","","EPB_ONS[44]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O2T_06_MTR,"","","MTR[47]","(ExternalAccess := Read Only)"
ALIAS,,O2T_06_MTRx,"","","MTRx[47]","(ExternalAccess := Read Only)"
ALIAS,,O2T_06_PE,"","","PE[52]","(ExternalAccess := Read Only)"
ALIAS,,O2T_06_VFD,"","","VFD[47]","(ExternalAccess := Read Only)"
ALIAS,,O2T_07_MTR,"","","MTR[46]","(ExternalAccess := Read Only)"
ALIAS,,O2T_07_MTRx,"","","MTRx[46]","(ExternalAccess := Read Only)"
ALIAS,,O2T_07_PE,"","","PE[51]","(ExternalAccess := Read Only)"
ALIAS,,O2T_07_VFD,"","","VFD[46]","(ExternalAccess := Read Only)"
ALIAS,,O2T_08_MTR,"","","MTR[45]","(ExternalAccess := Read Only)"
ALIAS,,O2T_08_MTRx,"","","MTRx[45]","(ExternalAccess := Read Only)"
ALIAS,,O2T_08_PE,"","","PE[50]","(ExternalAccess := Read Only)"
ALIAS,,O2T_08_VFD,"","","VFD[45]","(ExternalAccess := Read Only)"
ALIAS,,O2T_09_MTR,"","","MTR[44]","(ExternalAccess := Read Only)"
ALIAS,,O2T_09_MTRx,"","","MTRx[44]","(ExternalAccess := Read Only)"
ALIAS,,O2T_09_PE,"","","PE[49]","(ExternalAccess := Read Only)"
ALIAS,,O2T_09_VFD,"","","VFD[44]","(ExternalAccess := Read Only)"
ALIAS,,O2T_10_BT,"","","BTP[8]","(ExternalAccess := Read Only)"
ALIAS,,O2T_10_BTx,"","","BTx[8]","(ExternalAccess := Read Only)"
ALIAS,,O2T_10_EPB_ONS,"","","EPB_ONS[45]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O2T_10_MTR,"","","MTR[43]","(ExternalAccess := Read Only)"
ALIAS,,O2T_10_MTRx,"","","MTRx[43]","(ExternalAccess := Read Only)"
ALIAS,,O2T_10_PE,"","","PE[48]","(ExternalAccess := Read Only)"
ALIAS,,O2T_10_VFD,"","","VFD[43]","(ExternalAccess := Read Only)"
ALIAS,,O2T_11_MTR,"","","MTR[42]","(ExternalAccess := Read Only)"
ALIAS,,O2T_11_MTRx,"","","MTRx[42]","(ExternalAccess := Read Only)"
ALIAS,,O2T_11_PE,"","","PE[47]","(ExternalAccess := Read Only)"
ALIAS,,O2T_11_VFD,"","","VFD[42]","(ExternalAccess := Read Only)"
ALIAS,,O2T_12_EPB_ONS,"","","EPB_ONS[46]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O2T_12_MTR,"","","MTR[41]","(ExternalAccess := Read Only)"
ALIAS,,O2T_12_MTRx,"","","MTRx[41]","(ExternalAccess := Read Only)"
ALIAS,,O2T_12_PE,"","","PE[46]","(ExternalAccess := Read Only)"
ALIAS,,O2T_12_VFD,"","","VFD[41]","(ExternalAccess := Read Only)"
ALIAS,,O2T_13_MTR,"","","MTR[40]","(ExternalAccess := Read Only)"
ALIAS,,O2T_13_MTRx,"","","MTRx[40]","(ExternalAccess := Read Only)"
ALIAS,,O2T_13_PE,"","","PE[45]","(ExternalAccess := Read Only)"
ALIAS,,O2T_13_VFD,"","","VFD[40]","(ExternalAccess := Read Only)"
ALIAS,,O2T_14_EPB_ONS,"","","EPB_ONS[47]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O2T_14_MTR,"","","MTR[39]","(ExternalAccess := Read Only)"
ALIAS,,O2T_14_MTRx,"","","MTRx[39]","(ExternalAccess := Read Only)"
ALIAS,,O2T_14_PE,"","","PE[44]","(ExternalAccess := Read Only)"
ALIAS,,O2T_14_VFD,"","","VFD[39]","(ExternalAccess := Read Only)"
ALIAS,,O2T_15_MTR,"","","MTR[38]","(ExternalAccess := Read Only)"
ALIAS,,O2T_15_MTRx,"","","MTRx[38]","(ExternalAccess := Read Only)"
ALIAS,,O2T_15_PE,"","","PE[43]","(ExternalAccess := Read Only)"
ALIAS,,O2T_15_VFD,"","","VFD[38]","(ExternalAccess := Read Only)"
ALIAS,,O2T_16_MTR,"","","MTR[37]","(ExternalAccess := Read Only)"
ALIAS,,O2T_16_MTRx,"","","MTRx[37]","(ExternalAccess := Read Only)"
ALIAS,,O2T_16_PE,"","","PE[42]","(ExternalAccess := Read Only)"
ALIAS,,O2T_16_VFD,"","","VFD[37]","(ExternalAccess := Read Only)"
ALIAS,,O2T_17_BT,"","","BTP[5]","(ExternalAccess := Read Only)"
ALIAS,,O2T_17_BTx,"","","BTx[5]","(ExternalAccess := Read Only)"
ALIAS,,O2T_17_LEN,"","","LEN[1]","(ExternalAccess := Read Only)"
ALIAS,,O2T_17_LENx,"","","LENx[1]","(ExternalAccess := Read Only)"
ALIAS,,O2T_17_MTR,"","","MTR[36]","(ExternalAccess := Read Only)"
ALIAS,,O2T_17_MTRx,"","","MTRx[36]","(ExternalAccess := Read Only)"
ALIAS,,O2T_17_PE,"","","PE[41]","(ExternalAccess := Read Only)"
ALIAS,,O2T_17_VFD,"","","VFD[36]","(ExternalAccess := Read Only)"
ALIAS,,O2T_18_BT,"","","BTP[4]","(ExternalAccess := Read Only)"
ALIAS,,O2T_18_BTx,"","","BTx[4]","(ExternalAccess := Read Only)"
ALIAS,,O2T_18_EPB_ONS,"","","EPB_ONS[48]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O2T_18_MRG,"","","MRG[1]","(ExternalAccess := Read Only)"
ALIAS,,O2T_18_MRGx,"","","MRGx[1]","(ExternalAccess := Read Only)"
ALIAS,,O2T_18_MTR,"","","MTR[35]","(ExternalAccess := Read Only)"
ALIAS,,O2T_18_MTRx,"","","MTRx[35]","(ExternalAccess := Read Only)"
ALIAS,,O2T_18_PE,"","","PE[40]","(ExternalAccess := Read Only)"
ALIAS,,O2T_18_VFD,"","","VFD[35]","(ExternalAccess := Read Only)"
ALIAS,,O3T,"","","SYS[12]","(ExternalAccess := Read Only)"
ALIAS,,O3T_17_EPB_ONS,"","","EPB_ONS[87]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O3T_17_MTR,"","","MTR[134]","(ExternalAccess := Read Only)"
ALIAS,,O3T_17_MTRx,"","","MTRx[134]","(ExternalAccess := Read Only)"
ALIAS,,O3T_17_PE,"","","PE[140]","(ExternalAccess := Read Only)"
ALIAS,,O3T_17_VFD,"","","VFD[134]","(ExternalAccess := Read Only)"
ALIAS,,O3T_18_MTR,"","","MTR[133]","(ExternalAccess := Read Only)"
ALIAS,,O3T_18_MTRx,"","","MTRx[133]","(ExternalAccess := Read Only)"
ALIAS,,O3T_18_PE,"","","PE[139]","(ExternalAccess := Read Only)"
ALIAS,,O3T_18_VFD,"","","VFD[133]","(ExternalAccess := Read Only)"
ALIAS,,O3T_19_EPB1_ONS,"","","EPB_ONS[88]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O3T_19_EPB2_ONS,"","","EPB_ONS[89]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O3T_19_MTR,"","","MTR[132]","(ExternalAccess := Read Only)"
ALIAS,,O3T_19_MTRx,"","","MTRx[132]","(ExternalAccess := Read Only)"
ALIAS,,O3T_19_PE,"","","PE[138]","(ExternalAccess := Read Only)"
ALIAS,,O3T_19_VFD,"","","VFD[132]","(ExternalAccess := Read Only)"
ALIAS,,O3T_20_MTR,"","","MTR[131]","(ExternalAccess := Read Only)"
ALIAS,,O3T_20_MTRx,"","","MTRx[131]","(ExternalAccess := Read Only)"
ALIAS,,O3T_20_PE,"","","PE[137]","(ExternalAccess := Read Only)"
ALIAS,,O3T_20_VFD,"","","VFD[131]","(ExternalAccess := Read Only)"
ALIAS,,O3T_21_MTR,"","","MTR[130]","(ExternalAccess := Read Only)"
ALIAS,,O3T_21_MTRx,"","","MTRx[130]","(ExternalAccess := Read Only)"
ALIAS,,O3T_21_VFD,"","","VFD[130]","(ExternalAccess := Read Only)"
ALIAS,,O4T,"","","SYS[13]","(ExternalAccess := Read Only)"
ALIAS,,O4T_05_MTR,"","","MTR[81]","(ExternalAccess := Read Only)"
ALIAS,,O4T_05_MTRx,"","","MTRx[81]","(ExternalAccess := Read Only)"
ALIAS,,O4T_05_PE,"","","PE[87]","(ExternalAccess := Read Only)"
ALIAS,,O4T_05_VFD,"","","VFD[81]","(ExternalAccess := Read Only)"
ALIAS,,O4T_06_EPB_ONS,"","","EPB_ONS[67]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O4T_06_MTR,"","","MTR[80]","(ExternalAccess := Read Only)"
ALIAS,,O4T_06_MTRx,"","","MTRx[80]","(ExternalAccess := Read Only)"
ALIAS,,O4T_06_PE,"","","PE[86]","(ExternalAccess := Read Only)"
ALIAS,,O4T_06_VFD,"","","VFD[80]","(ExternalAccess := Read Only)"
ALIAS,,O4T_07_MTR,"","","MTR[79]","(ExternalAccess := Read Only)"
ALIAS,,O4T_07_MTRx,"","","MTRx[79]","(ExternalAccess := Read Only)"
ALIAS,,O4T_07_PE,"","","PE[85]","(ExternalAccess := Read Only)"
ALIAS,,O4T_07_VFD,"","","VFD[79]","(ExternalAccess := Read Only)"
ALIAS,,O4T_08_MTR,"","","MTR[78]","(ExternalAccess := Read Only)"
ALIAS,,O4T_08_MTRx,"","","MTRx[78]","(ExternalAccess := Read Only)"
ALIAS,,O4T_08_PE,"","","PE[84]","(ExternalAccess := Read Only)"
ALIAS,,O4T_08_VFD,"","","VFD[78]","(ExternalAccess := Read Only)"
ALIAS,,O4T_09_BT,"","","BTP[17]","(ExternalAccess := Read Only)"
ALIAS,,O4T_09_BTx,"","","BTx[17]","(ExternalAccess := Read Only)"
ALIAS,,O4T_09_MTR,"","","MTR[77]","(ExternalAccess := Read Only)"
ALIAS,,O4T_09_MTRx,"","","MTRx[77]","(ExternalAccess := Read Only)"
ALIAS,,O4T_09_PE,"","","PE[83]","(ExternalAccess := Read Only)"
ALIAS,,O4T_09_VFD,"","","VFD[77]","(ExternalAccess := Read Only)"
TAG,,O4T_10A_TD,"","Non_Tracked_Div","","(Constant := false, ExternalAccess := Read/Write)"
ALIAS,,O4T_10_BT,"","","BTP[16]","(ExternalAccess := Read Only)"
ALIAS,,O4T_10_BTx,"","","BTx[16]","(ExternalAccess := Read Only)"
ALIAS,,O4T_10_EPB_ONS,"","","EPB_ONS[68]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O4T_10_MTR,"","","MTR[76]","(ExternalAccess := Read Only)"
ALIAS,,O4T_10_MTRx,"","","MTRx[76]","(ExternalAccess := Read Only)"
ALIAS,,O4T_10_PE1,"","","PE[81]","(ExternalAccess := Read Only)"
ALIAS,,O4T_10_PE2,"","","PE[82]","(ExternalAccess := Read Only)"
ALIAS,,O4T_10_VFD,"","","VFD[76]","(ExternalAccess := Read Only)"
ALIAS,,O4T_11_MTR,"","","MTR[75]","(ExternalAccess := Read Only)"
ALIAS,,O4T_11_MTRx,"","","MTRx[75]","(ExternalAccess := Read Only)"
ALIAS,,O4T_11_PE,"","","PE[80]","(ExternalAccess := Read Only)"
ALIAS,,O4T_11_VFD,"","","VFD[75]","(ExternalAccess := Read Only)"
ALIAS,,O4T_12_MTR,"","","MTR[74]","(ExternalAccess := Read Only)"
ALIAS,,O4T_12_MTRx,"","","MTRx[74]","(ExternalAccess := Read Only)"
ALIAS,,O4T_12_PE,"","","PE[79]","(ExternalAccess := Read Only)"
ALIAS,,O4T_12_VFD,"","","VFD[74]","(ExternalAccess := Read Only)"
ALIAS,,O4T_13_MTR,"","","MTR[73]","(ExternalAccess := Read Only)"
ALIAS,,O4T_13_MTRx,"","","MTRx[73]","(ExternalAccess := Read Only)"
ALIAS,,O4T_13_PE,"","","PE[78]","(ExternalAccess := Read Only)"
ALIAS,,O4T_13_VFD,"","","VFD[73]","(ExternalAccess := Read Only)"
ALIAS,,O4T_16_EPB_ONS,"","","EPB_ONS[90]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O4T_16_MTR,"","","MTR[130]","(ExternalAccess := Read Only)"
ALIAS,,O4T_16_MTRx,"","","MTRx[130]","(ExternalAccess := Read Only)"
ALIAS,,O4T_16_PE,"","","PE[136]","(ExternalAccess := Read Only)"
ALIAS,,O4T_16_VFD,"","","VFD[130]","(ExternalAccess := Read Only)"
ALIAS,,O4T_17_MTR,"","","MTR[129]","(ExternalAccess := Read Only)"
ALIAS,,O4T_17_MTRx,"","","MTRx[129]","(ExternalAccess := Read Only)"
ALIAS,,O4T_17_PE,"","","PE[135]","(ExternalAccess := Read Only)"
ALIAS,,O4T_17_VFD,"","","VFD[129]","(ExternalAccess := Read Only)"
ALIAS,,O4T_18_MTR,"","","MTR[128]","(ExternalAccess := Read Only)"
ALIAS,,O4T_18_MTRx,"","","MTRx[128]","(ExternalAccess := Read Only)"
ALIAS,,O4T_18_PE,"","","PE[134]","(ExternalAccess := Read Only)"
ALIAS,,O4T_18_VFD,"","","VFD[128]","(ExternalAccess := Read Only)"
ALIAS,,O4T_19_MTR,"","","MTR[127]","(ExternalAccess := Read Only)"
ALIAS,,O4T_19_MTRx,"","","MTRx[127]","(ExternalAccess := Read Only)"
ALIAS,,O4T_19_PE,"","","PE[133]","(ExternalAccess := Read Only)"
ALIAS,,O4T_19_VFD,"","","VFD[127]","(ExternalAccess := Read Only)"
ALIAS,,O4T_2,"","","SYS[7]","(ExternalAccess := Read Only)"
ALIAS,,O4T_20_BT,"","","BTP[22]","(ExternalAccess := Read Only)"
ALIAS,,O4T_20_BTx,"","","BTx[22]","(ExternalAccess := Read Only)"
ALIAS,,O4T_20_MTR,"","","MTR[126]","(ExternalAccess := Read Only)"
ALIAS,,O4T_20_MTRx,"","","MTRx[126]","(ExternalAccess := Read Only)"
ALIAS,,O4T_20_PE,"","","PE[132]","(ExternalAccess := Read Only)"
ALIAS,,O4T_20_VFD,"","","VFD[126]","(ExternalAccess := Read Only)"
ALIAS,,O4T_21_EPB1_ONS,"","","EPB_ONS[91]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O4T_21_EPB2_ONS,"","","EPB_ONS[92]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,O4T_21_MTR,"","","MTR[125]","(ExternalAccess := Read Only)"
ALIAS,,O4T_21_MTRx,"","","MTRx[125]","(ExternalAccess := Read Only)"
ALIAS,,O4T_21_PE,"","","PE[131]","(ExternalAccess := Read Only)"
ALIAS,,O4T_21_VFD,"","","VFD[125]","(ExternalAccess := Read Only)"
ALIAS,,O4T_22_MTR,"","","MTR[124]","(ExternalAccess := Read Only)"
ALIAS,,O4T_22_MTRx,"","","MTRx[124]","(ExternalAccess := Read Only)"
ALIAS,,O4T_22_PE,"","","PE[130]","(ExternalAccess := Read Only)"
ALIAS,,O4T_22_VFD,"","","VFD[124]","(ExternalAccess := Read Only)"
ALIAS,,O4_03_PE,"","","PE[144]","(ExternalAccess := Read Only)"
ALIAS,,O4_04ZZ_MTRx,"","","MTRx[139]","(ExternalAccess := Read Only)"
ALIAS,,O4_04_BT,"","","BTP[21]","(ExternalAccess := Read Only)"
ALIAS,,O4_04_BTx,"","","BTx[21]","(ExternalAccess := Read Only)"
ALIAS,,O4_06ZZ_MTRx,"","","MTRx[141]","(ExternalAccess := Read Only)"
ALIAS,,O_CBP_BM1_07_TRIG,"BM1-07 CLUTCH/BRAKE","","MCP_BM1_RK2_S0:3:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CBP_BM1_08_TRIG,"BM1-08 CLUTCH/BRAKE","","MCP_BM1_RK2_S0:3:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CBP_BM1_09_TRIG,"BM1-09 CLUTCH/BRAKE","","MCP_BM1_RK2_S0:3:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CBP_BM1_10_TRIG,"BM1-10 CLUTCH/BRAKE","","MCP_BM1_RK2_S0:3:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CBP_BM1_11_TRIG,"BM1-11 CLUTCH/BRAKE","","MCP_BM1_RK2_S0:3:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CBP_BM1_12_TRIG,"BM1-12 CLUTCH/BRAKE","","MCP_BM1_RK2_S0:3:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CBP_BM1_13_TRIG,"BM1-13 CLUTCH/BRAKE","","MCP_BM1_RK2_S0:3:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_14_EPB,"BM1-14-A E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_14_RPBA,"BM1-14-A JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_16_EPB,"BM1-16-A E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_16_RPBA,"BM1-16-A JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_17_EPB,"BM1-17-B E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_17_RPBA,"BM1-17-B JAM RESET","","MCP_BM1_RK2_S0:6:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_23_EPB,"BM1-23-A E-STOP LIGHT","","MCP_03_RK2_S0:6:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_23_RPBA,"BM1-23-A JAM RESET LIGHT","","MCP_03_RK2_S0:6:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_23_SPBG,"BM1-23-A START LIGHT","","MCP_03_RK2_S0:6:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_27_EPB,"BM1-28-B E-STOP LIGHT","","MCP_BM1_RK2_S0:9:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_27_RPBA,"BM1-28-B JAM RESET","","MCP_BM1_RK2_S0:5:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_28_EPB,"BM1-29-B E-STOP LIGHT","","MCP_BM1_RK2_S0:9:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_28_LTW,"BM1-29 Oversize$N","","MCP_BM1_RK2_S0:5:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_28_RPBA,"BM1-29-B JAM RESET","","MCP_BM1_RK2_S0:6:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,O_CS1_BM1_28_SPBG,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_29_EPB,"BM1-29-A E-STOP LIGHT","","MCP_BM1_RK2_S0:9:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_29_LTB,"MOTOR FAULT LIGHT","","MCP_BM1_RK2_S0:5:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_29_RPBA,"BM1-29-A JAM RESET","","MCP_BM1_RK2_S0:5:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_30_EPB,"BM1-30-A E-STOP LIGHT","","MCP_BM1_RK2_S0:9:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_30_LTW,"BM1-30 Oversize$N","","MCP_BM1_RK2_S0:5:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_BM1_30_RPBA,"BM1-30-A JAM RESET","","MCP_BM1_RK2_S0:5:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL1T_01_EPB,"CL1T-01-A E-STOP LIGHT","","MCP_03_RK2_S0:4:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL1T_01_SPBG,"CL1T-01-A START LIGHT","","MCP_03_RK2_S0:4:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL1T_02_EPB,"CL1T-02-A E-STOP LIGHT","","MCP_03_RK2_S0:4:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL1T_02_RPBA,"CL1T-02-A JAM RESET LIGHT","","MCP_03_RK2_S0:4:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL1T_02_SPBG,"CL1T-02-A START LIGHT","","MCP_03_RK2_S0:4:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL2T_01_EPB,"CL2T-01-A E-STOP LIGHT","","MCP_02_RK2_S0:3:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL2T_01_SPBG,"CL2T-01-A START LIGHT","","MCP_02_RK2_S0:3:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL2T_02_EPB,"CL2T-02-A E-STOP LIGHT","","MCP_02_RK2_S0:3:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL2T_02_RPBA,"CL2T-02-A JAM RESET LIGHT","","MCP_02_RK2_S0:3:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL2T_02_SPBG,"CL2T-02-A START LIGHT","","MCP_02_RK2_S0:3:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL2T_05_EPB,"CL2T-05-A E-STOP LIGHT","","MCP_02_RK2_S0:4:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL2T_05_RPBA,"CL2T-05-A JAM RESET LIGHT","","MCP_02_RK2_S0:4:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL2T_05_SPBG,"CL2T-05-A START LIGHT","","MCP_02_RK2_S0:4:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL3T_01_EPB,"CL3T-01-A E-STOP LIGHT","","MCP_02_RK2_S0:5:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL3T_01_SPBG,"CL3T-01-A START LIGHT","","MCP_02_RK2_S0:5:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL3T_02_EPB,"CL3T-02-A E-STOP LIGHT","","MCP_02_RK2_S0:5:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL3T_02_RPBA,"CL3T-02-A JAM RESET LIGHT","","MCP_02_RK2_S0:5:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_CL3T_02_SPBG,"CL3T-02-A START LIGHT","","MCP_02_RK2_S0:5:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_O3T_19_EPB,"O3T-19-A E-STOP LIGHT","","MCP_16_RK1_S0:6:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_O3T_19_RPBA,"O3T-19-A JAM RESET LIGHT","","MCP_16_RK1_S0:6:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_O3T_19_SPBG,"O3T-19-A START LIGHT","","MCP_16_RK1_S0:6:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_O4T_21_EPB,"O4T-21-A E-STOP LIGHT","","MCP_16_RK1_S0:7:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_O4T_21_RPBA,"O4T-21-A JAM RESET LIGHT","","MCP_16_RK1_S0:7:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS1_O4T_21_SPBG,"O4T-21-A START LIGHT","","MCP_16_RK1_S0:7:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_14_EPB,"BM1-14-B E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_14_RPBA,"BM1-14-B JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_16_EPB,"BM1-16-B E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_16_RPBA,"BM1-16-B JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_17_EPB,"BM1-17-A E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_17_LTB,"BM1-17 MOTOR FAULT LIGHT","","MCP_BM1_RK2_S0:5:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_17_RPBA,"JAM RESET","","MCP_BM1_RK2_S0:6:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_17_SPBG,"BM1-17 START/RESET","","MCP_BM1_RK2_S0:5:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_27_EPB,"BM1-27 E-STOP LIGHT","","MCP_BM1_RK2_S0:9:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_27_RPBA,"BM1-27 JAM RESET","","MCP_BM1_RK2_S0:5:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_28_EPB,"BM1-28-A E-STOP LIGHT","","MCP_BM1_RK2_S0:9:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_28_RPBA,"BM1-28-A JAM RESET","","MCP_BM1_RK2_S0:5:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_29_EPB,"BM1-29-B E-STOP LIGHT","","MCP_BM1_RK2_S0:2:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_29_RPBA,"BM1-29-B JAM RESET","","MCP_BM1_RK2_S0:6:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_29_SPBG,"BM1-29-B START/RESET","","MCP_BM1_RK2_S0:9:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_30_EPB,"BM1-30-B E-STOP LIGHT","","MCP_BM1_RK2_S0:9:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_BM1_30_RPBA,"BM1-30-B JAM RESET","","MCP_BM1_RK2_S0:5:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL1T_01_EPB,"CL1T-01-B E-STOP LIGHT","","MCP_03_RK2_S0:4:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL1T_01_SPBG,"CL1T-01-B START LIGHT","","MCP_03_RK2_S0:4:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL1T_02_EPB,"CL1T-02-B E-STOP LIGHT","","MCP_03_RK2_S0:4:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL1T_02_SPBG,"CL1T-02-B START LIGHT","","MCP_03_RK2_S0:4:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL2T_01_EPB,"CL2T-01-B E-STOP LIGHT","","MCP_02_RK2_S0:3:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL2T_01_SPBG,"CL2T-01-B START LIGHT","","MCP_02_RK2_S0:3:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL2T_02_EPB,"CL2T-02-B E-STOP LIGHT","","MCP_02_RK2_S0:3:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL2T_02_SPBG,"CL2T-02-B START LIGHT","","MCP_02_RK2_S0:3:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL2T_05_EPB,"CL2T-05-B E-STOP LIGHT","","MCP_02_RK2_S0:4:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL2T_05_RPBA,"CL2T-05-B JAM RESET LIGHT","","MCP_02_RK2_S0:4:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL2T_05_SPBG,"CL2T-05-B START LIGHT","","MCP_02_RK2_S0:4:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL3T_01_EPB,"CL3T-01-B E-STOP LIGHT","","MCP_02_RK2_S0:5:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL3T_01_SPBG,"CL3T-01-B START LIGHT","","MCP_02_RK2_S0:5:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL3T_02_EPB,"CL3T-02-B E-STOP LIGHT","","MCP_02_RK2_S0:6:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_CL3T_02_SPBG,"CL3T-02-B START LIGHT","","MCP_02_RK2_S0:6:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_O3T_19_EPB,"O3T-19-B E-STOP LIGHT","","MCP_16_RK1_S0:6:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_O3T_19_RPBA,"O3T-19-B JAM RESET LIGHT","","MCP_16_RK1_S0:6:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_O3T_19_SPBG,"O3T-19-B START LIGHT","","MCP_16_RK1_S0:6:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_O4T_21_EPB,"O4T-21-B E-STOP LIGHT","","MCP_16_RK1_S0:7:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_O4T_21_RPBA,"O4T-21-B JAM RESET LIGHT","","MCP_16_RK1_S0:7:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS2_O4T_21_SPBG,"O4T-21-B START LIGHT","","MCP_16_RK1_S0:7:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_BM1_27_EPB,"BM1-27-C E-STOP LIGHT","","MCP_BM1_RK2_S0:3:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_BM1_28_EPB,"BM1-28-C E-STOP LIGHT","","MCP_BM1_RK2_S0:3:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_BM1_29_EPB,"BM1-29-C E-STOP LIGHT","","MCP_BM1_RK2_S0:3:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_BM1_30_EPB,"BM1-30-C E-STOP LIGHT","","MCP_BM1_RK2_S0:2:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_BM1_30_RPBA,"BM1-30-C JAM RESET","","MCP_BM1_RK2_S0:6:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_BM1_30_SPBG,"BM1-30-C START/RESET","","MCP_BM1_RK2_S0:9:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_CL1T_01_EPB,"CL1T-01-C E-STOP LIGHT","","MCP_03_RK2_S0:4:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_CL1T_01_SPBG,"CL1T-01-C START LIGHT","","MCP_03_RK2_S0:4:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_CL1T_02_EPB,"CL1T-02-C E-STOP LIGHT","","MCP_03_RK2_S0:5:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_CL1T_02_SPBG,"CL1T-02-C START LIGHT","","MCP_03_RK2_S0:5:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_CL2T_02_EPB,"CL2T-02-C E-STOP LIGHT","","MCP_02_RK2_S0:3:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_CL2T_02_SPBG,"CL2T-02-C START LIGHT","","MCP_02_RK2_S0:3:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_CL3T_02_EPB,"CL3T-02-C E-STOP LIGHT","","MCP_02_RK2_S0:6:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS3_CL3T_02_SPBG,"CL3T-02-C START LIGHT","","MCP_02_RK2_S0:6:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS4_BM1_27_EPB,"BM1-27-D E-STOP LIGHT","","MCP_BM1_RK2_S0:3:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS4_BM1_28_EPB,"BM1-28-D E-STOP LIGHT","","MCP_BM1_RK2_S0:3:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,O_CS4_BM1_28_RPBA,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
ALIAS,,O_CS4_BM1_28_SPBG,"BM1-29 START/RESET","","MCP_BM1_RK2_S0:5:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS4_BM1_29_EPB,"BM1-29-D E-STOP LIGHT","","MCP_BM1_RK2_S0:3:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS4_BM1_30_EPB,"BM1-30-D E-STOP LIGHT","","MCP_BM1_RK2_S0:3:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS4_CL3T_02_EPB,"CL3T-02-D E-STOP LIGHT","","MCP_02_RK2_S0:6:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS4_CL3T_02_RPBA,"CL3T-02-D JAM RESET LIGHT","","MCP_02_RK2_S0:6:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS4_CL3T_02_SPBG,"CL3T-02-D START LIGHT","","MCP_02_RK2_S0:6:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS5_BM1_27_EPB,"BM1-27-E E-STOP LIGHT","","MCP_BM1_RK1_S16:14:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS5_BM1_27_RPBA,"BM1-27-E JAM RESET","","MCP_BM1_RK2_S0:6:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS5_BM1_27_SPBG,"BM1-27-E START/RESET","","MCP_BM1_RK2_S0:9:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS5_BM1_28_EPB,"BM1-28-E E-STOP LIGHT","","MCP_BM1_RK1_S16:14:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS5_BM1_28_RPBA,"BM1-28-E JAM RESET","","MCP_BM1_RK2_S0:6:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS5_BM1_28_SPBG,"BM1-28-E START/RESET","","MCP_BM1_RK2_S0:9:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_01_EPB,"BM1-01 E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_01_RPBA,"BM1-01 JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_02_EPB,"BM1-02 E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_02_RPBA,"BM1-02 JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_03_EPB,"BM1-03 E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_03_RPBA,"BM1-03 JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_06_EPB,"BM1-06 E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_06_RPBA,"BM1-06 JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_07_EPB,"BM1-07 E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_07_LTW,"BM1-07 Oversize","","MCP_BM1_RK2_S0:5:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_07_RPBA,"BM1-07 JAM RESET","","MCP_BM1_RK2_S0:6:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_07_SPBG,"BM1-07 START/RESET","","MCP_BM1_RK2_S0:5:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_13_EPB,"BM1-13 E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_13_RPBA,"BM1-13 JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_15_EPB,"BM1-15 E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_15_RPBA,"BM1-15 JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_17_LTB,"MOTOR FAULT LIGHT","","MCP_BM1_RK2_S0:5:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_17_SPBG,"START/RESET","","MCP_BM1_RK2_S0:5:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_18_EPB,"BM1-18 E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_18_RPBA,"BM1-18 JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_19_EPB,"BM1-19 E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_19_RPBA,"BM1-19 JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_20_EPB,"BM1-20 E-STOP LIGHT","","MCP_BM1_RK2_S0:9:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_20_LTW,"BM1-20 Oversize$N","","MCP_BM1_RK2_S0:5:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_20_RPBA,"BM1-20 JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_23_EPB,"BM1-23 E-STOP LIGHT","","MCP_BM1_RK2_S0:9:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_23_RPBA,"BM1-23 JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_25_EPB,"BM1-25 E-STOP LIGHT","","MCP_BM1_RK2_S0:9:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_25_RPBA,"BM1-25 JAM RESET","","MCP_BM1_RK2_S0:4:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_34_EPB,"BM1-34 E-STOP LIGHT","","MCP_BM1_RK2_S0:9:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_34_RPBA,"BM1-34 JAM RESET","","MCP_BM1_RK2_S0:5:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_38_EPB,"BM1-38 E-STOP LIGHT","","MCP_BM1_RK2_S0:9:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_38_RPBA,"BM1-38 JAM RESET","","MCP_BM1_RK2_S0:5:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_MCP_EPB,"BM1-MCP E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_MCP_LTB,"BM1-MCP MOTOR FAULT LIGHT","","MCP_BM1_RK2_S0:6:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_MCP_LTG,"BM1-MCP READY","","MCP_BM1_RK2_S0:6:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_MCP_RPBA,"BM1-MCP JAM RESET","","MCP_BM1_RK2_S0:6:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_BM1_MCP_SPBG,"BM1-MCP START/RESET","","MCP_BM1_RK2_S0:6:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_C2T_13_EPB,"C2T-13 E-STOP LIGHT","","MCP_01_RK1_S0:9:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_C2T_13_RPBA,"C2T-13 JAM RESET LIGHT","","MCP_01_RK1_S0:9:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_C2T_13_SPBG,"C2T-13 START LIGHT","","MCP_01_RK1_S0:9:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_C2T_17_EPB,"C2T-17 E-STOP LIGHT","","MCP_01_RK1_S0:9:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_C2T_17_RPBA,"C2T-17 JAM RESET LIGHT","","MCP_01_RK1_S0:9:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_C2T_17_SPBG,"C2T-17 START LIGHT","","MCP_01_RK1_S0:9:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL12T_36_EPB,"CL12T-36 E-STOP LIGHT","","MCP_16_RK1_S0:7:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL12T_36_RPBA,"CL12T-36 JAM RESET LIGHT","","MCP_16_RK1_S0:7:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL12T_36_SPBG,"CL12T-36 START LIGHT","","MCP_16_RK1_S0:7:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_05_EPB,"CL1T-05 E-STOP LIGHT","","MCP_03_RK2_S0:5:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_05_RPBA,"CL1T-05 JAM RESET LIGHT","","MCP_03_RK2_S0:5:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_05_SPBG,"CL1T-05 START LIGHT","","MCP_03_RK2_S0:5:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_09_EPB,"CL1T-09 E-STOP LIGHT","","MCP_03_RK2_S0:5:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_09_RPBA,"CL1T-09 JAM RESET LIGHT","","MCP_03_RK2_S0:5:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_09_SPBG,"CL1T-09 START LIGHT","","MCP_03_RK2_S0:5:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_11_EPB,"CL1T-11 E-STOP LIGHT","","MCP_03_RK2_S0:5:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_11_RPBA,"CL1T-11 JAM RESET LIGHT","","MCP_03_RK2_S0:5:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_11_SPBG,"CL1T-11 START LIGHT","","MCP_03_RK2_S0:5:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_12_EPB,"CL1T-12 E-STOP LIGHT","","MCP_03_RK2_S0:5:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_12_RPBA,"CL1T-12 JAM RESET LIGHT","","MCP_03_RK2_S0:5:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_12_SPBG,"CL1T-12 START LIGHT","","MCP_03_RK2_S0:5:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_16_EPB,"CL1T-16 E-STOP LIGHT","","MCP_03_RK2_S0:6:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_16_RPBA,"CL1T-16 JAM RESET LIGHT","","MCP_03_RK2_S0:6:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_16_SPBG,"CL1T-16 START LIGHT","","MCP_03_RK2_S0:6:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_20_EPB,"CL1T-20 E-STOP LIGHT","","MCP_03_RK2_S0:6:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_20_RPBA,"CL1T-20 JAM RESET LIGHT","","MCP_03_RK2_S0:6:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_20_SPBG,"CL1T-20 START LIGHT","","MCP_03_RK2_S0:6:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_24_EPB,"CL1T-24 E-STOP LIGHT","","MCP_03_RK2_S0:6:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_24_RPBA,"CL1T-24 JAM RESET LIGHT","","MCP_03_RK2_S0:6:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL1T_24_SPBG,"CL1T-24 START LIGHT","","MCP_03_RK2_S0:6:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL2T_04_EPB,"CL2T-04 E-STOP LIGHT","","MCP_02_RK2_S0:4:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL2T_04_RPBA,"CL2T-04 JAM RESET LIGHT","","MCP_02_RK2_S0:4:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL2T_04_SPBG,"CL2T-04 START LIGHT","","MCP_02_RK2_S0:4:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL2T_09_EPB,"CL2T-09 E-STOP LIGHT","","MCP_02_RK2_S0:4:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL2T_09_RPBA,"CL2T-09 JAM RESET LIGHT","","MCP_02_RK2_S0:4:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL2T_09_SPBG,"CL2T-09 START LIGHT","","MCP_02_RK2_S0:4:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL3T_03_EPB,"CL3T-03 E-STOP LIGHT","","MCP_02_RK2_S0:6:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL3T_03_RPBA,"CL3T-03 JAM RESET LIGHT","","MCP_02_RK2_S0:6:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL3T_03_SPBG,"CL3T-03 START LIGHT","","MCP_02_RK2_S0:6:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL3T_04_EPB,"CL3T-04 E-STOP LIGHT","","MCP_02_RK2_S0:6:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL3T_04_RPBA,"CL3T-04 JAM RESET LIGHT","","MCP_02_RK2_S0:6:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_CL3T_04_SPBG,"CL3T-04 START LIGHT","","MCP_02_RK2_S0:6:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_HX1T_10_EPB,"HX1T-10 E-STOP LIGHT","","MCP_03_RK2_S0:6:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_HX1T_10_RPBA,"HX1T-10 JAM RESET LIGHT","","MCP_03_RK2_S0:6:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_HX1T_10_SPBG,"HX1T-10 START LIGHT","","MCP_03_RK2_S0:6:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_01_EPB,"MCP-01 E-STOP LIGHT","","MCP_01_RK1_S0:8:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_01_HM,"HOUR METER","","MCP_BM1_RK2_S0:6:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_01_LTA,"MCP-01 JAM LIGHT","","MCP_01_RK1_S0:8:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_01_LTB,"MCP-01 VFD FAULT LIGHT","","MCP_01_RK1_S0:8:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_01_LTG,"MCP-01 SYSTEM READY LIGHT","","MCP_01_RK1_S0:8:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_01_SPBG,"MCP-01 RESET/START LIGHT","","MCP_01_RK1_S0:8:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_02_EPB,"MCP-02 E-STOP LIGHT","","MCP_02_RK2_S0:3:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_02_LTA,"MCP-02 JAM LIGHT","","MCP_02_RK2_S0:3:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_02_LTB,"MCP-02 VFD FAULT LIGHT","","MCP_02_RK2_S0:3:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_02_LTG,"MCP-02 SYSTEM READY LIGHT","","MCP_02_RK2_S0:3:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_02_SPBG,"MCP-02 RESET/START LIGHT","","MCP_02_RK2_S0:3:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_03_EPB,"MCP-03 E-STOP LIGHT","","MCP_03_RK2_S0:4:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_03_LTA,"MCP-03 JAM LIGHT","","MCP_03_RK2_S0:4:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_03_LTB,"MCP-03 VFD FAULT LIGHT","","MCP_03_RK2_S0:4:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_03_LTG,"MCP-03 SYSTEM READY LIGHT","","MCP_03_RK2_S0:4:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_03_SPBG,"MCP-03 RESET/START LIGHT","","MCP_03_RK2_S0:4:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_16_EPB,"MCP-16 E-STOP LIGHT","","MCP_16_RK1_S0:6:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_16_LTA,"MCP-16 JAM LIGHT","","MCP_16_RK1_S0:6:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_16_LTB,"MCP-16 VFD FAULT LIGHT","","MCP_16_RK1_S0:6:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_16_LTG,"MCP-16 SYSTEM READY LIGHT","","MCP_16_RK1_S0:6:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_16_SPBG,"MCP-16 RESET/START LIGHT","","MCP_16_RK1_S0:6:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_BM1_EPB,"BM1-MCP E-STOP LIGHT","","MCP_BM1_RK2_S0:8:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_BM1_HM,"MCP-01 HOUR METER","","MCP_BM1_RK2_S0:6:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_BM1_LTB,"BM1-MCP MOTOR FAULT LIGHT","","MCP_BM1_RK2_S0:6:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_BM1_RPBA,"BM1-MCP JAM RESET","","MCP_BM1_RK2_S0:6:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_MCP_BM1_SPBG,"BM1-MCP START/RESET","","MCP_BM1_RK2_S0:6:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_04_EPB,"O2T-04 E-STOP LIGHT","","MCP_01_RK1_S0:8:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_04_RPBA,"O2T-04 JAM RESET LIGHT","","MCP_01_RK1_S0:8:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_04_SPBG,"O2T-04 START LIGHT","","MCP_01_RK1_S0:8:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_06_EPB,"O2T-06 E-STOP LIGHT","","MCP_01_RK1_S0:8:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_06_RPBA,"O2T-06 JAM RESET LIGHT","","MCP_01_RK1_S0:8:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_06_SPBG,"O2T-06 START LIGHT","","MCP_01_RK1_S0:8:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_10_EPB,"O2T-10 E-STOP LIGHT","","MCP_01_RK1_S0:8:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_10_RPBA,"O2T-10 JAM RESET LIGHT","","MCP_01_RK1_S0:8:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_10_SPBG,"O2T-10 START LIGHT","","MCP_01_RK1_S0:8:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_12_EPB,"O2T-12 E-STOP LIGHT","","MCP_01_RK1_S0:8:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_12_RPBA,"O2T-12 JAM RESET LIGHT","","MCP_01_RK1_S0:9:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_12_SPBG,"O2T-12 START LIGHT","","MCP_01_RK1_S0:8:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_14_EPB,"O2T-14 E-STOP LIGHT","","MCP_01_RK1_S0:9:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_14_RPBA,"O2T-14 JAM RESET LIGHT","","MCP_01_RK1_S0:9:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_14_SPBG,"O2T-14 START LIGHT","","MCP_01_RK1_S0:9:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_18_EPB,"O2T-18 E-STOP LIGHT","","MCP_01_RK1_S0:9:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_18_RPBA,"O2T-18 JAM RESET LIGHT","","MCP_01_RK1_S0:9:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O2T_18_SPBG,"O2T-18 START LIGHT","","MCP_01_RK1_S0:9:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O3T_17_EPB,"O3T-17 E-STOP LIGHT","","MCP_16_RK1_S0:6:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O3T_17_RPBA,"O3T-17 JAM RESET LIGHT","","MCP_16_RK1_S0:6:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O3T_17_SPBG,"O3T-17 START LIGHT","","MCP_16_RK1_S0:6:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O4T_06_EPB,"O4T-06 E-STOP LIGHT","","MCP_02_RK2_S0:5:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O4T_06_RPBA,"O4T-06 JAM RESET LIGHT","","MCP_02_RK2_S0:5:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O4T_06_SPBG,"O4T-06 START LIGHT","","MCP_02_RK2_S0:5:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O4T_10_EPB,"O4T-10 E-STOP LIGHT","","MCP_02_RK2_S0:5:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O4T_10_RPBA,"O4T-10 JAM RESET LIGHT","","MCP_02_RK2_S0:5:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O4T_10_SPBG,"O4T-10 START LIGHT","","MCP_02_RK2_S0:5:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O4T_16_EPB,"O4T-16 E-STOP LIGHT","","MCP_16_RK1_S0:6:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O4T_16_RPBA,"O4T-16 JAM RESET LIGHT","","MCP_16_RK1_S0:7:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_O4T_16_SPBG,"O4T-16 START LIGHT","","MCP_16_RK1_S0:6:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_T5T_09_EPB,"T5T-09 E-STOP LIGHT","","MCP_02_RK2_S0:4:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_T5T_09_RPBA,"T5T-09 JAM RESET LIGHT","","MCP_02_RK2_S0:4:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_T5T_09_SPBG,"T5T-09 START LIGHT","","MCP_02_RK2_S0:4:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_XO1_01_EPB,"XO1-01 E-STOP LIGHT","","MCP_02_RK2_S0:5:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_XO1_01_RPBA,"XO1-01 JAM RESET LIGHT","","MCP_02_RK2_S0:5:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_XO1_01_SPBG,"XO1-01 START LIGHT","","MCP_02_RK2_S0:5:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_XO2_02_EPB,"XO2-02 E-STOP LIGHT","","MCP_03_RK2_S0:6:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_XO2_02_RPBA,"XO2-02 JAM RESET LIGHT","","MCP_03_RK2_S0:7:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_XO2_02_SPBG,"XO2-02 START LIGHT","","MCP_03_RK2_S0:7:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_XO2_05_EPB,"XO2-05 E-STOP LIGHT","","MCP_03_RK2_S0:7:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_XO2_05_RPBA,"XO2-05 JAM RESET LIGHT","","MCP_03_RK2_S0:7:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_CS_XO2_05_SPBG,"XO2-05 START LIGHT","","MCP_03_RK2_S0:7:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_01,"BM1-01 MOTOR STARTER","","MCP_BM1_RK1_S16:14:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_02,"BM1-02 MOTOR STARTER","","MCP_BM1_RK1_S16:14:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_03,"BM1-03 MOTOR STARTER","","MCP_BM1_RK1_S16:14:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_04,"BM1-04 MOTOR STARTER","","MCP_BM1_RK1_S16:14:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_05,"BM1-05 MOTOR STARTER","","MCP_BM1_RK1_S16:14:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_06,"BM1-06 MOTOR STARTER","","MCP_BM1_RK1_S16:14:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_07,"BM1-07 MOTOR STARTER","","MCP_BM1_RK1_S16:14:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_08,"BM1-08 MOTOR STARTER","","MCP_BM1_RK1_S16:14:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_09,"BM1-09 MOTOR STARTER","","MCP_BM1_RK1_S16:14:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_10,"BM1-10 MOTOR STARTER","","MCP_BM1_RK1_S16:14:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_11,"BM1-11 MOTOR STARTER","","MCP_BM1_RK1_S16:14:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_12,"BM1-12 MOTOR STARTER","","MCP_BM1_RK1_S16:14:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_13_FWD,"BM1-13 MOTOR FORWARD","","MCP_BM1_RK1_S16:14:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_13_REV,"BM1-13 MOTOR REVERSE","","MCP_BM1_RK1_S16:14:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_14,"BM1-14 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_15,"BM1-15 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_16,"BM1-16 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_17,"BM1-17 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_18,"BM1-18 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_19,"BM1-19 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_20,"BM1-20 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_21,"BM1-21 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_22,"BM1-22 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_23,"BM1-23 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_24,"BM1-24 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_25,"BM1-25 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_26,"BM1-26 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_27,"BM1-27 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_28,"BM1-28 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_29,"BM1-29 MOTOR STARTER","","MCP_BM1_RK2_S0:1:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_30,"BM1-30 MOTOR STARTER","","MCP_BM1_RK2_S0:2:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_31,"BM1-31 MOTOR STARTER","","MCP_BM1_RK2_S0:2:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_32,"BM1-32 MOTOR STARTER","","MCP_BM1_RK2_S0:2:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_33,"BM1-33 MOTOR STARTER","","MCP_BM1_RK2_S0:2:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_34,"BM1-34 MOTOR STARTER","","MCP_BM1_RK2_S0:2:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_35,"BM1-35 MOTOR STARTER","","MCP_BM1_RK2_S0:2:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_36,"BM1-36 MOTOR STARTER","","MCP_BM1_RK2_S0:2:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_37,"BM1-37 MOTOR STARTER","","MCP_BM1_RK2_S0:2:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_C_BM1_38,"BM1-38 MOTOR STARTER","","MCP_BM1_RK2_S0:2:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_C2T_12_RUN,"C2T-12 CONVEYOR RUNNING SIGNAL","","MCP_01_RK1_S0:11:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_C4_08_MRG,"C4-08 MERGE HOLD SIGNAL","","MCP_03_RK2_S0:10:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_C4_09_RES,"C4-09 RESET SIGNAL","","MCP_03_RK2_S0:10:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_C4_09_START,"C4-09 START SIGNAL","","MCP_03_RK2_S0:10:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_CL12T_35_RUN,"CL12T-35 CONVEYOR RUNNING SIGNAL","","MCP_16_RK1_S0:8:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_CL1T_26_JAM,"CL1T-26 JAM SIGNAL","","MCP_03_RK2_S0:10:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_CL2T_09_JAM,"CL2T-09 JAM SIGNAL","","MCP_02_RK2_S0:9:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_CL3T_8_JAM,"CL3T-8 JAM SIGNAL","","MCP_02_RK2_S0:9:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_HX1T_06_RUN,"HX1T-06 CONVEYOR RUNNING SIGNAL","","MCP_03_RK2_S0:10:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_HX1_11_RES,"HX1-11 RESET SIGNAL","","MCP_03_RK2_S0:10:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_HX1_11_START,"HX1-11 START SIGNAL","","MCP_03_RK2_S0:10:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O2T_04_RUN,"O2T-04 CONVEYOR RUNNING SIGNAL","","MCP_01_RK1_S0:11:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O3T_17_RUN,"O3T-17 CONVEYOR RUNNING SIGNAL","","MCP_16_RK1_S0:8:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O3T_20_JAM,"O3T-20 JAM SIGNAL","","MCP_16_RK1_S0:8:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O3_54_START,"O3-54 START SIGNAL","","MCP_16_RK1_S0:8:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O4T_05_RUN,"O4T-05 CONVEYOR RUNNING SIGNAL","","MCP_02_RK2_S0:9:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O4T_16_RUN,"O4T-16 CONVEYOR RUNNING SIGNAL","","MCP_16_RK1_S0:8:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O4T_22_JAM,"O4T-22 JAM SIGNAL","","MCP_16_RK1_S0:8:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O4_03_MRG,"O4-03 MERGE HOLD SIGNAL","","MCP_02_RK2_S0:9:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O4_04_RES,"O4-04 RESET SIGNAL","","MCP_02_RK2_S0:9:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O4_04_START,"O4-04 START SIGNAL","","MCP_02_RK2_S0:9:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O4_06_RES,"O4-06 RESET SIGNAL","","MCP_02_RK2_S0:9:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O4_06_START,"O4-06 START SIGNAL","","MCP_02_RK2_S0:9:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_O4_54_START,"O4-54 START SIGNAL","","MCP_16_RK1_S0:8:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_T5T_08_RUN,"T5T-08 CONVEYOR RUNNING SIGNAL","","MCP_02_RK2_S0:9:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_T5T_09_JAM,"T5T-09 JAM SIGNAL","","MCP_02_RK2_S0:9:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_T5T_10_RES,"T5T-10 RESET SIGNAL","","MCP_02_RK2_S0:9:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_T5T_10_START,"T5T-10 START SIGNAL","","MCP_02_RK2_S0:9:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_INT_XO2_05_JAM,"XO2-05 JAM SIGNAL","","MCP_03_RK2_S0:10:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_SD_XO1_EN,"XO1 MOTOR ENABLE","","MCP_02_RK2_S0:7:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_SD_XO1_EXT,"XO1 PADDLE POSITION EXTEND","","MCP_02_RK2_S0:7:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_SD_XO1_RES,"XO1 RESET","","MCP_02_RK2_S0:7:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_SD_XO1_RET,"XO1 PADDLE POSITION RETRACT","","MCP_02_RK2_S0:7:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_SD_XO1_RUN,"XO1 PADDLE BELT RUN","","MCP_02_RK2_S0:7:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_SD_XO2_EN,"XO2 MOTOR ENABLE","","MCP_03_RK2_S0:9:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_SD_XO2_EXT,"XO2 PADDLE POSITION EXTEND","","MCP_03_RK2_S0:9:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_SD_XO2_RES,"XO2 RESET","","MCP_03_RK2_S0:9:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_SD_XO2_RET,"XO2 PADDLE POSITION RETRACT","","MCP_03_RK2_S0:9:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_SD_XO2_RUN,"XO2 PADDLE BELT RUN","","MCP_03_RK2_S0:9:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_BM1_27_FWD,"BM1-27 VFD FORWARD","","MCP_BM1_RK2_S0:1:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_BM1_27_REV,"BM1-27 VFD REVERSE","","MCP_BM1_RK2_S0:2:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_BM1_28_FWD,"BM1-28 VFD FORWARD","","MCP_BM1_RK2_S0:1:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_BM1_28_REV,"BM1-28 VFD REVERSE","","MCP_BM1_RK2_S0:2:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_BM1_29_FWD,"BM1-29 VFD FORWARD","","MCP_BM1_RK2_S0:1:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_BM1_29_REV,"BM1-29 VFD REVERSE","","MCP_BM1_RK2_S0:2:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_BM1_30_FWD,"BM1-30 VFD FORWARD","","MCP_BM1_RK2_S0:2:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_BM1_30_REV,"BM1-30 VFD REVERSE","","MCP_BM1_RK2_S0:2:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_C2T_12_FWD,"C2T-12 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_C2T_13_FWD,"C2T-13 VFD FORWARD","","MCP_01_RK1_S0:3:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_C2T_14_FWD,"C2T-14 VFD FORWARD","","MCP_01_RK1_S0:3:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_C2T_15_FWD,"C2T-15 VFD FORWARD","","MCP_01_RK1_S0:3:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_C2T_16_FWD,"C2T-16 VFD FORWARD","","MCP_01_RK1_S0:3:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_C2T_17_FWD,"C2T-17 VFD FORWARD","","MCP_01_RK1_S0:3:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_C2T_17_REV,"C2T-17 VFD REVERSE","","MCP_01_RK1_S0:3:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL12T_35_FWD,"CL12T-35 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL12T_36_FWD,"CL12T-36 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL12T_36_REV,"CL12T-36 VFD REVERSE","","MCP_16_RK1_S0:2:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_01_FWD,"CL1T-01 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_02_FWD,"CL1T-02 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_03_FWD,"CL1T-03 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_04_FWD,"CL1T-04 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_05_FWD,"CL1T-05 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_06_FWD,"CL1T-06 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_07_FWD,"CL1T-07 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_08_FWD,"CL1T-08 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_09_FWD,"CL1T-09 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_10_FWD,"CL1T-10 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_11_FWD,"CL1T-11 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_12_FWD,"CL1T-12 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_13_FWD,"CL1T-13 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_14_FWD,"CL1T-14 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_15_FWD,"CL1T-15 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_16_FWD,"CL1T-16 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_17_FWD,"CL1T-17 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_18_FWD,"CL1T-18 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_19_FWD,"CL1T-19 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_20_FWD,"CL1T-20 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_21_FWD,"CL1T-21 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_23_FWD,"CL1T-23 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_24_FWD,"CL1T-24 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL1T_26_FWD,"CL1T-26 VFD FORWARD","","MCP_03_RK2_S0:2:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL2T_01_FWD,"CL2T-01 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL2T_02_FWD,"CL2T-02 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL2T_03_FWD,"CL2T-03 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL2T_04_FWD,"CL2T-04 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL2T_05_FWD,"CL2T-05 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL2T_06_FWD,"CL2T-06 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL2T_07_FWD,"CL2T-07 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL2T_08_FWD,"CL2T-08 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL2T_09_FWD,"CL2T-09 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL3T_01_FWD,"CL3T-01 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL3T_02_FWD,"CL3T-02 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL3T_03_FWD,"CL3T-03 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL3T_04_FWD,"CL3T-04 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL3T_05_FWD,"CL3T-05 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL3T_06_FWD,"CL3T-06 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL3T_07_FWD,"CL3T-07 VFD FORWARD","","MCP_02_RK2_S0:1:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_CL3T_08_FWD,"CL3T-08 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_HX1T_06_FWD,"HX1T-06 VFD FORWARD","","MCP_03_RK2_S0:3:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_HX1T_07_FWD,"HX1T-07 VFD FORWARD","","MCP_03_RK2_S0:3:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_HX1T_08_FWD,"HX1T-08 VFD FORWARD","","MCP_03_RK2_S0:3:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_HX1T_09_FWD,"HX1T-09 VFD FORWARD","","MCP_03_RK2_S0:3:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_HX1T_10A_FWD,"HX1T-10A VFD FORWARD","","MCP_03_RK2_S0:3:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_HX1T_10_FWD,"HX1T-10 VFD FORWARD","","MCP_03_RK2_S0:3:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_HX1T_10_REV,"HX1T-10 VFD REVERSE","","MCP_03_RK2_S0:3:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_04_FWD,"O2T-04 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_05_FWD,"O2T-05 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_06_FWD,"O2T-06 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_07_FWD,"O2T-07 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_08_FWD,"O2T-08 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_09_FWD,"O2T-09 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_10_FWD,"O2T-10 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_11_FWD,"O2T-11 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_12_FWD,"O2T-12 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_13_FWD,"O2T-13 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_14_FWD,"O2T-14 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_15_FWD,"O2T-15 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_16_FWD,"O2T-16 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_17_FWD,"O2T-17 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_18_FWD,"O2T-18 VFD FORWARD","","MCP_01_RK1_S0:2:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O2T_18_REV,"O2T-18 VFD REVERSE","","MCP_01_RK1_S0:3:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O3T_17_FWD,"O3T-17 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O3T_18_FWD,"O3T-18 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O3T_19_FWD,"O3T-19 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O3T_20_FWD,"O3T-20 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_05_FWD,"O4T-05 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_06_FWD,"O4T-06 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_07_FWD,"O4T-07 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_08_FWD,"O4T-08 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_09_FWD,"O4T-09 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_10_FWD,"O4T-10 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_11_FWD,"O4T-11 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_12_FWD,"O4T-12 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_13_FWD,"O4T-13 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_16_FWD,"O4T-16 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_17_FWD,"O4T-17 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_18_FWD,"O4T-18 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_19_FWD,"O4T-19 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_20_FWD,"O4T-20 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_21_FWD,"O4T-21 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_O4T_22_FWD,"O4T-22 VFD FORWARD","","MCP_16_RK1_S0:2:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_T5T_08_FWD,"T5T-08 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_T5T_09_FWD,"T5T-09 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_T5T_09_REV,"T5T-09 VFD REVERSE","","MCP_02_RK2_S0:2:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_XO1_01_FWD,"XO1-01 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_XO1_02_FWD,"XO1-02 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_XO1_03_FWD,"XO1-03 VFD FORWARD","","MCP_02_RK2_S0:2:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_XO2_01_FWD,"XO2-01 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_XO2_02_FWD,"XO2-02 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_XO2_03_FWD,"XO2-03 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_XO2_04_FWD,"XO2-04 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_XO2_05_FWD,"XO2-05 VFD FORWARD","","MCP_03_RK2_S0:1:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_VFD_XO2_05_REV,"XO2-05 VFD REVERSE","","MCP_03_RK2_S0:3:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_01_ALM,"BM1-01 ALARM","","MCP_BM1_RK2_S0:7:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_01_LTR,"BM1-01 RED BEACON","","MCP_BM1_RK2_S0:7:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_03_ALM,"BM1-03 ALARM","","MCP_BM1_RK2_S0:7:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_03_LTR,"BM1-03 RED BEACON","","MCP_BM1_RK2_S0:7:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_06_ALM,"BM1-06 ALARM","","MCP_BM1_RK2_S0:7:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_06_LTR,"BM1-06 RED BEACON","","MCP_BM1_RK2_S0:7:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_15_ALM,"BM1-15 ALARM","","MCP_BM1_RK2_S0:7:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_15_LTR,"BM1-15 RED BEACON","","MCP_BM1_RK2_S0:7:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_16_ALM,"BM1-16 ALARM","","MCP_BM1_RK2_S0:7:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_16_LTR,"BM1-16 RED BEACON","","MCP_BM1_RK2_S0:7:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_18_ALM,"BM1-18 ALARM","","MCP_BM1_RK2_S0:7:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_18_LTR,"BM1-18 RED BEACON","","MCP_BM1_RK2_S0:7:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_23_ALM,"BM1-23 STARTUP/FAULT ALARM","","MCP_03_RK2_S0:8:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_23_LTA,"BM1-23 STARTUP/FAULT BEACON","","MCP_03_RK2_S0:8:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_23_LTR,"BM1-23 E-STOP BEACON","","MCP_03_RK2_S0:8:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_28_ALM,"BM1-28 ALARM","","MCP_BM1_RK2_S0:7:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_28_LTR,"BM1-28 RED BEACON","","MCP_BM1_RK2_S0:7:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_30_ALM,"BM1-30 ALARM","","MCP_BM1_RK2_S0:7:O.Data.15","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_30_LTR,"BM1-30 RED BEACON","","MCP_BM1_RK2_S0:7:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_MCP_ALM,"BM1-MCP ALARM","","MCP_BM1_RK2_S0:6:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_MCP_LTA,"BM1-MCP AMBER BEACON","","MCP_BM1_RK2_S0:6:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_BM1_MCP_LTR,"BM1-MCP RED BEACON","","MCP_BM1_RK2_S0:6:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_C2T_13_ALM,"C2T-13 STARTUP/FAULT ALARM","","MCP_01_RK1_S0:10:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_C2T_13_LTA,"C2T-13 STARTUP/FAULT BEACON","","MCP_01_RK1_S0:10:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_C2T_13_LTR,"C2T-13 E-STOP BEACON","","MCP_01_RK1_S0:10:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL1T_01_ALM,"CL1T-01 STARTUP/FAULT ALARM","","MCP_03_RK2_S0:8:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL1T_01_LTA,"CL1T-01 STARTUP/FAULT BEACON","","MCP_03_RK2_S0:8:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL1T_01_LTR,"CL1T-01 E-STOP BEACON","","MCP_03_RK2_S0:8:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL1T_09_ALM,"CL1T-09 STARTUP/FAULT ALARM","","MCP_03_RK2_S0:8:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL1T_09_LTA,"CL1T-09 STARTUP/FAULT BEACON","","MCP_03_RK2_S0:8:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL1T_09_LTR,"CL1T-09 E-STOP BEACON","","MCP_03_RK2_S0:8:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL1T_20_ALM,"CL1T-20 STARTUP/FAULT ALARM","","MCP_03_RK2_S0:8:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL1T_20_LTA,"CL1T-20 STARTUP/FAULT BEACON","","MCP_03_RK2_S0:8:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL1T_20_LTR,"CL1T-20 E-STOP BEACON","","MCP_03_RK2_S0:8:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL2T_02_ALM,"CL2T-02 STARTUP/FAULT ALARM","","MCP_02_RK2_S0:8:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL2T_02_LTA,"CL2T-02 STARTUP/FAULT BEACON","","MCP_02_RK2_S0:8:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL2T_02_LTR,"CL2T-02 E-STOP BEACON","","MCP_02_RK2_S0:8:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL2T_05_ALM,"CL2T-05 STARTUP/FAULT ALARM","","MCP_02_RK2_S0:8:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL2T_05_LTA,"CL2T-05 STARTUP/FAULT BEACON","","MCP_02_RK2_S0:8:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL2T_05_LTR,"CL2T-05 E-STOP BEACON","","MCP_02_RK2_S0:8:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL3T_03_ALM,"CL3T-03 STARTUP/FAULT ALARM","","MCP_02_RK2_S0:8:O.Data.9","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL3T_03_LTA,"CL3T-03 STARTUP/FAULT BEACON","","MCP_02_RK2_S0:8:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_CL3T_03_LTR,"CL3T-03 E-STOP BEACON","","MCP_02_RK2_S0:8:O.Data.10","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_01_ALM,"MCP-01 STARTUP/FAULT ALARM","","MCP_01_RK1_S0:10:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_01_LTA,"MCP-01 STARTUP/FAULT BEACON","","MCP_01_RK1_S0:10:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_01_LTR,"MCP-01 E-STOP BEACON","","MCP_01_RK1_S0:10:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_02_ALM,"MCP-02 STARTUP/FAULT ALARM","","MCP_02_RK2_S0:8:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_02_LTA,"MCP-02 STARTUP/FAULT BEACON","","MCP_02_RK2_S0:8:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_02_LTR,"MCP-02 E-STOP BEACON","","MCP_02_RK2_S0:8:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_03_ALM,"MCP-03 STARTUP/FAULT ALARM","","MCP_03_RK2_S0:8:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_03_LTA,"MCP-03 STARTUP/FAULT BEACON","","MCP_03_RK2_S0:8:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_03_LTR,"MCP-03 E-STOP BEACON","","MCP_03_RK2_S0:8:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_16_ALM,"MCP-16 STARTUP/FAULT ALARM","","MCP_16_RK1_S0:8:O.Data.0","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_16_LTA,"MCP-16 STARTUP/FAULT BEACON","","MCP_16_RK1_S0:8:O.Data.2","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_16_LTR,"MCP-16 E-STOP BEACON","","MCP_16_RK1_S0:8:O.Data.1","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_BM1_ALM,"BM1-MCP ALARM","","MCP_BM1_RK2_S0:6:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_BM1_LTA,"BM1-MCP AMBER BEACON","","MCP_BM1_RK2_S0:6:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_MCP_BM1_LTR,"BM1-MCP RED BEACON","","MCP_BM1_RK2_S0:6:O.Data.11","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_O2T_06_ALM,"O2T-06 STARTUP/FAULT ALARM","","MCP_01_RK1_S0:10:O.Data.3","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_O2T_06_LTA,"O2T-06 STARTUP/FAULT BEACON","","MCP_01_RK1_S0:10:O.Data.5","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_O2T_06_LTR,"O2T-06 E-STOP BEACON","","MCP_01_RK1_S0:10:O.Data.4","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_O2T_18_ALM,"O2T-18 STARTUP/FAULT ALARM","","MCP_01_RK1_S0:10:O.Data.6","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_O2T_18_LTA,"O2T-18 STARTUP/FAULT BEACON","","MCP_01_RK1_S0:10:O.Data.8","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_O2T_18_LTR,"O2T-18 E-STOP BEACON","","MCP_01_RK1_S0:10:O.Data.7","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_O4T_10_ALM,"O4T-10 STARTUP/FAULT ALARM","","MCP_02_RK2_S0:8:O.Data.12","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_O4T_10_LTA,"O4T-10 STARTUP/FAULT BEACON","","MCP_02_RK2_S0:8:O.Data.14","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,O_WA_O4T_10_LTR,"O4T-10 E-STOP BEACON","","MCP_02_RK2_S0:8:O.Data.13","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,PE,"","PE[160]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,PE2_BM1_23_TD,"","Non_Tracked_Div","","(Constant := false, ExternalAccess := Read/Write)"
TAG,,PICS_IN,"","BOOL[960]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_BAL_BM1_27,"","","PICS_IN[202]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_BAL_BM1_28,"","","PICS_IN[203]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_BAL_BM1_29,"","","PICS_IN[204]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_BAL_BM1_30,"","","PICS_IN[205]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_14_EPB,"","","PICS_IN[374]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_14_RPBA,"","","PICS_IN[375]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_16_EPB,"","","PICS_IN[376]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_16_RPBA,"","","PICS_IN[377]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_17_EPB,"","","PICS_IN[378]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_17_RPBA,"","","PICS_IN[67]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_27_EPB,"","","PICS_IN[379]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_27_RPBA,"","","PICS_IN[380]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_28_EPB,"","","PICS_IN[381]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_28_RPBA,"","","PICS_IN[382]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_29_EPB,"","","PICS_IN[384]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_29_RPBA,"","","PICS_IN[385]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_30_EPB,"","","PICS_IN[386]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_BM1_30_RPBA,"","","PICS_IN[387]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL1T_01_EPB,"","","PICS_IN[388]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL1T_01_SPBG,"","","PICS_IN[389]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL1T_02_EPB,"","","PICS_IN[390]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL1T_02_RPBA,"","","PICS_IN[391]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL1T_02_SPBG,"","","PICS_IN[392]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL2T_01_EPB,"","","PICS_IN[393]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL2T_01_SPBG,"","","PICS_IN[394]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL2T_02_EPB,"","","PICS_IN[395]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL2T_02_RPBA,"","","PICS_IN[396]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL2T_02_SPBG,"","","PICS_IN[397]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL2T_05_EPB,"","","PICS_IN[398]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL2T_05_RPBA,"","","PICS_IN[399]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL2T_05_SPBG,"","","PICS_IN[400]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL3T_01_EPB,"","","PICS_IN[401]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL3T_01_SPBG,"","","PICS_IN[402]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL3T_02_EPB,"","","PICS_IN[403]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL3T_02_RPBA,"","","PICS_IN[404]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_CL3T_02_SPBG,"","","PICS_IN[405]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_O3T_19_EPB,"","","PICS_OUT[642]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_O3T_19_RPBA,"","","PICS_OUT[644]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_O3T_19_SPBG,"","","PICS_OUT[643]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_O4T_21_EPB,"","","PICS_OUT[651]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_O4T_21_RPBA,"","","PICS_OUT[653]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS1_O4T_21_SPBG,"","","PICS_OUT[652]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_14_EPB,"","","PICS_IN[406]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_14_RPBA,"","","PICS_IN[407]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_16_EPB,"","","PICS_IN[408]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_16_RPBA,"","","PICS_IN[409]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_17_EPB,"","","PICS_IN[410]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_17_RPBA,"","","PICS_IN[411]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_23_EPB,"","","PICS_IN[421]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_23_RPBA,"","","PICS_IN[422]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_23_SPBG,"","","PICS_IN[423]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_27_EPB,"","","PICS_IN[412]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_27_RPBA,"","","PICS_IN[413]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_28_EPB,"","","PICS_IN[414]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_28_RPBA,"","","PICS_IN[74]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_29_EPB,"","","PICS_IN[415]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_29_FWD,"","","PICS_IN[416]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_29_RPBA,"","","PICS_IN[417]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_29_SPBG,"","","PICS_IN[418]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_30_EPB,"","","PICS_IN[419]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_BM1_30_RPBA,"","","PICS_IN[420]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL1T_01_EPB,"","","PICS_IN[424]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL1T_01_SPBG,"","","PICS_IN[425]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL1T_02_EPB,"","","PICS_IN[426]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL1T_02_SPBG,"","","PICS_IN[427]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL2T_01_EPB,"","","PICS_IN[428]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL2T_01_SPBG,"","","PICS_IN[429]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL2T_02_EPB,"","","PICS_IN[430]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL2T_02_SPBG,"","","PICS_IN[431]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL2T_05_EPB,"","","PICS_IN[432]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL2T_05_RPBA,"","","PICS_IN[433]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL2T_05_SPBG,"","","PICS_IN[434]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL3T_01_EPB,"","","PICS_IN[435]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL3T_01_SPBG,"","","PICS_IN[436]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL3T_02_EPB,"","","PICS_IN[437]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_CL3T_02_SPBG,"","","PICS_IN[438]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_O3T_19_EPB,"","","PICS_OUT[645]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_O3T_19_RPBA,"","","PICS_OUT[647]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_O3T_19_SPBG,"","","PICS_OUT[646]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_O4T_21_EPB,"","","PICS_OUT[654]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_O4T_21_RPBA,"","","PICS_OUT[656]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS2_O4T_21_SPBG,"","","PICS_OUT[655]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_BM1_27_EPB,"","","PICS_IN[439]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_BM1_28_EPB,"","","PICS_IN[440]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_BM1_29_EPB,"","","PICS_IN[441]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_BM1_30_EPB,"","","PICS_IN[442]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_BM1_30_FWD,"","","PICS_IN[443]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_BM1_30_RPBA,"","","PICS_IN[444]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_BM1_30_SPBG,"","","PICS_IN[445]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_CL1T_01_EPB,"","","PICS_IN[446]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_CL1T_01_SPBG,"","","PICS_IN[447]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_CL1T_02_EPB,"","","PICS_IN[448]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_CL1T_02_SPBG,"","","PICS_IN[449]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_CL2T_02_EPB,"","","PICS_IN[450]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_CL2T_02_SPBG,"","","PICS_IN[451]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_CL3T_02_EPB,"","","PICS_IN[452]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS3_CL3T_02_SPBG,"","","PICS_IN[453]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS4_BM1_27_EPB,"","","PICS_IN[454]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS4_BM1_28_EPB,"","","PICS_IN[455]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS4_BM1_28_FWD,"","","PICS_IN[456]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS4_BM1_28_SPBG,"","","PICS_IN[383]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS4_BM1_29_EPB,"","","PICS_IN[457]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS4_BM1_30_EPB,"","","PICS_IN[458]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS4_CL3T_02_EPB,"","","PICS_IN[459]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS4_CL3T_02_RPBA,"","","PICS_IN[460]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS4_CL3T_02_SPBG,"","","PICS_IN[461]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS5_BM1_27_EPB,"","","PICS_IN[462]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS5_BM1_27_FWD,"","","PICS_IN[463]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS5_BM1_27_RPBA,"","","PICS_IN[464]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS5_BM1_27_SPBG,"","","PICS_IN[465]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS5_BM1_28_EPB,"","","PICS_IN[466]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS5_BM1_28_RPBA,"","","PICS_IN[467]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS5_BM1_28_SPBG,"","","PICS_IN[468]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_01_EPB,"","","PICS_IN[240]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_01_RPBA,"","","PICS_IN[241]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_02_EPB,"","","PICS_IN[242]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_02_RPBA,"","","PICS_IN[243]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_03_EPB,"","","PICS_IN[244]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_03_RPBA,"","","PICS_IN[245]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_06_EPB,"","","PICS_IN[246]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_06_RPBA,"","","PICS_IN[247]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_07_EPB,"","","PICS_IN[248]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_07_SPBG,"","","PICS_IN[249]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_13_EPB,"","","PICS_IN[250]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_13_JRB,"","","PICS_IN[251]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_13_RPBA,"","","PICS_IN[252]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_15_EPB,"","","PICS_IN[253]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_15_RPBA,"","","PICS_IN[254]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_17_SPBG,"","","PICS_IN[255]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_18_EPB,"","","PICS_IN[256]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_18_RPBA,"","","PICS_IN[257]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_19_EPB,"","","PICS_IN[258]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_19_RPBA,"","","PICS_IN[259]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_20_EPB,"","","PICS_IN[260]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_20_RPBA,"","","PICS_IN[261]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_23_EPB,"","","PICS_IN[262]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_23_RPBA,"","","PICS_IN[263]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_25_EPB,"","","PICS_IN[264]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_25_RPBA,"","","PICS_IN[265]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_34_EPB,"","","PICS_IN[266]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_34_RPBA,"","","PICS_IN[267]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_38_EPB,"","","PICS_IN[268]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_38_RPBA,"","","PICS_IN[269]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_MCP_APB,"","","PICS_IN[83]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_MCP_EPB,"","","PICS_IN[29]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_MCP_RPBA,"","","PICS_IN[270]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_BM1_MCP_TPB,"","","PICS_IN[82]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_C2T_13_EPB,"","","PICS_IN[271]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_C2T_13_RPBA,"","","PICS_IN[272]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_C2T_13_SPBG,"","","PICS_IN[273]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_C2T_17_AUTO,"","","PICS_IN[274]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_C2T_17_EPB,"","","PICS_IN[275]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_C2T_17_JRB,"","","PICS_IN[276]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_C2T_17_RPBA,"","","PICS_IN[277]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_C2T_17_SPBG,"","","PICS_IN[278]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL12T_36_AUTO,"","","PICS_OUT[661]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL12T_36_EPB,"","","PICS_OUT[657]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL12T_36_JRB,"","","PICS_OUT[660]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL12T_36_RPBA,"","","PICS_OUT[659]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL12T_36_SPBG,"","","PICS_OUT[658]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_05_EPB,"","","PICS_IN[279]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_05_RPBA,"","","PICS_IN[280]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_05_SPBG,"","","PICS_IN[281]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_09_EPB,"","","PICS_IN[282]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_09_RPBA,"","","PICS_IN[283]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_09_SPBG,"","","PICS_IN[284]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_11_EPB,"","","PICS_IN[285]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_11_RPBA,"","","PICS_IN[286]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_11_SPBG,"","","PICS_IN[287]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_12_EPB,"","","PICS_IN[288]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_12_RPBA,"","","PICS_IN[289]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_12_SPBG,"","","PICS_IN[290]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_16_EPB,"","","PICS_IN[291]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_16_RPBA,"","","PICS_IN[292]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_16_SPBG,"","","PICS_IN[293]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_20_EPB,"","","PICS_IN[294]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_20_RPBA,"","","PICS_IN[295]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_20_SPBG,"","","PICS_IN[296]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_24_EPB,"","","PICS_IN[297]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_24_RPBA,"","","PICS_IN[298]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL1T_24_SPBG,"","","PICS_IN[299]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL2T_04_EPB,"","","PICS_IN[300]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL2T_04_RPBA,"","","PICS_IN[301]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL2T_04_SPBG,"","","PICS_IN[302]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL2T_09_EPB,"","","PICS_IN[303]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL2T_09_RPBA,"","","PICS_IN[304]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL2T_09_SPBG,"","","PICS_IN[305]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL3T_03_EPB,"","","PICS_IN[306]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL3T_03_RPBA,"","","PICS_IN[307]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL3T_03_SPBG,"","","PICS_IN[308]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL3T_04_EPB,"","","PICS_IN[309]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL3T_04_RPBA,"","","PICS_IN[310]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_CL3T_04_SPBG,"","","PICS_IN[311]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_HX1T_10_AUTO,"","","PICS_IN[312]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_HX1T_10_EPB,"","","PICS_IN[313]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_HX1T_10_JRB,"","","PICS_IN[314]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_HX1T_10_RPBA,"","","PICS_IN[315]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_HX1T_10_SPBG,"","","PICS_IN[316]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_01_APB,"","","PICS_IN[317]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_01_EPB,"","","PICS_IN[318]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_01_SPBG,"","","PICS_IN[319]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_01_TPB,"","","PICS_IN[320]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_02_APB,"","","PICS_IN[321]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_02_EPB,"","","PICS_IN[322]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_02_SPBG,"","","PICS_IN[323]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_02_TPB,"","","PICS_IN[324]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_03_APB,"","","PICS_IN[325]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_03_EPB,"","","PICS_IN[326]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_03_SPBG,"","","PICS_IN[327]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_03_TPB,"","","PICS_IN[328]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_16_APB,"","","PICS_OUT[637]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_16_EPB,"","","PICS_OUT[634]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_16_SPBG,"","","PICS_OUT[635]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_16_TPB,"","","PICS_OUT[636]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_BM1_APB,"","","PICS_IN[329]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_BM1_EPB,"","","PICS_IN[330]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_MCP_BM1_TPB,"","","PICS_IN[331]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_04_EPB,"","","PICS_IN[332]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_04_RPBA,"","","PICS_IN[333]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_04_SPBG,"","","PICS_IN[334]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_06_EPB,"","","PICS_IN[335]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_06_RPBA,"","","PICS_IN[336]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_06_SPBG,"","","PICS_IN[337]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_10_EPB,"","","PICS_IN[338]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_10_RPBA,"","","PICS_IN[339]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_10_SPBG,"","","PICS_IN[340]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_12_EPB,"","","PICS_IN[341]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_12_RPBA,"","","PICS_IN[342]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_12_SPBG,"","","PICS_IN[343]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_14_EPB,"","","PICS_IN[344]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_14_RPBA,"","","PICS_IN[345]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_14_SPBG,"","","PICS_IN[346]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_18_AUTO,"","","PICS_IN[347]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_18_EPB,"","","PICS_IN[348]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_18_JRB,"","","PICS_IN[349]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_18_RPBA,"","","PICS_IN[350]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O2T_18_SPBG,"","","PICS_IN[351]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O3T_17_EPB,"","","PICS_OUT[639]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O3T_17_RPBA,"","","PICS_OUT[641]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O3T_17_SPBG,"","","PICS_OUT[640]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O4T_06_EPB,"","","PICS_IN[352]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O4T_06_RPBA,"","","PICS_IN[353]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O4T_06_SPBG,"","","PICS_IN[354]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O4T_10_EPB,"","","PICS_IN[355]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O4T_10_RPBA,"","","PICS_IN[356]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O4T_10_SPBG,"","","PICS_IN[357]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O4T_16_EPB,"","","PICS_OUT[648]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O4T_16_RPBA,"","","PICS_OUT[650]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_O4T_16_SPBG,"","","PICS_OUT[649]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_T5T_09_AUTO,"","","PICS_IN[358]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_T5T_09_EPB,"","","PICS_IN[359]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_T5T_09_JRB,"","","PICS_IN[360]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_T5T_09_RPBA,"","","PICS_IN[361]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_T5T_09_SPBG,"","","PICS_IN[362]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_XO1_01_EPB,"","","PICS_IN[363]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_XO1_01_RPBA,"","","PICS_IN[364]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_XO1_01_SPBG,"","","PICS_IN[365]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_XO2_02_EPB,"","","PICS_IN[366]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_XO2_02_RPBA,"","","PICS_IN[367]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_XO2_02_SPBG,"","","PICS_IN[368]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_XO2_05_AUTO,"","","PICS_IN[369]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_XO2_05_EPB,"","","PICS_IN[370]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_XO2_05_JRB,"","","PICS_IN[371]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_XO2_05_RPBA,"","","PICS_IN[372]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_CS_XO2_05_SPBG,"","","PICS_IN[373]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_01,"","","PICS_IN[206]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_02,"","","PICS_IN[207]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_03,"","","PICS_IN[208]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_04,"","","PICS_IN[209]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_05,"","","PICS_IN[210]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_06,"","","PICS_IN[211]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_07,"","","PICS_IN[212]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_08,"","","PICS_IN[213]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_09,"","","PICS_IN[214]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_10,"","","PICS_IN[215]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_11,"","","PICS_IN[216]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_12,"","","PICS_IN[217]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_13,"","","PICS_IN[218]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_14,"","","PICS_IN[219]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_15,"","","PICS_IN[220]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_16,"","","PICS_IN[221]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_17,"","","PICS_IN[222]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_18,"","","PICS_IN[223]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_19,"","","PICS_IN[224]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_20,"","","PICS_IN[225]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_21,"","","PICS_IN[226]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_22,"","","PICS_IN[227]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_23,"","","PICS_IN[228]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_24,"","","PICS_IN[229]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_25,"","","PICS_IN[230]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_26,"","","PICS_IN[231]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_27,"","","PICS_IN[114]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_28,"","","PICS_IN[115]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_29,"","","PICS_IN[116]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_30,"","","PICS_IN[117]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_31,"","","PICS_IN[232]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_32,"","","PICS_IN[233]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_33,"","","PICS_IN[234]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_34,"","","PICS_IN[235]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_35,"","","PICS_IN[236]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_36,"","","PICS_IN[237]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_37,"","","PICS_IN[238]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM1_38,"","","PICS_IN[239]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_C_BM2_13,"","","PICS_IN[100]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_ECR_BM1_01,"","","PICS_IN[469]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_ECR_BM1_02,"","","PICS_IN[470]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_ECR_BM1_03,"","","PICS_IN[471]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_C2T_12_RES,"","","PICS_IN[473]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_C2T_12_START,"","","PICS_IN[474]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_C2_11_JAM,"","","PICS_IN[472]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_C4_09_RUN,"","","PICS_IN[475]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_CL12T_35_RES,"","","PICS_OUT[696]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_CL12T_35_START,"","","PICS_OUT[694]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_CL12_34_JAM,"","","PICS_OUT[695]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_HX1T_06_RES,"","","PICS_IN[478]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_HX1T_06_START,"","","PICS_IN[479]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_HX1_05_JAM,"","","PICS_IN[476]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_HX1_11_RUN,"","","PICS_IN[477]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O2T_04_RES,"","","PICS_IN[481]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O2T_04_START,"","","PICS_IN[482]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O2_03_JAM,"","","PICS_IN[480]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O3T_17_START,"","","PICS_OUT[688]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O3T_21_RUN,"","","PICS_OUT[690]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O3_16_JAM,"","","PICS_OUT[689]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O4T_05_RES,"","","PICS_IN[487]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O4T_05_START,"","","PICS_IN[488]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O4T_16_START,"","","PICS_OUT[691]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O4T_21_RUN,"","","PICS_OUT[693]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O4_03_MRG,"","","PICS_IN[483]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O4_04_JAM,"","","PICS_IN[484]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O4_04_RUN,"","","PICS_IN[485]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O4_06_RUN,"","","PICS_IN[486]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_O4_15_JAM,"","","PICS_OUT[692]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_T5T_08_RES,"","","PICS_IN[491]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_T5T_08_START,"","","PICS_IN[492]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_T5_07_JAM,"","","PICS_IN[489]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_INT_T5_10_RUN,"","","PICS_IN[490]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_01,"","","PICS_IN[493]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_02,"","","PICS_IN[494]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_03,"","","PICS_IN[495]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_04,"","","PICS_IN[496]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_05,"","","PICS_IN[497]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_06,"","","PICS_IN[498]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_07,"","","PICS_IN[499]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_08,"","","PICS_IN[500]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_09,"","","PICS_IN[501]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_10,"","","PICS_IN[502]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_11,"","","PICS_IN[503]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_12,"","","PICS_IN[504]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_13,"","","PICS_IN[505]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_14,"","","PICS_IN[506]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_15,"","","PICS_IN[507]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_16,"","","PICS_IN[508]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_17,"","","PICS_IN[509]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_18,"","","PICS_IN[510]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_19,"","","PICS_IN[511]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_20,"","","PICS_IN[512]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_21,"","","PICS_IN[513]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_22,"","","PICS_IN[514]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_23,"","","PICS_IN[515]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_24,"","","PICS_IN[516]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_25,"","","PICS_IN[517]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_26,"","","PICS_IN[518]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_27,"","","PICS_IN[519]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_28,"","","PICS_IN[520]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_29,"","","PICS_IN[521]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_30,"","","PICS_IN[522]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_31,"","","PICS_IN[523]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_32,"","","PICS_IN[524]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_33,"","","PICS_IN[525]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_34,"","","PICS_IN[526]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_35,"","","PICS_IN[527]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_36,"","","PICS_IN[528]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_37,"","","PICS_IN[529]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MOL_BM1_38,"","","PICS_IN[530]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_01,"","","PICS_IN[531]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_02,"","","PICS_IN[532]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_03,"","","PICS_IN[533]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_04,"","","PICS_IN[534]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_05,"","","PICS_IN[535]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_06,"","","PICS_IN[536]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_07,"","","PICS_IN[537]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_08,"","","PICS_IN[538]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_09,"","","PICS_IN[539]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_10,"","","PICS_IN[540]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_11,"","","PICS_IN[541]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_12,"","","PICS_IN[542]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_13,"","","PICS_IN[543]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_14,"","","PICS_IN[544]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_15,"","","PICS_IN[545]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_16,"","","PICS_IN[546]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_17,"","","PICS_IN[547]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_18,"","","PICS_IN[548]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_19,"","","PICS_IN[549]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_20,"","","PICS_IN[550]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_21,"","","PICS_IN[551]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_22,"","","PICS_IN[552]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_23,"","","PICS_IN[553]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_24,"","","PICS_IN[554]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_25,"","","PICS_IN[555]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_26,"","","PICS_IN[556]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_27,"","","PICS_IN[557]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_28,"","","PICS_IN[558]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_29,"","","PICS_IN[559]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_30,"","","PICS_IN[560]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_31,"","","PICS_IN[561]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_32,"","","PICS_IN[562]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_33,"","","PICS_IN[563]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_34,"","","PICS_IN[564]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_35,"","","PICS_IN[565]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_36,"","","PICS_IN[566]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_37,"","","PICS_IN[567]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_BM1_38,"","","PICS_IN[568]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_C2T_12,"","","PICS_IN[569]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_C2T_13,"","","PICS_IN[570]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_C2T_14,"","","PICS_IN[571]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_C2T_15,"","","PICS_IN[572]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_C2T_16,"","","PICS_IN[573]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_C2T_17,"","","PICS_IN[574]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL12T_35,"","","PICS_OUT[673]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL12T_36,"","","PICS_OUT[674]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_01,"","","PICS_IN[575]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_02,"","","PICS_IN[576]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_03,"","","PICS_IN[577]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_04,"","","PICS_IN[578]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_05,"","","PICS_IN[579]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_06,"","","PICS_IN[580]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_07,"","","PICS_IN[581]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_08,"","","PICS_IN[582]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_09,"","","PICS_IN[583]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_10,"","","PICS_IN[584]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_11,"","","PICS_IN[585]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_12,"","","PICS_IN[586]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_13,"","","PICS_IN[587]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_14,"","","PICS_IN[588]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_15,"","","PICS_IN[589]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_16,"","","PICS_IN[590]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_17,"","","PICS_IN[591]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_18,"","","PICS_IN[592]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_19,"","","PICS_IN[593]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_20,"","","PICS_IN[594]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_21,"","","PICS_IN[595]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_23,"","","PICS_IN[596]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_24,"","","PICS_IN[597]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL1T_26,"","","PICS_IN[598]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL2T_01,"","","PICS_IN[599]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL2T_02,"","","PICS_IN[600]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL2T_03,"","","PICS_IN[601]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL2T_04,"","","PICS_IN[602]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL2T_05,"","","PICS_IN[603]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL2T_06,"","","PICS_IN[604]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL2T_07,"","","PICS_IN[605]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL2T_08,"","","PICS_IN[606]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL2T_09,"","","PICS_IN[607]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL3T_01,"","","PICS_IN[608]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL3T_02,"","","PICS_IN[609]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL3T_03,"","","PICS_IN[610]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL3T_04,"","","PICS_IN[611]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL3T_05,"","","PICS_IN[612]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL3T_06,"","","PICS_IN[613]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL3T_07,"","","PICS_IN[614]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_CL3T_08,"","","PICS_IN[615]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_HX1T_06,"","","PICS_IN[616]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_HX1T_07,"","","PICS_IN[617]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_HX1T_08,"","","PICS_IN[618]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_HX1T_09,"","","PICS_IN[619]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_HX1T_10,"","","PICS_IN[620]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_HX1T_10A,"","","PICS_IN[621]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_04,"","","PICS_IN[622]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_05,"","","PICS_IN[623]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_06,"","","PICS_IN[624]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_07,"","","PICS_IN[625]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_08,"","","PICS_IN[626]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_09,"","","PICS_IN[627]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_10,"","","PICS_IN[628]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_11,"","","PICS_IN[629]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_12,"","","PICS_IN[630]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_13,"","","PICS_IN[631]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_14,"","","PICS_IN[632]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_15,"","","PICS_IN[633]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_16,"","","PICS_IN[634]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_17,"","","PICS_IN[635]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O2T_18,"","","PICS_IN[636]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O3T_17,"","","PICS_OUT[662]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O3T_18,"","","PICS_OUT[663]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O3T_19,"","","PICS_OUT[664]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O3T_20,"","","PICS_OUT[665]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_05,"","","PICS_IN[637]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_06,"","","PICS_IN[638]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_07,"","","PICS_IN[639]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_08,"","","PICS_IN[640]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_09,"","","PICS_IN[641]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_10,"","","PICS_IN[642]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_11,"","","PICS_IN[643]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_12,"","","PICS_IN[644]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_13,"","","PICS_IN[645]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_16,"","","PICS_OUT[666]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_17,"","","PICS_OUT[667]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_18,"","","PICS_OUT[668]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_19,"","","PICS_OUT[669]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_20,"","","PICS_OUT[670]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_21,"","","PICS_OUT[671]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_O4T_22,"","","PICS_OUT[672]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_T5T_08,"","","PICS_IN[646]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_T5T_09,"","","PICS_IN[647]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_XO1_01,"","","PICS_IN[648]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_XO1_02,"","","PICS_IN[649]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_XO1_03,"","","PICS_IN[650]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_XO2_01,"","","PICS_IN[651]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_XO2_02,"","","PICS_IN[652]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_XO2_03,"","","PICS_IN[653]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_XO2_04,"","","PICS_IN[654]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_MSD_XO2_05,"","","PICS_IN[655]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE1_BM1_06,"","","PICS_IN[767]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE1_BM1_14,"","","PICS_IN[768]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE1_BM1_19,"","","PICS_IN[769]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE1_BM1_23,"","","PICS_IN[774]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE1_BM1_27,"","","PICS_IN[770]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE1_BM1_28,"","","PICS_IN[771]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE1_BM1_29,"","","PICS_IN[772]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE1_BM1_30,"","","PICS_IN[773]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE1_CL1T_26,"","","PICS_IN[775]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE1_O4T_10,"","","PICS_IN[776]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE1_XO1_01,"","","PICS_IN[777]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE2_BM1_06,"","","PICS_IN[778]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE2_BM1_14,"","","PICS_IN[779]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE2_BM1_19,"","","PICS_IN[780]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE2_BM1_23,"","","PICS_IN[785]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE2_BM1_27,"","","PICS_IN[781]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE2_BM1_28,"","","PICS_IN[782]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE2_BM1_29,"","","PICS_IN[783]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE2_BM1_30,"","","PICS_IN[784]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE2_CL1T_26,"","","PICS_IN[786]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE2_O4T_10,"","","PICS_IN[787]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE2_XO1_01,"","","PICS_IN[788]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE3_BM1_30,"","","PICS_IN[789]","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,PICS_I_PE_BM1,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_07,"","","PICS_IN[656]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_08,"","","PICS_IN[657]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_09,"","","PICS_IN[658]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_10,"","","PICS_IN[659]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_11,"","","PICS_IN[660]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_12,"","","PICS_IN[661]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_13,"","","PICS_IN[662]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_15,"","","PICS_IN[663]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_16,"","","PICS_IN[664]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_17,"","","PICS_IN[665]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_18,"","","PICS_IN[666]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_20,"","","PICS_IN[667]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_21,"","","PICS_IN[668]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_22,"","","PICS_IN[669]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_23,"","","PICS_IN[670]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_24,"","","PICS_IN[671]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_25,"","","PICS_IN[672]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_26,"","","PICS_IN[673]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_31,"","","PICS_IN[674]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_32,"","","PICS_IN[675]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_33,"","","PICS_IN[676]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_34,"","","PICS_IN[677]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_35,"","","PICS_IN[678]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_36,"","","PICS_IN[679]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_37,"","","PICS_IN[680]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_BM1_38,"","","PICS_IN[681]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_C2T_12,"","","PICS_IN[682]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_C2T_13,"","","PICS_IN[683]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_C2T_14,"","","PICS_IN[684]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_C2T_15,"","","PICS_IN[685]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_C2T_16,"","","PICS_IN[686]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_C2T_17,"","","PICS_IN[687]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_C4_08,"","","PICS_IN[688]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL12T_35,"","","PICS_OUT[686]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL12T_36,"","","PICS_OUT[687]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_01,"","","PICS_IN[689]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_02,"","","PICS_IN[690]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_03,"","","PICS_IN[691]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_04,"","","PICS_IN[692]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_05,"","","PICS_IN[693]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_06,"","","PICS_IN[694]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_07,"","","PICS_IN[695]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_08,"","","PICS_IN[696]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_09,"","","PICS_IN[697]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_10,"","","PICS_IN[698]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_11,"","","PICS_IN[699]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_12,"","","PICS_IN[700]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_13,"","","PICS_IN[701]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_14,"","","PICS_IN[702]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_15,"","","PICS_IN[703]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_16,"","","PICS_IN[704]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_17,"","","PICS_IN[705]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_18,"","","PICS_IN[706]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_19,"","","PICS_IN[707]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_20,"","","PICS_IN[708]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_21,"","","PICS_IN[709]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_23,"","","PICS_IN[710]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL1T_24,"","","PICS_IN[711]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL2T_01,"","","PICS_IN[712]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL2T_02,"","","PICS_IN[713]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL2T_03,"","","PICS_IN[714]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL2T_04,"","","PICS_IN[715]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL2T_05,"","","PICS_IN[716]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL2T_06,"","","PICS_IN[717]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL2T_07,"","","PICS_IN[718]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL2T_08,"","","PICS_IN[719]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL2T_09,"","","PICS_IN[720]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL3T_01,"","","PICS_IN[721]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL3T_02,"","","PICS_IN[722]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL3T_03,"","","PICS_IN[723]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL3T_04,"","","PICS_IN[724]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL3T_05,"","","PICS_IN[725]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL3T_06,"","","PICS_IN[726]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL3T_07,"","","PICS_IN[727]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_CL3T_08,"","","PICS_IN[728]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_HX1T_06,"","","PICS_IN[729]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_HX1T_07,"","","PICS_IN[730]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_HX1T_08,"","","PICS_IN[731]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_HX1T_09,"","","PICS_IN[732]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_HX1T_10,"","","PICS_IN[733]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_HX1T_10A,"","","PICS_IN[734]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_04,"","","PICS_IN[735]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_05,"","","PICS_IN[736]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_06,"","","PICS_IN[737]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_07,"","","PICS_IN[738]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_08,"","","PICS_IN[739]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_09,"","","PICS_IN[740]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_10,"","","PICS_IN[741]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_11,"","","PICS_IN[742]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_12,"","","PICS_IN[743]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_13,"","","PICS_IN[744]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_14,"","","PICS_IN[745]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_15,"","","PICS_IN[746]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_16,"","","PICS_IN[747]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_17,"","","PICS_IN[748]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O2T_18,"","","PICS_IN[749]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O3T_17,"","","PICS_OUT[675]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O3T_18,"","","PICS_OUT[676]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O3T_19,"","","PICS_OUT[677]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O3T_20,"","","PICS_OUT[678]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_05,"","","PICS_IN[750]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_06,"","","PICS_IN[751]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_07,"","","PICS_IN[752]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_08,"","","PICS_IN[753]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_09,"","","PICS_IN[754]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_11,"","","PICS_IN[755]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_12,"","","PICS_IN[756]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_13,"","","PICS_IN[757]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_16,"","","PICS_OUT[679]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_17,"","","PICS_OUT[680]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_18,"","","PICS_OUT[681]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_19,"","","PICS_OUT[682]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_20,"","","PICS_OUT[683]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_21,"","","PICS_OUT[684]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_O4T_22,"","","PICS_OUT[685]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_T5T_08,"","","PICS_IN[758]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_T5T_09,"","","PICS_IN[759]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_XO1_02,"","","PICS_IN[760]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_XO1_03,"","","PICS_IN[761]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_XO2_01,"","","PICS_IN[762]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_XO2_02,"","","PICS_IN[763]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_XO2_03,"","","PICS_IN[764]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_XO2_04,"","","PICS_IN[765]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_PE_XO2_05,"","","PICS_IN[766]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO1_AUTO,"","","PICS_IN[790]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO1_CUR,"","","PICS_IN[791]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO1_DS,"","","PICS_IN[792]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO1_EXT,"","","PICS_IN[793]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO1_FLT,"","","PICS_IN[794]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO1_SLMR,"","","PICS_IN[795]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO1_ZERO,"","","PICS_IN[796]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO2_AUTO,"","","PICS_IN[797]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO2_CUR,"","","PICS_IN[798]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO2_DS,"","","PICS_IN[799]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO2_EXT,"","","PICS_IN[800]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO2_FLT,"","","PICS_IN[801]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO2_SLMR,"","","PICS_IN[802]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SD_XO2_ZERO,"","","PICS_IN[803]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SE_BM1_14,"","","PICS_IN[804]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SE_BM1_23,"","","PICS_IN[805]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SE_C4_09,"","","PICS_IN[806]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SE_CL1T_26,"","","PICS_IN[807]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SE_O2T_10,"","","PICS_IN[808]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SE_O4T_10,"","","PICS_IN[810]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SE_O4T_20,"","","PICS_OUT[619]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_SE_O4_04,"","","PICS_IN[809]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_TS_MCP_01_ALM,"","","PICS_IN[811]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_TS_MCP_02_ALM,"","","PICS_IN[812]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_TS_MCP_03_ALM,"","","PICS_IN[813]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_TS_MCP_16_ALM,"","","PICS_OUT[638]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_BM1_27_RDY,"","","PICS_IN[814]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_BM1_28_RDY,"","","PICS_IN[815]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_BM1_29_RDY,"","","PICS_IN[816]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_BM1_30_RDY,"","","PICS_IN[817]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_C2T_12_RDY,"","","PICS_IN[818]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_C2T_13_RDY,"","","PICS_IN[819]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_C2T_14_RDY,"","","PICS_IN[820]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_C2T_15_RDY,"","","PICS_IN[821]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_C2T_16_RDY,"","","PICS_IN[822]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_C2T_17_RDY,"","","PICS_IN[823]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL12T_35_RDY,"","","PICS_OUT[617]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL12T_36_RDY,"","","PICS_OUT[618]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_01_RDY,"","","PICS_IN[824]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_02_RDY,"","","PICS_IN[825]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_03_RDY,"","","PICS_IN[826]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_04_RDY,"","","PICS_IN[827]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_05_RDY,"","","PICS_IN[828]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_06_RDY,"","","PICS_IN[829]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_07_RDY,"","","PICS_IN[830]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_08_RDY,"","","PICS_IN[831]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_09_RDY,"","","PICS_IN[832]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_10_RDY,"","","PICS_IN[833]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_11_RDY,"","","PICS_IN[834]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_12_RDY,"","","PICS_IN[835]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_13_RDY,"","","PICS_IN[836]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_14_RDY,"","","PICS_IN[837]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_15_RDY,"","","PICS_IN[838]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_16_RDY,"","","PICS_IN[839]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_17_RDY,"","","PICS_IN[840]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_18_RDY,"","","PICS_IN[841]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_19_RDY,"","","PICS_IN[842]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_20_RDY,"","","PICS_IN[843]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_21_RDY,"","","PICS_IN[844]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_23_RDY,"","","PICS_IN[845]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_24_RDY,"","","PICS_IN[846]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL1T_26_RDY,"","","PICS_IN[847]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL2T_01_RDY,"","","PICS_IN[848]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL2T_02_RDY,"","","PICS_IN[849]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL2T_03_RDY,"","","PICS_IN[850]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL2T_04_RDY,"","","PICS_IN[851]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL2T_05_RDY,"","","PICS_IN[852]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL2T_06_RDY,"","","PICS_IN[853]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL2T_07_RDY,"","","PICS_IN[854]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL2T_08_RDY,"","","PICS_IN[855]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL2T_09_RDY,"","","PICS_IN[856]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL3T_01_RDY,"","","PICS_IN[857]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL3T_02_RDY,"","","PICS_IN[858]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL3T_03_RDY,"","","PICS_IN[859]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL3T_04_RDY,"","","PICS_IN[860]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL3T_05_RDY,"","","PICS_IN[861]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL3T_06_RDY,"","","PICS_IN[862]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL3T_07_RDY,"","","PICS_IN[863]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_CL3T_08_RDY,"","","PICS_IN[864]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_HX1T_06_RDY,"","","PICS_IN[865]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_HX1T_07_RDY,"","","PICS_IN[866]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_HX1T_08_RDY,"","","PICS_IN[867]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_HX1T_09_RDY,"","","PICS_IN[868]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_HX1T_10A_RDY,"","","PICS_IN[870]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_HX1T_10_RDY,"","","PICS_IN[869]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_04_RDY,"","","PICS_IN[871]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_05_RDY,"","","PICS_IN[872]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_06_RDY,"","","PICS_IN[873]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_07_RDY,"","","PICS_IN[874]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_08_RDY,"","","PICS_IN[875]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_09_RDY,"","","PICS_IN[876]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_10_RDY,"","","PICS_IN[877]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_11_RDY,"","","PICS_IN[878]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_12_RDY,"","","PICS_IN[879]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_13_RDY,"","","PICS_IN[880]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_14_RDY,"","","PICS_IN[881]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_15_RDY,"","","PICS_IN[882]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_16_RDY,"","","PICS_IN[883]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_17_RDY,"","","PICS_IN[884]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O2T_18_RDY,"","","PICS_IN[885]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O3T_17_RDY,"","","PICS_OUT[606]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O3T_18_RDY,"","","PICS_OUT[607]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O3T_19_RDY,"","","PICS_OUT[608]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O3T_20_RDY,"","","PICS_OUT[609]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_05_RDY,"","","PICS_IN[886]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_06_RDY,"","","PICS_IN[887]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_07_RDY,"","","PICS_IN[888]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_08_RDY,"","","PICS_IN[889]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_09_RDY,"","","PICS_IN[890]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_10_RDY,"","","PICS_IN[891]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_11_RDY,"","","PICS_IN[892]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_12_RDY,"","","PICS_IN[893]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_13_RDY,"","","PICS_IN[894]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_16_RDY,"","","PICS_OUT[610]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_17_RDY,"","","PICS_OUT[611]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_18_RDY,"","","PICS_OUT[612]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_19_RDY,"","","PICS_OUT[613]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_20_RDY,"","","PICS_OUT[614]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_21_RDY,"","","PICS_OUT[615]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_O4T_22_RDY,"","","PICS_OUT[616]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_T5T_08_RDY,"","","PICS_IN[895]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_T5T_09_RDY,"","","PICS_IN[896]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_XO1_01_RDY,"","","PICS_IN[897]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_XO1_02_RDY,"","","PICS_IN[898]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_XO1_03_RDY,"","","PICS_IN[899]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_XO2_01_RDY,"","","PICS_IN[900]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_XO2_02_RDY,"","","PICS_IN[901]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_XO2_03_RDY,"","","PICS_IN[902]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_XO2_04_RDY,"","","PICS_IN[903]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_I_VFD_XO2_05_RDY,"","","PICS_IN[904]","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,PICS_OUT,"","BOOL[768]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_BM1_2_02_15,"","","PICS_OUT[140]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_BM1_2_03_14,"","","PICS_OUT[141]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_BM1_2_03_15,"","","PICS_OUT[142]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_BM1_2_06_14,"","","PICS_OUT[143]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_BM1_2_06_15,"","","PICS_OUT[144]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CBP_BM1_07_TRIG,"","","PICS_OUT[145]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CBP_BM1_08_TRIG,"","","PICS_OUT[146]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CBP_BM1_09_TRIG,"","","PICS_OUT[147]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CBP_BM1_10_TRIG,"","","PICS_OUT[148]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CBP_BM1_11_TRIG,"","","PICS_OUT[149]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CBP_BM1_12_TRIG,"","","PICS_OUT[150]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CBP_BM1_13_TRIG,"","","PICS_OUT[151]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_14_EPB,"","","PICS_OUT[283]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_14_RPBA,"","","PICS_OUT[284]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_16_EPB,"","","PICS_OUT[285]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_16_RPBA,"","","PICS_OUT[286]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_17_EPB,"","","PICS_OUT[287]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_17_RPBA,"","","PICS_OUT[79]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_27_EPB,"","","PICS_OUT[288]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_27_RPBA,"","","PICS_OUT[289]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_28_EPB,"","","PICS_OUT[290]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_28_RPBA,"","","PICS_OUT[292]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_29_EPB,"","","PICS_OUT[294]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_29_LTB,"","","PICS_OUT[295]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_29_RPBA,"","","PICS_OUT[296]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_30_EPB,"","","PICS_OUT[297]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_30_LTB,"","","PICS_OUT[298]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_BM1_30_RPBA,"","","PICS_OUT[299]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL1T_01_EPB,"","","PICS_OUT[300]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL1T_01_SPBG,"","","PICS_OUT[301]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL1T_02_EPB,"","","PICS_OUT[302]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL1T_02_RPBA,"","","PICS_OUT[303]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL1T_02_SPBG,"","","PICS_OUT[304]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL2T_01_EPB,"","","PICS_OUT[305]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL2T_01_SPBG,"","","PICS_OUT[306]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL2T_02_EPB,"","","PICS_OUT[307]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL2T_02_RPBA,"","","PICS_OUT[308]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL2T_02_SPBG,"","","PICS_OUT[309]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL2T_05_EPB,"","","PICS_OUT[310]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL2T_05_RPBA,"","","PICS_OUT[311]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL2T_05_SPBG,"","","PICS_OUT[312]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL3T_01_EPB,"","","PICS_OUT[313]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL3T_01_SPBG,"","","PICS_OUT[314]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL3T_02_EPB,"","","PICS_OUT[315]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL3T_02_RPBA,"","","PICS_OUT[316]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_CL3T_02_SPBG,"","","PICS_OUT[317]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_O3T_19_EPB,"","","PICS_OUT[705]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_O3T_19_RPBA,"","","PICS_OUT[707]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_O3T_19_SPBG,"","","PICS_OUT[706]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_O4T_21_EPB,"","","PICS_OUT[714]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_O4T_21_RPBA,"","","PICS_OUT[716]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS1_O4T_21_SPBG,"","","PICS_OUT[715]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_14_EPB,"","","PICS_OUT[318]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_14_RPBA,"","","PICS_OUT[319]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_16_EPB,"","","PICS_OUT[320]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_16_RPBA,"","","PICS_OUT[321]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_17_EPB,"","","PICS_OUT[322]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_17_RPBA,"","","PICS_OUT[324]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_23_EPB,"","","PICS_OUT[333]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_23_RPBA,"","","PICS_OUT[334]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_23_SPBG,"","","PICS_OUT[335]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_27_EPB,"","","PICS_OUT[325]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_27_RPBA,"","","PICS_OUT[326]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_28_EPB,"","","PICS_OUT[327]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_28_RPBA,"","","PICS_OUT[63]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_29_EPB,"","","PICS_OUT[328]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_29_RPBA,"","","PICS_OUT[329]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_29_SPBG,"","","PICS_OUT[330]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_30_EPB,"","","PICS_OUT[331]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_BM1_30_RPBA,"","","PICS_OUT[332]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL1T_01_EPB,"","","PICS_OUT[336]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL1T_01_SPBG,"","","PICS_OUT[337]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL1T_02_EPB,"","","PICS_OUT[338]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL1T_02_SPBG,"","","PICS_OUT[339]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL2T_01_EPB,"","","PICS_OUT[340]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL2T_01_SPBG,"","","PICS_OUT[341]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL2T_02_EPB,"","","PICS_OUT[342]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL2T_02_SPBG,"","","PICS_OUT[343]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL2T_05_EPB,"","","PICS_OUT[344]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL2T_05_RPBA,"","","PICS_OUT[345]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL2T_05_SPBG,"","","PICS_OUT[346]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL3T_01_EPB,"","","PICS_OUT[347]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL3T_01_SPBG,"","","PICS_OUT[348]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL3T_02_EPB,"","","PICS_OUT[349]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_CL3T_02_SPBG,"","","PICS_OUT[350]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_O3T_19_EPB,"","","PICS_OUT[708]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_O3T_19_RPBA,"","","PICS_OUT[710]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_O3T_19_SPBG,"","","PICS_OUT[709]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_O4T_21_EPB,"","","PICS_OUT[717]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_O4T_21_RPBA,"","","PICS_OUT[719]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS2_O4T_21_SPBG,"","","PICS_OUT[718]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_BM1_27_EPB,"","","PICS_OUT[351]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_BM1_28_EPB,"","","PICS_OUT[352]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_BM1_29_EPB,"","","PICS_OUT[353]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_BM1_30_EPB,"","","PICS_OUT[354]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_BM1_30_RPBA,"","","PICS_OUT[355]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_BM1_30_SPBG,"","","PICS_OUT[356]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_CL1T_01_EPB,"","","PICS_OUT[357]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_CL1T_01_SPBG,"","","PICS_OUT[358]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_CL1T_02_EPB,"","","PICS_OUT[359]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_CL1T_02_SPBG,"","","PICS_OUT[360]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_CL2T_02_EPB,"","","PICS_OUT[361]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_CL2T_02_SPBG,"","","PICS_OUT[362]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_CL3T_02_EPB,"","","PICS_OUT[363]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS3_CL3T_02_SPBG,"","","PICS_OUT[364]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS4_BM1_27_EPB,"","","PICS_OUT[365]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS4_BM1_28_EPB,"","","PICS_OUT[366]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS4_BM1_28_SPBG,"","","PICS_OUT[293]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS4_BM1_29_EPB,"","","PICS_OUT[367]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS4_BM1_30_EPB,"","","PICS_OUT[368]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS4_CL3T_02_EPB,"","","PICS_OUT[369]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS4_CL3T_02_RPBA,"","","PICS_OUT[370]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS4_CL3T_02_SPBG,"","","PICS_OUT[371]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS5_BM1_27_EPB,"","","PICS_OUT[372]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS5_BM1_27_RPBA,"","","PICS_OUT[373]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS5_BM1_27_SPBG,"","","PICS_OUT[374]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS5_BM1_28_EPB,"","","PICS_OUT[375]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS5_BM1_28_RPBA,"","","PICS_OUT[376]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS5_BM1_28_SPBG,"","","PICS_OUT[377]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_01_EPB,"","","PICS_OUT[152]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_01_RPBA,"","","PICS_OUT[153]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_02_EPB,"","","PICS_OUT[154]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_02_RPBA,"","","PICS_OUT[155]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_03_EPB,"","","PICS_OUT[156]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_03_RPBA,"","","PICS_OUT[157]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_06_EPB,"","","PICS_OUT[158]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_06_RPBA,"","","PICS_OUT[159]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_07_EPB,"","","PICS_OUT[160]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_07_LTB,"","","PICS_OUT[161]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_07_RPBA,"","","PICS_OUT[162]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_07_SPBG,"","","PICS_OUT[163]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_13_EPB,"","","PICS_OUT[164]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_13_RPBA,"","","PICS_OUT[165]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_14_EPB,"","","PICS_OUT[111]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_15_EPB,"","","PICS_OUT[166]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_15_RPBA,"","","PICS_OUT[167]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_17_LTB,"","","PICS_OUT[168]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_17_SPBG,"","","PICS_OUT[169]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_18_EPB,"","","PICS_OUT[170]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_18_RPBA,"","","PICS_OUT[171]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_19_EPB,"","","PICS_OUT[172]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_19_RPBA,"","","PICS_OUT[173]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_20_EPB,"","","PICS_OUT[174]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_20_LTB,"","","PICS_OUT[175]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_20_RPBA,"","","PICS_OUT[176]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_23_EPB,"","","PICS_OUT[177]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_23_RPBA,"","","PICS_OUT[178]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_25_EPB,"","","PICS_OUT[179]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_25_RPBA,"","","PICS_OUT[180]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_29_LTB,"","","PICS_OUT[76]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_30_LTB,"","","PICS_OUT[77]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_34_EPB,"","","PICS_OUT[181]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_34_RPBA,"","","PICS_OUT[182]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_38_EPB,"","","PICS_OUT[183]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_38_RPBA,"","","PICS_OUT[184]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_MCP_EPB,"","","PICS_OUT[104]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_MCP_LTA,"","","PICS_OUT[81]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_MCP_LTB,"","","PICS_OUT[82]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_BM1_MCP_LTG,"","","PICS_OUT[83]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_C2T_13_EPB,"","","PICS_OUT[185]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_C2T_13_RPBA,"","","PICS_OUT[186]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_C2T_13_SPBG,"","","PICS_OUT[187]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_C2T_17_EPB,"","","PICS_OUT[188]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_C2T_17_RPBA,"","","PICS_OUT[189]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_C2T_17_SPBG,"","","PICS_OUT[190]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL12T_36_EPB,"","","PICS_OUT[720]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL12T_36_RPBA,"","","PICS_OUT[722]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL12T_36_SPBG,"","","PICS_OUT[721]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_05_EPB,"","","PICS_OUT[191]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_05_RPBA,"","","PICS_OUT[192]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_05_SPBG,"","","PICS_OUT[193]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_09_EPB,"","","PICS_OUT[194]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_09_RPBA,"","","PICS_OUT[195]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_09_SPBG,"","","PICS_OUT[196]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_11_EPB,"","","PICS_OUT[197]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_11_RPBA,"","","PICS_OUT[198]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_11_SPBG,"","","PICS_OUT[199]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_12_EPB,"","","PICS_OUT[200]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_12_RPBA,"","","PICS_OUT[201]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_12_SPBG,"","","PICS_OUT[202]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_16_EPB,"","","PICS_OUT[203]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_16_RPBA,"","","PICS_OUT[204]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_16_SPBG,"","","PICS_OUT[205]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_20_EPB,"","","PICS_OUT[206]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_20_RPBA,"","","PICS_OUT[207]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_20_SPBG,"","","PICS_OUT[208]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_24_EPB,"","","PICS_OUT[209]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_24_RPBA,"","","PICS_OUT[210]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL1T_24_SPBG,"","","PICS_OUT[211]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL2T_04_EPB,"","","PICS_OUT[212]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL2T_04_RPBA,"","","PICS_OUT[213]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL2T_04_SPBG,"","","PICS_OUT[214]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL2T_09_EPB,"","","PICS_OUT[215]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL2T_09_RPBA,"","","PICS_OUT[216]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL2T_09_SPBG,"","","PICS_OUT[217]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL3T_03_EPB,"","","PICS_OUT[218]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL3T_03_RPBA,"","","PICS_OUT[219]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL3T_03_SPBG,"","","PICS_OUT[220]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL3T_04_EPB,"","","PICS_OUT[221]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL3T_04_RPBA,"","","PICS_OUT[222]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_CL3T_04_SPBG,"","","PICS_OUT[223]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_HX1T_10_EPB,"","","PICS_OUT[224]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_HX1T_10_RPBA,"","","PICS_OUT[225]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_HX1T_10_SPBG,"","","PICS_OUT[226]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_01_EPB,"","","PICS_OUT[227]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_01_HM,"","","PICS_OUT[228]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_01_LTA,"","","PICS_OUT[229]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_01_LTB,"","","PICS_OUT[230]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_01_LTG,"","","PICS_OUT[231]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_01_SPBG,"","","PICS_OUT[232]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_02_EPB,"","","PICS_OUT[233]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_02_LTA,"","","PICS_OUT[234]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_02_LTB,"","","PICS_OUT[235]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_02_LTG,"","","PICS_OUT[236]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_02_SPBG,"","","PICS_OUT[237]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_03_EPB,"","","PICS_OUT[238]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_03_LTA,"","","PICS_OUT[239]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_03_LTB,"","","PICS_OUT[240]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_03_LTG,"","","PICS_OUT[241]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_03_SPBG,"","","PICS_OUT[242]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_16_EPB,"","","PICS_OUT[697]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_16_LTA,"","","PICS_OUT[701]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_16_LTB,"","","PICS_OUT[700]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_16_LTG,"","","PICS_OUT[699]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_16_SPBG,"","","PICS_OUT[698]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_BM1_EPB,"","","PICS_OUT[243]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_BM1_HM,"","","PICS_OUT[84]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_BM1_LTA,"","","PICS_OUT[244]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_BM1_LTB,"","","PICS_OUT[245]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_MCP_BM1_LTG,"","","PICS_OUT[246]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_04_EPB,"","","PICS_OUT[247]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_04_RPBA,"","","PICS_OUT[248]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_04_SPBG,"","","PICS_OUT[249]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_06_EPB,"","","PICS_OUT[250]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_06_RPBA,"","","PICS_OUT[251]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_06_SPBG,"","","PICS_OUT[252]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_10_EPB,"","","PICS_OUT[253]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_10_RPBA,"","","PICS_OUT[254]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_10_SPBG,"","","PICS_OUT[255]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_12_EPB,"","","PICS_OUT[256]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_12_RPBA,"","","PICS_OUT[257]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_12_SPBG,"","","PICS_OUT[258]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_14_EPB,"","","PICS_OUT[259]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_14_RPBA,"","","PICS_OUT[260]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_14_SPBG,"","","PICS_OUT[261]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_18_EPB,"","","PICS_OUT[262]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_18_RPBA,"","","PICS_OUT[263]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O2T_18_SPBG,"","","PICS_OUT[264]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O3T_17_EPB,"","","PICS_OUT[702]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O3T_17_RPBA,"","","PICS_OUT[704]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O3T_17_SPBG,"","","PICS_OUT[703]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O4T_06_EPB,"","","PICS_OUT[265]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O4T_06_RPBA,"","","PICS_OUT[266]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O4T_06_SPBG,"","","PICS_OUT[267]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O4T_10_EPB,"","","PICS_OUT[268]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O4T_10_RPBA,"","","PICS_OUT[269]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O4T_10_SPBG,"","","PICS_OUT[270]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O4T_16_EPB,"","","PICS_OUT[711]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O4T_16_RPBA,"","","PICS_OUT[713]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_O4T_16_SPBG,"","","PICS_OUT[712]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_T5T_09_EPB,"","","PICS_OUT[271]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_T5T_09_RPBA,"","","PICS_OUT[272]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_T5T_09_SPBG,"","","PICS_OUT[273]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_XO1_01_EPB,"","","PICS_OUT[274]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_XO1_01_RPBA,"","","PICS_OUT[275]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_XO1_01_SPBG,"","","PICS_OUT[276]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_XO2_02_EPB,"","","PICS_OUT[277]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_XO2_02_RPBA,"","","PICS_OUT[278]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_XO2_02_SPBG,"","","PICS_OUT[279]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_XO2_05_EPB,"","","PICS_OUT[280]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_XO2_05_RPBA,"","","PICS_OUT[281]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_CS_XO2_05_SPBG,"","","PICS_OUT[282]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_01,"","","PICS_OUT[400]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_02,"","","PICS_OUT[401]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_03,"","","PICS_OUT[402]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_04,"","","PICS_OUT[403]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_05,"","","PICS_OUT[404]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_06,"","","PICS_OUT[405]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_07,"","","PICS_OUT[406]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_08,"","","PICS_OUT[407]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_09,"","","PICS_OUT[408]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_10,"","","PICS_OUT[409]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_11,"","","PICS_OUT[410]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_12,"","","PICS_OUT[411]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_13_FWD,"","","PICS_OUT[412]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_13_REV,"","","PICS_OUT[413]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_14,"","","PICS_OUT[414]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_15,"","","PICS_OUT[415]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_16,"","","PICS_OUT[416]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_17,"","","PICS_OUT[417]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_18,"","","PICS_OUT[418]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_19,"","","PICS_OUT[419]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_20,"","","PICS_OUT[420]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_21,"","","PICS_OUT[421]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_22,"","","PICS_OUT[422]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_23,"","","PICS_OUT[423]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_24,"","","PICS_OUT[424]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_25,"","","PICS_OUT[425]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_26,"","","PICS_OUT[426]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_27,"","","PICS_OUT[27]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_28,"","","PICS_OUT[28]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_29,"","","PICS_OUT[29]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_30,"","","PICS_OUT[30]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_31,"","","PICS_OUT[427]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_32,"","","PICS_OUT[428]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_33,"","","PICS_OUT[429]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_34,"","","PICS_OUT[430]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_35,"","","PICS_OUT[431]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_36,"","","PICS_OUT[432]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_37,"","","PICS_OUT[433]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_C_BM1_38,"","","PICS_OUT[434]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_C2T_12_RUN,"","","PICS_OUT[378]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_C4_08_MRG,"","","PICS_OUT[379]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_C4_09_RES,"","","PICS_OUT[380]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_C4_09_START,"","","PICS_OUT[381]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_CL12T_35_RUN,"","","PICS_OUT[732]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_CL1T_26_JAM,"","","PICS_OUT[382]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_CL2T_09_JAM,"","","PICS_OUT[383]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_CL3T_8_JAM,"","","PICS_OUT[384]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_HX1T_06_RUN,"","","PICS_OUT[387]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_HX1_11_RES,"","","PICS_OUT[385]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_HX1_11_START,"","","PICS_OUT[386]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O2T_04_RUN,"","","PICS_OUT[388]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O3T_17_RUN,"","","PICS_OUT[726]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O3T_20_JAM,"","","PICS_OUT[728]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O3_54_START,"","","PICS_OUT[727]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O4T_05_RUN,"","","PICS_OUT[394]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O4T_16_RUN,"","","PICS_OUT[729]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O4T_22_JAM,"","","PICS_OUT[731]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O4_03_MRG,"","","PICS_OUT[389]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O4_04_RES,"","","PICS_OUT[390]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O4_04_START,"","","PICS_OUT[391]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O4_06_RES,"","","PICS_OUT[392]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O4_06_START,"","","PICS_OUT[393]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_O4_54_START,"","","PICS_OUT[730]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_T5T_08_RUN,"","","PICS_OUT[395]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_T5T_09_JAM,"","","PICS_OUT[396]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_T5T_10_RES,"","","PICS_OUT[397]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_T5T_10_START,"","","PICS_OUT[398]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_INT_XO2_05_JAM,"","","PICS_OUT[399]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_SD_XO1_EN,"","","PICS_OUT[435]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_SD_XO1_EXT,"","","PICS_OUT[436]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_SD_XO1_RES,"","","PICS_OUT[437]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_SD_XO1_RET,"","","PICS_OUT[438]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_SD_XO1_RUN,"","","PICS_OUT[439]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_SD_XO2_EN,"","","PICS_OUT[440]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_SD_XO2_EXT,"","","PICS_OUT[441]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_SD_XO2_RES,"","","PICS_OUT[442]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_SD_XO2_RET,"","","PICS_OUT[443]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_SD_XO2_RUN,"","","PICS_OUT[444]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_BM1_27_FWD,"","","PICS_OUT[445]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_BM1_27_REV,"","","PICS_OUT[446]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_BM1_28_FWD,"","","PICS_OUT[447]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_BM1_28_REV,"","","PICS_OUT[448]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_BM1_29_FWD,"","","PICS_OUT[449]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_BM1_29_REV,"","","PICS_OUT[450]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_BM1_30_FWD,"","","PICS_OUT[451]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_BM1_30_REV,"","","PICS_OUT[452]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_C2T_12_FWD,"","","PICS_OUT[453]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_C2T_13_FWD,"","","PICS_OUT[454]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_C2T_14_FWD,"","","PICS_OUT[455]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_C2T_15_FWD,"","","PICS_OUT[456]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_C2T_16_FWD,"","","PICS_OUT[457]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_C2T_17_FWD,"","","PICS_OUT[458]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_C2T_17_REV,"","","PICS_OUT[459]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL12T_35_FWD,"","","PICS_OUT[631]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL12T_36_FWD,"","","PICS_OUT[632]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL12T_36_REV,"","","PICS_OUT[633]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_01_FWD,"","","PICS_OUT[460]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_02_FWD,"","","PICS_OUT[461]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_03_FWD,"","","PICS_OUT[462]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_04_FWD,"","","PICS_OUT[463]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_05_FWD,"","","PICS_OUT[464]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_06_FWD,"","","PICS_OUT[465]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_07_FWD,"","","PICS_OUT[466]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_08_FWD,"","","PICS_OUT[467]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_09_FWD,"","","PICS_OUT[468]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_10_FWD,"","","PICS_OUT[469]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_11_FWD,"","","PICS_OUT[470]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_12_FWD,"","","PICS_OUT[471]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_13_FWD,"","","PICS_OUT[472]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_14_FWD,"","","PICS_OUT[473]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_15_FWD,"","","PICS_OUT[474]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_16_FWD,"","","PICS_OUT[475]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_17_FWD,"","","PICS_OUT[476]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_18_FWD,"","","PICS_OUT[477]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_19_FWD,"","","PICS_OUT[478]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_20_FWD,"","","PICS_OUT[479]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_21_FWD,"","","PICS_OUT[480]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_23_FWD,"","","PICS_OUT[481]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_24_FWD,"","","PICS_OUT[482]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL1T_26_FWD,"","","PICS_OUT[483]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL2T_01_FWD,"","","PICS_OUT[484]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL2T_02_FWD,"","","PICS_OUT[485]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL2T_03_FWD,"","","PICS_OUT[486]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL2T_04_FWD,"","","PICS_OUT[487]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL2T_05_FWD,"","","PICS_OUT[488]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL2T_06_FWD,"","","PICS_OUT[489]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL2T_07_FWD,"","","PICS_OUT[490]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL2T_08_FWD,"","","PICS_OUT[491]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL2T_09_FWD,"","","PICS_OUT[492]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL3T_01_FWD,"","","PICS_OUT[493]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL3T_02_FWD,"","","PICS_OUT[494]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL3T_03_FWD,"","","PICS_OUT[495]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL3T_04_FWD,"","","PICS_OUT[496]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL3T_05_FWD,"","","PICS_OUT[497]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL3T_06_FWD,"","","PICS_OUT[498]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL3T_07_FWD,"","","PICS_OUT[499]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_CL3T_08_FWD,"","","PICS_OUT[500]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_HX1T_06_FWD,"","","PICS_OUT[501]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_HX1T_07_FWD,"","","PICS_OUT[502]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_HX1T_08_FWD,"","","PICS_OUT[503]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_HX1T_09_FWD,"","","PICS_OUT[504]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_HX1T_10A_FWD,"","","PICS_OUT[507]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_HX1T_10_FWD,"","","PICS_OUT[505]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_HX1T_10_REV,"","","PICS_OUT[506]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_04_FWD,"","","PICS_OUT[508]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_05_FWD,"","","PICS_OUT[509]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_06_FWD,"","","PICS_OUT[510]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_07_FWD,"","","PICS_OUT[511]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_08_FWD,"","","PICS_OUT[512]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_09_FWD,"","","PICS_OUT[513]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_10_FWD,"","","PICS_OUT[514]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_11_FWD,"","","PICS_OUT[515]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_12_FWD,"","","PICS_OUT[516]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_13_FWD,"","","PICS_OUT[517]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_14_FWD,"","","PICS_OUT[518]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_15_FWD,"","","PICS_OUT[519]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_16_FWD,"","","PICS_OUT[520]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_17_FWD,"","","PICS_OUT[521]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_18_FWD,"","","PICS_OUT[522]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O2T_18_REV,"","","PICS_OUT[523]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O3T_17_FWD,"","","PICS_OUT[620]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O3T_18_FWD,"","","PICS_OUT[621]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O3T_19_FWD,"","","PICS_OUT[622]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O3T_20_FWD,"","","PICS_OUT[623]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_05_FWD,"","","PICS_OUT[524]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_06_FWD,"","","PICS_OUT[525]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_07_FWD,"","","PICS_OUT[526]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_08_FWD,"","","PICS_OUT[527]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_09_FWD,"","","PICS_OUT[528]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_10_FWD,"","","PICS_OUT[529]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_11_FWD,"","","PICS_OUT[530]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_12_FWD,"","","PICS_OUT[531]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_13_FWD,"","","PICS_OUT[532]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_16_FWD,"","","PICS_OUT[624]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_17_FWD,"","","PICS_OUT[625]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_18_FWD,"","","PICS_OUT[626]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_19_FWD,"","","PICS_OUT[627]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_20_FWD,"","","PICS_OUT[628]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_21_FWD,"","","PICS_OUT[629]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_O4T_22_FWD,"","","PICS_OUT[630]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_T5T_08_FWD,"","","PICS_OUT[533]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_T5T_09_FWD,"","","PICS_OUT[534]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_T5T_09_REV,"","","PICS_OUT[535]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_XO1_01_FWD,"","","PICS_OUT[536]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_XO1_02_FWD,"","","PICS_OUT[537]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_XO1_03_FWD,"","","PICS_OUT[538]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_XO2_01_FWD,"","","PICS_OUT[539]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_XO2_02_FWD,"","","PICS_OUT[540]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_XO2_03_FWD,"","","PICS_OUT[541]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_XO2_04_FWD,"","","PICS_OUT[542]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_XO2_05_FWD,"","","PICS_OUT[543]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_VFD_XO2_05_REV,"","","PICS_OUT[544]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_01_ALM,"","","PICS_OUT[545]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_01_LTR,"","","PICS_OUT[546]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_03_ALM,"","","PICS_OUT[547]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_03_LTR,"","","PICS_OUT[548]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_06_ALM,"","","PICS_OUT[549]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_06_LTR,"","","PICS_OUT[550]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_15_ALM,"","","PICS_OUT[551]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_15_LTR,"","","PICS_OUT[552]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_16_ALM,"","","PICS_OUT[553]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_16_LTR,"","","PICS_OUT[554]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_18_ALM,"","","PICS_OUT[555]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_18_LTR,"","","PICS_OUT[556]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_23_ALM,"","","PICS_OUT[557]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_23_LTA,"","","PICS_OUT[558]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_23_LTR,"","","PICS_OUT[559]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_28_ALM,"","","PICS_OUT[560]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_28_LTR,"","","PICS_OUT[561]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_30_ALM,"","","PICS_OUT[562]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_30_LTR,"","","PICS_OUT[563]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_MCP_ALM,"","","PICS_OUT[87]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_MCP_LTA,"","","PICS_OUT[86]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_BM1_MCP_LTR,"","","PICS_OUT[85]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_C2T_13_ALM,"","","PICS_OUT[564]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_C2T_13_LTA,"","","PICS_OUT[565]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_C2T_13_LTR,"","","PICS_OUT[566]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL1T_01_ALM,"","","PICS_OUT[567]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL1T_01_LTA,"","","PICS_OUT[568]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL1T_01_LTR,"","","PICS_OUT[569]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL1T_09_ALM,"","","PICS_OUT[570]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL1T_09_LTA,"","","PICS_OUT[571]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL1T_09_LTR,"","","PICS_OUT[572]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL1T_20_ALM,"","","PICS_OUT[573]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL1T_20_LTA,"","","PICS_OUT[574]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL1T_20_LTR,"","","PICS_OUT[575]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL2T_02_ALM,"","","PICS_OUT[576]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL2T_02_LTA,"","","PICS_OUT[577]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL2T_02_LTR,"","","PICS_OUT[578]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL2T_05_ALM,"","","PICS_OUT[579]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL2T_05_LTA,"","","PICS_OUT[580]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL2T_05_LTR,"","","PICS_OUT[581]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL3T_03_ALM,"","","PICS_OUT[582]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL3T_03_LTA,"","","PICS_OUT[583]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_CL3T_03_LTR,"","","PICS_OUT[584]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_01_ALM,"","","PICS_OUT[585]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_01_LTA,"","","PICS_OUT[586]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_01_LTR,"","","PICS_OUT[587]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_02_ALM,"","","PICS_OUT[588]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_02_LTA,"","","PICS_OUT[589]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_02_LTR,"","","PICS_OUT[590]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_03_ALM,"","","PICS_OUT[591]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_03_LTA,"","","PICS_OUT[592]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_03_LTR,"","","PICS_OUT[593]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_16_ALM,"","","PICS_OUT[723]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_16_LTA,"","","PICS_OUT[725]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_16_LTR,"","","PICS_OUT[724]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_BM1_ALM,"","","PICS_OUT[594]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_BM1_LTA,"","","PICS_OUT[595]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_MCP_BM1_LTR,"","","PICS_OUT[596]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_O2T_06_ALM,"","","PICS_OUT[597]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_O2T_06_LTA,"","","PICS_OUT[598]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_O2T_06_LTR,"","","PICS_OUT[599]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_O2T_18_ALM,"","","PICS_OUT[600]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_O2T_18_LTA,"","","PICS_OUT[601]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_O2T_18_LTR,"","","PICS_OUT[602]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_O4T_10_ALM,"","","PICS_OUT[603]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_O4T_10_LTA,"","","PICS_OUT[604]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,PICS_O_WA_O4T_10_LTR,"","","PICS_OUT[605]","(RADIX := Decimal, ExternalAccess := Read/Write)"
TAG,,PLC_101,"","PLC","","(Constant := false, ExternalAccess := Read Only)"
TAG,,PLC_MEM_MSG_DEST,"","INT[29]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,PLC_MEM_MSG_SRC,"","SINT[12]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,Redundancy_Status,"","Redundancy_Status","","(Constant := false, ExternalAccess := Read Only)"
TAG,,RESET_STATS_REQ,"Reset Stats Request","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,REV_VFD_TMR,"","TIMER[15]","","(Constant := false, ExternalAccess := Read/Write)"
TAG,,R_CALC_BT_CONST_BTx,"","BTx","","(Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_BT_CONST_MTRx,"","MTRx","","(Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_BT_CONST_PP2S,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_BT_CONST_RANGE,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_DIV_ACT_CONST,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_DIV_ACT_CONST_ARY,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_DIV_ACT_CONST_BIT,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_DIV_AC_CNTRL,"","CONTROL","","(Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_DIV_AC_MASK,"","DINT[2]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_DIV_AC_NDX,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_DIV_EXT_DELAY,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_DIV_TC_CNT_PRE,"","DINT","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_MTR_CONST_MTR,"","MTR","","(Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_MTR_CONST_MTRx,"","MTRx","","(Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_PE_CONST_MTRx,"","MTRx","","(Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_PE_CONST_PE,"","PE","","(Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_SPACER_CONST_BTx,"","BTx","","(Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_SPACER_CONST_MTR,"","MTR","","(Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_SPACER_CONST_MTR1x,"","MTRx","","(Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_SPACER_CONST_MTR2x,"","MTRx","","(Constant := false, ExternalAccess := Read Only)"
TAG,,R_CALC_T_CONST_BTx,"","BTx","","(Constant := false, ExternalAccess := Read Only)"
TAG,,R_MSG_TO_UL,"","MSG_TO_UL_RTN","","(Constant := false, ExternalAccess := Read Only)"
TAG,,Status,"","STATUS","","(Constant := false, ExternalAccess := Read Only)"
TAG,,SYS,"","SYS[20]","","(Constant := false, ExternalAccess := Read Only)"
TAG,,S_ATR,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,S_BDS,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,S_BM1_06_PE1_JAM,"MTR/BM1-06 PE-A Jam Count","","S_PE[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_06_PE1_JAM1,"MTR/BM1-06 PE1 Jam Count","","S_PE[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_06_PE2_OH,"MTR/BM1-06 PE-B Overheight Count","","S_OH[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_06_PE3_OH,"MTR/BM1-06 PE3 Overheight Count","","S_OH[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_07_PE_JAM,"MTR/BM1-07 PE Jam Count","","S_PE[1]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_08_PE_JAM,"MTR/BM1-08 PE Jam Count","","S_PE[2]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_09_PE_JAM,"MTR/BM1-09 PE Jam Count","","S_PE[3]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_10_PE_JAM,"MTR/BM1-10 PE Jam Count","","S_PE[4]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_11_PE_JAM,"MTR/BM1-11 PE Jam Count","","S_PE[5]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_12_PE_JAM,"MTR/BM1-12 PE Jam Count","","S_PE[6]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_13_PE_JAM,"MTR/BM1-13 PE Jam Count","","S_PE[7]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_13_THRU,"MTR/BM1-13 Throughput Count","","S_THRU[8]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,S_BM1_14_PE1_JAM,"MTR/BM1-14 PE-A Jam Count","","S_PE[9]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_14_PE1_JAM1,"MTR/BM1-14 PE1 Jam Count","","S_PE[9]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_14_PE2_JAM,"MTR/BM1-14 PE-B Jam Count","","S_PE[8]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_14_PE2_JAM1,"MTR/BM1-14 PE2 Jam Count","","S_PE[8]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_15_PE_JAM,"MTR/BM1-15 PE Jam Count","","S_PE[10]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_16_PE_JAM,"MTR/BM1-16 PE Jam Count","","S_PE[11]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_17_PE_JAM,"MTR/BM1-17 PE Jam Count","","S_PE[12]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_18_PE_JAM,"MTR/BM1-18 PE Jam Count","","S_PE[13]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_19_PE1_JAM,"MTR/BM1-19 PE-A Jam Count","","S_PE[14]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_19_PE1_JAM1,"MTR/BM1-19 PE1 Jam Count","","S_PE[14]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_19_PE2_OH,"MTR/BM1-19 PE-B Overheight Count","","S_OH[1]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_19_PE3_OH,"MTR/BM1-19 PE3 Overheight Count","","S_OH[1]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_20_PE_JAM,"MTR/BM1-20 PE Jam Count","","S_PE[15]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_21_PE_JAM,"MTR/BM1-21 PE Jam Count","","S_PE[16]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_22_PE_JAM,"MTR/BM1-22 PE Jam Count","","S_PE[17]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_23_PE1_JAM,"MTR/BM1-23 PE-A Jam Count","","S_PE[20]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_23_PE1_JAM1,"MTR/BM1-23 PE1 Jam Count","","S_PE[20]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_23_PE2_JAM,"MTR/BM1-23 PE-B Jam Count","","S_PE[19]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_23_PE2_JAM1,"MTR/BM1-23 PE2 Jam Count","","S_PE[19]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_23_PE3_JAM,"MTR/BM1-23 PE-C Jam Count","","S_PE[18]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_23_PE3_JAM1,"MTR/BM1-23 PE3 Jam Count","","S_PE[18]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_24_PE_JAM,"MTR/BM1-24 PE Jam Count","","S_PE[21]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_25_PE_JAM,"MTR/BM1-25 PE Jam Count","","S_PE[22]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_26_PE_JAM,"MTR/BM1-26 PE Jam Count","","S_PE[23]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_26_THRU,"MTR/BM1-26 Throughput Count","","S_THRU[7]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,S_BM1_27_PE1_JAM,"MTR/BM1-27 PE-A Jam Count","","S_PE[25]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_27_PE1_JAM1,"MTR/BM1-27 PE1 Jam Count","","S_PE[25]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_27_PE2_JAM,"MTR/BM1-27 PE-B Jam Count","","S_PE[24]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_27_PE2_JAM1,"MTR/BM1-27 PE2 Jam Count","","S_PE[24]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_28_PE1_JAM,"MTR/BM1-28 PE-A Jam Count","","S_PE[27]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_28_PE1_JAM1,"MTR/BM1-28 PE1 Jam Count","","S_PE[27]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_28_PE2_JAM,"MTR/BM1-28 PE-B Jam Count","","S_PE[26]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_28_PE2_JAM1,"MTR/BM1-28 PE2 Jam Count","","S_PE[26]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_29_PE1_JAM,"MTR/BM1-29 PE-A Jam Count","","S_PE[29]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_29_PE1_JAM1,"MTR/BM1-29 PE1 Jam Count","","S_PE[29]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_29_PE2_JAM,"MTR/BM1-29 PE-B Jam Count","","S_PE[28]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_29_PE2_JAM1,"MTR/BM1-29 PE2 Jam Count","","S_PE[28]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_30_PE1_JAM,"MTR/BM1-30 PE-A Jam Count","","S_PE[31]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_30_PE1_JAM1,"MTR/BM1-30 PE1 Jam Count","","S_PE[31]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_30_PE2_OH,"MTR/BM1-30 PE-B Overheight Count","","S_OH[2]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_30_PE3_JAM,"MTR/BM1-30 PE-C Jam Count","","S_PE[30]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_30_PE3_JAM1,"MTR/BM1-30 PE3 Jam Count","","S_PE[30]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_30_PE3_OH,"MTR/BM1-30 PE3 Overheight Count","","S_OH[2]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_31_PE_JAM,"MTR/BM1-31 PE Jam Count","","S_PE[32]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_32_PE_JAM,"MTR/BM1-32 PE Jam Count","","S_PE[33]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_33_PE_JAM,"MTR/BM1-33 PE Jam Count","","S_PE[34]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_34_PE_JAM,"MTR/BM1-34 PE Jam Count","","S_PE[35]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_35_PE_JAM,"MTR/BM1-35 PE Jam Count","","S_PE[36]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_36_PE_JAM,"MTR/BM1-36 PE Jam Count","","S_PE[37]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_37_PE_JAM,"MTR/BM1-37 PE Jam Count","","S_PE[38]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_BM1_38_PE_JAM,"MTR/BM1-38 PE Jam Count","","S_PE[39]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_C2T_12_PE_JAM,"MTR/C2T-12 PE Jam Count","","S_PE[60]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_C2T_13_PE_JAM,"MTR/C2T-13 PE Jam Count","","S_PE[59]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_C2T_14_PE_JAM,"MTR/C2T-14 PE Jam Count","","S_PE[58]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_C2T_15_PE_JAM,"MTR/C2T-15 PE Jam Count","","S_PE[57]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_C2T_16_PE_JAM,"MTR/C2T-16 PE Jam Count","","S_PE[56]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_C2T_17_PE_JAM,"MTR/C2T-17 PE Jam Count","","S_PE[55]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL12T_35_PE_JAM,"MTR/CL12T-35 PE Jam Count","","S_PE[142]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL12T_36_PE_JAM,"MTR/CL12T-36 PE Jam Count","","S_PE[141]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL12T_36_THRU,"MTR/CL12T-36 Throughput Count","","S_THRU[9]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,S_CL1T_01_PE_JAM,"MTR/CL1T-01 PE Jam Count","","S_PE[124]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_02_PE_JAM,"MTR/CL1T-02 PE Jam Count","","S_PE[123]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_03_PE_JAM,"MTR/CL1T-03 PE Jam Count","","S_PE[122]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_03_THRU,"MTR/CL1T-03 Throughput Count","","S_THRU[1]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,S_CL1T_04_PE_JAM,"MTR/CL1T-04 PE Jam Count","","S_PE[121]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_05_PE_JAM,"MTR/CL1T-05 PE Jam Count","","S_PE[120]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_06_PE_JAM,"MTR/CL1T-06 PE Jam Count","","S_PE[119]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_07_PE_JAM,"MTR/CL1T-07 PE Jam Count","","S_PE[118]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_08_PE_JAM,"MTR/CL1T-08 PE Jam Count","","S_PE[117]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_09_PE_JAM,"MTR/CL1T-09 PE Jam Count","","S_PE[116]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_10_PE_JAM,"MTR/CL1T-10 PE Jam Count","","S_PE[115]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_11_PE_JAM,"MTR/CL1T-11 PE Jam Count","","S_PE[114]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_12_PE_JAM,"MTR/CL1T-12 PE Jam Count","","S_PE[113]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_13_PE_JAM,"MTR/CL1T-13 PE Jam Count","","S_PE[112]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_14_PE_JAM,"MTR/CL1T-14 PE Jam Count","","S_PE[111]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_15_PE_JAM,"MTR/CL1T-15 PE Jam Count","","S_PE[110]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_16_PE_JAM,"MTR/CL1T-16 PE Jam Count","","S_PE[109]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_17_PE_JAM,"MTR/CL1T-17 PE Jam Count","","S_PE[108]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_18_PE_JAM,"MTR/CL1T-18 PE Jam Count","","S_PE[107]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_19_PE_JAM,"MTR/CL1T-19 PE Jam Count","","S_PE[106]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_20_PE_JAM,"MTR/CL1T-20 PE Jam Count","","S_PE[105]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_21_PE_JAM,"MTR/CL1T-21 PE Jam Count","","S_PE[104]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_23_PE_JAM,"MTR/CL1T-23 PE Jam Count","","S_PE[103]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_24_PE_JAM,"MTR/CL1T-24 PE Jam Count","","S_PE[102]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_26_PE1_JAM,"MTR/CL1T-26 PE-A Jam Count","","S_PE[97]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_26_PE1_JAM1,"MTR/CL1T-26 PE1 Jam Count","","S_PE[100]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_26_PE2_JAM,"MTR/CL1T-26 PE-B Jam Count","","S_PE[98]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL1T_26_PE2_JAM1,"MTR/CL1T-26 PE2 Jam Count","","S_PE[101]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL2T_01_PE_JAM,"MTR/CL2T-01 PE Jam Count","","S_PE[69]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL2T_02_PE_JAM,"MTR/CL2T-02 PE Jam Count","","S_PE[68]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL2T_03_PE_JAM,"MTR/CL2T-03 PE Jam Count","","S_PE[67]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL2T_03_THRU,"MTR/CL2T-03 Throughput Count","","S_THRU[2]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,S_CL2T_04_PE_JAM,"MTR/CL2T-04 PE Jam Count","","S_PE[66]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL2T_05_PE_JAM,"MTR/CL2T-05 PE Jam Count","","S_PE[65]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL2T_06_PE_JAM,"MTR/CL2T-06 PE Jam Count","","S_PE[64]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL2T_07_PE_JAM,"MTR/CL2T-07 PE Jam Count","","S_PE[63]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL2T_08_PE_JAM,"MTR/CL2T-08 PE Jam Count","","S_PE[62]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL2T_09_PE_JAM,"MTR/CL2T-09 PE Jam Count","","S_PE[61]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL3T_01_PE_JAM,"MTR/CL3T-01 PE Jam Count","","S_PE[77]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL3T_02_PE_JAM,"MTR/CL3T-02 PE Jam Count","","S_PE[76]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL3T_03_PE_JAM,"MTR/CL3T-03 PE Jam Count","","S_PE[75]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL3T_03_THRU,"MTR/CL3T-03 Throughput Count","","S_THRU[3]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,S_CL3T_04_PE_JAM,"MTR/CL3T-04 PE Jam Count","","S_PE[74]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL3T_05_PE_JAM,"MTR/CL3T-05 PE Jam Count","","S_PE[73]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL3T_06_PE_JAM,"MTR/CL3T-06 PE Jam Count","","S_PE[72]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL3T_07_PE_JAM,"MTR/CL3T-07 PE Jam Count","","S_PE[71]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_CL3T_08_PE_JAM,"MTR/CL3T-08 PE Jam Count","","S_PE[70]","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,S_CTX,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,S_ETD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,S_HCD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,S_HSD,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,S_HX1T_06_PE_JAM,"MTR/HX1T-06 PE Jam Count","","S_PE[129]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_HX1T_07_PE_JAM,"MTR/HX1T-07 PE Jam Count","","S_PE[128]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_HX1T_08_PE_JAM,"MTR/HX1T-08 PE Jam Count","","S_PE[127]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_HX1T_09_PE_JAM,"MTR/HX1T-09 PE Jam Count","","S_PE[126]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_HX1T_10A_PE_JAM,"MTR/HX1T-10A PE Jam Count","","S_PE[99]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_HX1T_10_PE_JAM,"MTR/HX1T-10 PE Jam Count","","S_PE[125]","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,S_L3,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,S_MISC,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,S_MVI,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,S_O2T_04_PE_JAM,"MTR/O2T-04 PE Jam Count","","S_PE[54]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_05_PE_JAM,"MTR/O2T-05 PE Jam Count","","S_PE[53]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_06_PE_JAM,"MTR/O2T-06 PE Jam Count","","S_PE[52]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_07_PE_JAM,"MTR/O2T-07 PE Jam Count","","S_PE[51]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_08_PE_JAM,"MTR/O2T-08 PE Jam Count","","S_PE[50]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_09_PE_JAM,"MTR/O2T-09 PE Jam Count","","S_PE[49]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_10_PE_JAM,"MTR/O2T-10 PE Jam Count","","S_PE[48]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_11_PE_JAM,"MTR/O2T-11 PE Jam Count","","S_PE[47]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_12_PE_JAM,"MTR/O2T-12 PE Jam Count","","S_PE[46]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_13_PE_JAM,"MTR/O2T-13 PE Jam Count","","S_PE[45]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_14_PE_JAM,"MTR/O2T-14 PE Jam Count","","S_PE[44]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_14_THRU,"MTR/O2T-14 Throughput Count","","S_THRU[0]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,S_O2T_15_PE_JAM,"MTR/O2T-15 PE Jam Count","","S_PE[43]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_16_PE_JAM,"MTR/O2T-16 PE Jam Count","","S_PE[42]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_17_PE_JAM,"MTR/O2T-17 PE Jam Count","","S_PE[41]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O2T_18_PE_JAM,"MTR/O2T-18 PE Jam Count","","S_PE[40]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O3T_17_PE_JAM,"MTR/O3T-17 PE Jam Count","","S_PE[140]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O3T_18_PE_JAM,"MTR/O3T-18 PE Jam Count","","S_PE[139]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O3T_19_PE_JAM,"MTR/O3T-19 PE Jam Count","","S_PE[138]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O3T_20_PE_JAM,"MTR/O3T-20 PE Jam Count","","S_PE[137]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_05_PE_JAM,"MTR/O4T-05 PE Jam Count","","S_PE[87]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_06_PE_JAM,"MTR/O4T-06 PE Jam Count","","S_PE[86]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_07_PE_JAM,"MTR/O4T-07 PE Jam Count","","S_PE[85]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_08_PE_JAM,"MTR/O4T-08 PE Jam Count","","S_PE[84]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_09_PE_JAM,"MTR/O4T-09 PE Jam Count","","S_PE[83]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_10_PE1_JAM,"MTR/O4T-10 PE-A Jam Count","","S_PE[78]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_10_PE1_JAM1,"MTR/O4T-10 PE1 Jam Count","","S_PE[81]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_10_PE2_JAM,"MTR/O4T-10 PE-B Jam Count","","S_PE[79]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_10_PE2_JAM1,"MTR/O4T-10 PE2 Jam Count","","S_PE[82]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_11_PE_JAM,"MTR/O4T-11 PE Jam Count","","S_PE[80]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_12_PE_JAM,"MTR/O4T-12 PE Jam Count","","S_PE[79]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_13_PE_JAM,"MTR/O4T-13 PE Jam Count","","S_PE[78]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_13_THRU,"MTR/O4T-13 Throughput Count","","S_THRU[4]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,S_O4T_16_PE_JAM,"MTR/O4T-16 PE Jam Count","","S_PE[136]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_17_PE_JAM,"MTR/O4T-17 PE Jam Count","","S_PE[135]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_18_PE_JAM,"MTR/O4T-18 PE Jam Count","","S_PE[134]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_19_PE_JAM,"MTR/O4T-19 PE Jam Count","","S_PE[133]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_20_PE_JAM,"MTR/O4T-20 PE Jam Count","","S_PE[132]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_21_PE_JAM,"MTR/O4T-21 PE Jam Count","","S_PE[131]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_O4T_22_PE_JAM,"MTR/O4T-22 PE Jam Count","","S_PE[130]","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,S_OH,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,S_OL,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,S_P,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,S_PE,"HMI Base Tag Array","DINT[144]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,S_PLC,"HMI Base Tag Array","DINT[11]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,S_PLC_101_CNTRL_FAULT_CODE,"CNTRL/PLC-101 Controller Fault Code","","S_PLC[5]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_PLC_101_CNTRL_FAULT_TYPE,"CNTRL/PLC-101 Controller Fault Type","","S_PLC[4]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_PLC_101_LAST_SCAN,"CNTRL/PLC-101 Last Scan Time","","S_PLC[1]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_PLC_101_MAX_SCAN,"CNTRL/PLC-101 Max Scan Time","","S_PLC[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_PLC_101_MEM_FREE,"CNTRL/PLC-101 Memory Free","","S_PLC[8]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_PLC_101_MEM_TOT,"CNTRL/PLC-101 Total Memory","","S_PLC[7]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_PLC_101_MEM_USED,"CNTRL/PLC-101 Memory Used","","S_PLC[9]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_PLC_101_PRG_FAULT_CODE,"CNTRL/PLC-101 Program Fault Code","","S_PLC[3]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_PLC_101_PRG_FAULT_TYPE,"CNTRL/PLC-101 Program Fault Type","","S_PLC[2]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_PLC_101_SW_VER,"CNTRL/PLC-101 Software Version","","S_PLC[6]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_T5T_08_PE_JAM,"MTR/T5T-08 PE Jam Count","","S_PE[93]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_T5T_09_PE_JAM,"MTR/T5T-09 PE Jam Count","","S_PE[92]","(RADIX := Decimal, ExternalAccess := Read Only)"
TAG,,S_THRU,"","DINT[20]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,S_VS,"HMI Base Tag Array","DINT[10]","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
ALIAS,,S_XO1_01_HSD_CYCLS,"HSD/XO1-01 Cycle Count","","S_HSD[6]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_01_HSD_FLTS,"HSD/XO1-01 Faults Count","","S_HSD[4]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_01_HSD_LINE_FLTS,"HSD/XO1-01 Line Faults","","S_HSD[5]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_01_HSD_VERIFIED_DIV,"HSD/XO1-01 Verified Divert","","S_HSD[7]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_01_PE1_JAM,"MTR/XO1-01 PE-A Jam Count","","S_PE[87]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_01_PE1_JAM1,"MTR/XO1-01 PE1 Jam Count","","S_PE[90]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_01_PE2_JAM,"MTR/XO1-01 PE-B Jam Count","","S_PE[88]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_01_PE2_JAM1,"MTR/XO1-01 PE2 Jam Count","","S_PE[91]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_01_PE_JAM,"MTR/XO1-01 PE Jam Count","","S_PE[87]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_02_PE_JAM,"MTR/XO1-02 PE Jam Count","","S_PE[89]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_03_PE_JAM,"MTR/XO1-03 PE Jam Count","","S_PE[88]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_03_THRU,"MTR/XO1-03 Throughput Count","","S_THRU[6]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,S_XO1_HSD_CYCLS,"HSD/XO1- Cycle Count","","S_HSD[6]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_HSD_FLTS,"HSD/XO1- Faults Count","","S_HSD[4]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_HSD_LINE_FLTS,"HSD/XO1- Line Faults","","S_HSD[5]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO1_HSD_VERIFIED_DIV,"HSD/XO1- Verified Divert","","S_HSD[7]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_01_HSD_CYCLS,"HSD/XO2-01 Cycle Count","","S_HSD[2]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_01_HSD_FLTS,"HSD/XO2-01 Faults Count","","S_HSD[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_01_HSD_LINE_FLTS,"HSD/XO2-01 Line Faults","","S_HSD[1]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_01_HSD_VERIFIED_DIV,"HSD/XO2-01 Verified Divert","","S_HSD[3]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_01_PE_JAM,"MTR/XO2-01 PE Jam Count","","S_PE[98]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_02_PE_JAM,"MTR/XO2-02 PE Jam Count","","S_PE[97]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_03_PE_JAM,"MTR/XO2-03 PE Jam Count","","S_PE[96]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_04_PE_JAM,"MTR/XO2-04 PE Jam Count","","S_PE[95]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_05_PE_JAM,"MTR/XO2-05 PE Jam Count","","S_PE[94]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_05_THRU,"MTR/XO2-05 Throughput Count","","S_THRU[5]","(RADIX := Decimal, ExternalAccess := Read/Write)"
ALIAS,,S_XO2_HSD_CYCLS,"HSD/XO2- Cycle Count","","S_HSD[2]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_HSD_FLTS,"HSD/XO2- Faults Count","","S_HSD[0]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_HSD_LINE_FLTS,"HSD/XO2- Line Faults","","S_HSD[1]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,S_XO2_HSD_VERIFIED_DIV,"HSD/XO2- Verified Divert","","S_HSD[3]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,T5T,"","","SYS[8]","(ExternalAccess := Read Only)"
ALIAS,,T5T_08_BT,"","","BTP[12]","(ExternalAccess := Read Only)"
ALIAS,,T5T_08_BTx,"","","BTx[12]","(ExternalAccess := Read Only)"
ALIAS,,T5T_08_LEN,"","","LEN[3]","(ExternalAccess := Read Only)"
ALIAS,,T5T_08_LENx,"","","LENx[3]","(ExternalAccess := Read Only)"
ALIAS,,T5T_08_MTR,"","","MTR[86]","(ExternalAccess := Read Only)"
ALIAS,,T5T_08_MTRx,"","","MTRx[86]","(ExternalAccess := Read Only)"
ALIAS,,T5T_08_PE,"","","PE[93]","(ExternalAccess := Read Only)"
ALIAS,,T5T_08_VFD,"","","VFD[86]","(ExternalAccess := Read Only)"
ALIAS,,T5T_09_BT,"","","BTP[13]","(ExternalAccess := Read Only)"
ALIAS,,T5T_09_BTx,"","","BTx[13]","(ExternalAccess := Read Only)"
ALIAS,,T5T_09_EPB_ONS,"","","EPB_ONS[70]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,T5T_09_MRG,"","","MRG[3]","(ExternalAccess := Read Only)"
ALIAS,,T5T_09_MRGx,"","","MRGx[3]","(ExternalAccess := Read Only)"
ALIAS,,T5T_09_MTR,"","","MTR[85]","(ExternalAccess := Read Only)"
ALIAS,,T5T_09_MTRx,"","","MTRx[85]","(ExternalAccess := Read Only)"
ALIAS,,T5T_09_PE,"","","PE[92]","(ExternalAccess := Read Only)"
ALIAS,,T5T_09_VFD,"","","VFD[85]","(ExternalAccess := Read Only)"
ALIAS,,T5_10ZZ_MTRx,"","","MTRx[142]","(ExternalAccess := Read Only)"
TAG,,VFD,"","VFD[150]","","(Constant := false, ExternalAccess := Read Only)"
ALIAS,,X02_02_EPB_ONS,"","","EPB_ONS[70]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,X02_05_EPB_ONS,"","","EPB_ONS[71]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,XO1,"","","SYS[15]","(ExternalAccess := Read Only)"
ALIAS,,XO1_01_EPB_ONS,"","","EPB_ONS[69]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,XO1_01_MTR,"","","MTR[84]","(ExternalAccess := Read Only)"
ALIAS,,XO1_01_MTRx,"","","MTRx[84]","(ExternalAccess := Read Only)"
ALIAS,,XO1_01_PE,"","","PE[90]","(ExternalAccess := Read Only)"
ALIAS,,XO1_01_PE1,"","","PE[90]","(ExternalAccess := Read Only)"
ALIAS,,XO1_01_PE2,"","","PE[91]","(ExternalAccess := Read Only)"
ALIAS,,XO1_01_VFD,"","","VFD[84]","(ExternalAccess := Read Only)"
ALIAS,,XO1_02_MTR,"","","MTR[83]","(ExternalAccess := Read Only)"
ALIAS,,XO1_02_MTRx,"","","MTRx[83]","(ExternalAccess := Read Only)"
ALIAS,,XO1_02_PE,"","","PE[89]","(ExternalAccess := Read Only)"
ALIAS,,XO1_02_VFD,"","","VFD[83]","(ExternalAccess := Read Only)"
ALIAS,,XO1_03_MTR,"","","MTR[82]","(ExternalAccess := Read Only)"
ALIAS,,XO1_03_MTRx,"","","MTRx[82]","(ExternalAccess := Read Only)"
ALIAS,,XO1_03_PE,"","","PE[88]","(ExternalAccess := Read Only)"
ALIAS,,XO1_03_VFD,"","","VFD[82]","(ExternalAccess := Read Only)"
ALIAS,,XO1_HSD,"","","DIV[1]","(ExternalAccess := Read Only)"
ALIAS,,XO1_HSDx,"","","DIVx[1]","(ExternalAccess := Read Only)"
TAG,,XO1_TD,"","Non_Tracked_Div","","(Constant := false, ExternalAccess := Read/Write)"
ALIAS,,XO2,"","","SYS[9]","(ExternalAccess := Read Only)"
ALIAS,,XO2_01_MTR,"","","MTR[91]","(ExternalAccess := Read Only)"
ALIAS,,XO2_01_MTRx,"","","MTRx[91]","(ExternalAccess := Read Only)"
ALIAS,,XO2_01_PE,"","","PE[98]","(ExternalAccess := Read Only)"
ALIAS,,XO2_01_VFD,"","","VFD[91]","(ExternalAccess := Read Only)"
ALIAS,,XO2_02_EPB_ONS,"","","EPB_ONS[71]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,XO2_02_MTR,"","","MTR[90]","(ExternalAccess := Read Only)"
ALIAS,,XO2_02_MTRx,"","","MTRx[90]","(ExternalAccess := Read Only)"
ALIAS,,XO2_02_PE,"","","PE[97]","(ExternalAccess := Read Only)"
ALIAS,,XO2_02_VFD,"","","VFD[90]","(ExternalAccess := Read Only)"
ALIAS,,XO2_03_MTR,"","","MTR[89]","(ExternalAccess := Read Only)"
ALIAS,,XO2_03_MTRx,"","","MTRx[89]","(ExternalAccess := Read Only)"
ALIAS,,XO2_03_PE,"","","PE[96]","(ExternalAccess := Read Only)"
ALIAS,,XO2_03_VFD,"","","VFD[89]","(ExternalAccess := Read Only)"
ALIAS,,XO2_04_BT,"","","BTP[15]","(ExternalAccess := Read Only)"
ALIAS,,XO2_04_BTx,"","","BTx[15]","(ExternalAccess := Read Only)"
ALIAS,,XO2_04_LEN,"","","LEN[4]","(ExternalAccess := Read Only)"
ALIAS,,XO2_04_LENx,"","","LENx[4]","(ExternalAccess := Read Only)"
ALIAS,,XO2_04_MTR,"","","MTR[88]","(ExternalAccess := Read Only)"
ALIAS,,XO2_04_MTRx,"","","MTRx[88]","(ExternalAccess := Read Only)"
ALIAS,,XO2_04_PE,"","","PE[95]","(ExternalAccess := Read Only)"
ALIAS,,XO2_04_VFD,"","","VFD[88]","(ExternalAccess := Read Only)"
ALIAS,,XO2_05_BT,"","","BTP[14]","(ExternalAccess := Read Only)"
ALIAS,,XO2_05_BTx,"","","BTx[14]","(ExternalAccess := Read Only)"
ALIAS,,XO2_05_EPB_ONS,"","","EPB_ONS[72]","(RADIX := Decimal, ExternalAccess := Read Only)"
ALIAS,,XO2_05_MRG,"","","MRG[4]","(ExternalAccess := Read Only)"
ALIAS,,XO2_05_MRGx,"","","MRGx[4]","(ExternalAccess := Read Only)"
ALIAS,,XO2_05_MTR,"","","MTR[87]","(ExternalAccess := Read Only)"
ALIAS,,XO2_05_MTRx,"","","MTRx[87]","(ExternalAccess := Read Only)"
ALIAS,,XO2_05_PE,"","","PE[94]","(ExternalAccess := Read Only)"
ALIAS,,XO2_05_VFD,"","","VFD[87]","(ExternalAccess := Read Only)"
ALIAS,,XO2_HSD,"","","DIV[0]","(ExternalAccess := Read Only)"
ALIAS,,XO2_HSDx,"","","DIVx[0]","(ExternalAccess := Read Only)"
TAG,,XO2_TD,"","Non_Tracked_Div","","(Constant := false, ExternalAccess := Read/Write)"
TAG,,zzzO_CS1_BM1_17_LTW,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,zzzO_CS1_BM1_17_spbg,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,zzz_add_pics_IO,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,zzz_Emulate,"PICS, AM, and COM Stats","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read Only)"
TAG,,zzz_Reverse_logic_needed,"BM1_13 No KSW. Needs editsBM1_13 No KSW. Needs edits","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,,MESSAGE_TO_UL,"","MESSAGE","","(ExternalAccess := Read Only, MessageType := CIP Data Table Write, RemoteElement := ""PLC_TO_SMH"", RequestedLength := 10, ConnectedFlag := 1, CommTypeCode := 0, LocalIndex := 0, LocalElement := ""MSG_TO_UL[0]"", CacheConnections := ""TRUE"")"
TAG,,PLC_101_MEM_MSG,"","MESSAGE","","(ExternalAccess := Read Only, MessageType := CIP Generic, RequestedLength := 1, ConnectedFlag := 2, ConnectionPath := ""1, 0"", CommTypeCode := 0, ServiceCode := 16#0003, ObjectType := 16#0072, TargetObject := 1, AttributeNumber := 16#0000, LocalIndex := 0, LocalElement := ""PLC_MEM_MSG_SRC[0]"", DestinationTag := ""PLC_MEM_MSG_DEST[0]"", LargePacketUsage := false)"
TYPE,SCOPE,NAME,DESCRIPTION,DATATYPE,SPECIFIER,ATTRIBUTES
TAG,MainProgram,zzC4_09_PE_POS_XITN,"no c4_09, only c4_08","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzI_PE_C4_09,"no c4_09, only c4_08","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzI_PE_O4_04,"no O4_04, only O4_03","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzO4_04_PE_POS_XITN,"no O4_04, only O4_03","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzC4_09zz_MTR_IM_ONS,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzC4_09zz_MTR_ON_TMR_DN,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzCS_CL12T_36_LTA_FLASH,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzCS_CL3T_03_LTA_FLASH,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzF_BM1_13_JOG_REVERSE,"Merge jog reverse fault. Needs to be created and sent to HMi team","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzF_CL3T_03_CS_E_STOP,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzF_CL3T_03_CS_E_STOP_RESET,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzHX1_10ZZ_MTR_IM_ONS,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzHX1_10ZZ_MTR_ON_TMR_DN,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzHX_zz_MTR_IM_ONS,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzHX_zz_MTR_ON_TMR_DN,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzO4T_23ZZ_MTR_IM_ONS,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzO4T_23ZZ_MTR_ON_TMR_DN,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzO4_04zz_MTR_IM_ONS,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzO4_04zz_MTR_ON_TMR_DN,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzO4_06ZZ_MTR_IM_ONS,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzO4_06ZZ_MTR_ON_TMR_DN,"","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzT5_10ZZ_MTR_IM_ONS,"zzz hold bit for IM ons","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TAG,MainProgram,zzzT5_10ZZ_MTR_ON_TMR_DN,"zzz hold for actual timer later","BOOL","","(RADIX := Decimal, Constant := false, ExternalAccess := Read/Write)"
TYPE,SCOPE,ROUTINE,COMMENT,OWNING_ELEMENT,LOCATION
RCOMMENT,"Controller_Fault_Handler","Controller_Fault_Handler","****************************************************************************************************$NThis routine is the Controller Fault Handler. $NIf a major Controller Fault occurs, this routine will be called before the controller halts.$NThis routine essentially just captures the fault codes for display on the HMI, and turns on an HMI alarm.$N****************************************************************************************************$N","GSV(Program,THIS,MAJORFAULTRECORD,LAST_MAJOR_FAULT.Time_Low)","0"
RCOMMENT,"Controller_Fault_Handler","Controller_Fault_Handler","Turn on an HMI alarm and copy the fault code and fault type to HMI display tags.","MOV(LAST_MAJOR_FAULT.Code,S_PLC_101_CNTRL_FAULT_CODE)","1"
TYPE,SCOPE,ROUTINE,COMMENT,OWNING_ELEMENT,LOCATION
RCOMMENT,"MainProgram","AA_Master_Resets","***********************************$N***********************************$NReset Faults in the system.$N***********************************$N***********************************$N","NOP()","0"
RCOMMENT,"MainProgram","AA_Master_Resets","Reset Group Run Latches","NOP()","1"
RCOMMENT,"MainProgram","AA_Master_Resets","Reset BT Faults","NOP()","18"
RCOMMENT,"MainProgram","AA_Master_Resets","Reset Jams","NOP()","42"
RCOMMENT,"MainProgram","AA_Master_Resets","Reset Diverter Faults","NOP()","44"
RCOMMENT,"MainProgram","AA_Master_Resets","Reset DOOR Faults","NOP()","47"
RCOMMENT,"MainProgram","AA_Master_Resets","Reset Motors","NOP()","48"
RCOMMENT,"MainProgram","AM_COM_STATUS","****************************************************************************************************$NThis routine replaces the regular COM STATUS routine for automod testing.$N**********************************************************************************************$NTHIS ROUTINE SHOULD BE DELETED PRIORT TO INSTALLING ON SITE.$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","AM_COM_STATUS","***********************************$NCard CC01_RK01_S02$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(CC01_RK1_S02_STATUS.Fault)","1"
RCOMMENT,"MainProgram","AM_COM_STATUS","Filter timer is immediate on, filtered off.","TOF(CC01_RK1_S02_STATUS.FltFilter_Tmr,?,?)","3"
RCOMMENT,"MainProgram","AM_COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_CC01_RK01_S02_COMM)","4"
RCOMMENT,"MainProgram","AM_COM_STATUS","***********************************$NCard MCP_BM1_RK01_S16$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_BM1_RK1_S16_STATUS.Fault)","5"
RCOMMENT,"MainProgram","AM_COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_BM1_RK1_S16_STATUS.FltFilter_Tmr,?,?)","7"
RCOMMENT,"MainProgram","AM_COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_BM1_RK01_S16_COMM)","8"
RCOMMENT,"MainProgram","AM_COM_STATUS","***********************************$NCard MCP_BM1_RK02_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_BM1_RK2_S0_STATUS.Fault)","9"
RCOMMENT,"MainProgram","AM_COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_BM1_RK2_S0_STATUS.FltFilter_Tmr,?,?)","11"
RCOMMENT,"MainProgram","AM_COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_BM1_RK02_S00_COMM)","12"
RCOMMENT,"MainProgram","AM_COM_STATUS","***********************************$NCard MCP_01_RK01_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_01_RK1_S0_STATUS.Fault)","13"
RCOMMENT,"MainProgram","AM_COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_01_RK1_S0_STATUS.FltFilter_Tmr,?,?)","15"
RCOMMENT,"MainProgram","AM_COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_01_RK01_S00_COMM)","16"
RCOMMENT,"MainProgram","AM_COM_STATUS","***********************************$NCard MCP_01_RK02_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_01_RK2_S0_STATUS.Fault)","17"
RCOMMENT,"MainProgram","AM_COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_01_RK2_S0_STATUS.FltFilter_Tmr,?,?)","19"
RCOMMENT,"MainProgram","AM_COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_01_RK02_S00_COMM)","20"
RCOMMENT,"MainProgram","AM_COM_STATUS","***********************************$NCard MCP_02_RK01_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_02_RK1_S0_STATUS.Fault)","21"
RCOMMENT,"MainProgram","AM_COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_02_RK1_S0_STATUS.FltFilter_Tmr,?,?)","23"
RCOMMENT,"MainProgram","AM_COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_02_RK01_S00_COMM)","24"
RCOMMENT,"MainProgram","AM_COM_STATUS","***********************************$NCard MCP_02_RK02_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_02_RK2_S0_STATUS.Fault)","25"
RCOMMENT,"MainProgram","AM_COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_02_RK2_S0_STATUS.FltFilter_Tmr,?,?)","27"
RCOMMENT,"MainProgram","AM_COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_02_RK02_S00_COMM)","28"
RCOMMENT,"MainProgram","AM_COM_STATUS","***********************************$NCard MCP_03_RK01_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_03_RK1_S0_STATUS.Fault)","29"
RCOMMENT,"MainProgram","AM_COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_03_RK1_S0_STATUS.FltFilter_Tmr,?,?)","31"
RCOMMENT,"MainProgram","AM_COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_03_RK01_S00_COMM)","32"
RCOMMENT,"MainProgram","AM_COM_STATUS","***********************************$NCard MCP_03_RK02_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_03_RK2_S0_STATUS.Fault)","33"
RCOMMENT,"MainProgram","AM_COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_03_RK2_S0_STATUS.FltFilter_Tmr,?,?)","35"
RCOMMENT,"MainProgram","AM_COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_03_RK02_S00_COMM)","36"
RCOMMENT,"MainProgram","AM_COM_STATUS","***********************************$NCard MCP_16_RK01_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_16_RK1_S0_STATUS.Fault)","37"
RCOMMENT,"MainProgram","AM_COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_16_RK1_S0_STATUS.FltFilter_Tmr,?,?)","39"
RCOMMENT,"MainProgram","AM_COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_16_RK01_S00_COMM)","40"
RCOMMENT,"MainProgram","AM_COM_STATUS","***********************************$NCard MCP_16_RK02_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_16_RK2_S0_STATUS.Fault)","41"
RCOMMENT,"MainProgram","AM_COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_16_RK2_S0_STATUS.FltFilter_Tmr,?,?)","43"
RCOMMENT,"MainProgram","AM_COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_16_RK02_S00_COMM)","44"
RCOMMENT,"MainProgram","BM1_13_MRG","Merge Routine - Fixed Gap size$N*********************************************$N$NThis rung will fill the mainline bit shift register with a 1 when the merge inhibit photoeye is blocked.","OTL(BM1_13_MRG.MainLineBS[1].15)","0"
RCOMMENT,"MainProgram","BM1_13_MRG","For each mainline belt tach pulse do the following:$NBit shift right the mainline bit shift register$NIncrement the leading gap counter accumulator","ADD(1,BM1_13_MRG.Lead_Gap_Acc,BM1_13_MRG.Lead_Gap_Acc)","1"
RCOMMENT,"MainProgram","BM1_13_MRG","This rung will add the distance the bag on the merge has coasted to the required minimum leading gap.$NThe variable $Q_MRGx.Lead_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged behind.","ADD(BM1_13_MRG.BagPastPE,BM1_13_MRGx.Lead_Gap,BM1_13_MRG.Lead_Gap)","2"
RCOMMENT,"MainProgram","BM1_13_MRG","As the BSR is unloading ones from the mainline bit shift register at element zero bit zero clear the leading gap counter accumulator.$NThis insures the leading gap counter only increments based on the tail of the mainline bag.","CLR(BM1_13_MRG.Lead_Gap_Acc)","3"
RCOMMENT,"MainProgram","BM1_13_MRG","Once the leading gap counter has accumulated to the leading gap constant the merge behind condition has been met.","OTE(BM1_13_MRG.Lead_Gap_DN)","4"
RCOMMENT,"MainProgram","BM1_13_MRG","Sync Run logic for non tracked merges.$NThis allows the merge to restart when the mainline stops and a bag is mid merge","RES(BM1_13_MRG.SyncRunTmr)","5"
RCOMMENT,"MainProgram","BM1_13_MRG","On the positive transition of the photoeye seal, populate the merge line bit shift registers.$NThe merge line bit shift registers are compared to the mainline bit shift registers to see if a bag can merge without crashing into another bag.$NThe variable $Q_MRGx.Trail_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged ahead of.$NThe variable $Q_MRGx.MinLength$Q is used when the merging bag does not have its length defined.  In such a case, you must assume the bag is the max size the system is designed to handle.$NIf the bag does have its length defined, the bag$'s length is added to $Q_MRGx.Trail_Gap$Q to define the value populated into the merge line shift register.$NThe variable $Q_MRGx.MaxLength$Q represents the number of the highest element in the $QMrgLenMask$Q arrays.  If the bag length + gap ends up greater than $Q_MRGx.MaxLength$Q, then $Q_MRGx.MaxLength$Q is used.","CLR(BM1_13_MRG.BagPastPE)","8"
RCOMMENT,"MainProgram","BM1_13_MRG","Shift the merge line bit shift one position for each pulse detected after the photoeye seal has been on but the bag is not merging as detected by the merge seal.$NThis will adjust the merge line bit shift register for any coasting of the merge conveyor.","ADD(1,BM1_13_MRG.BagPastPE,BM1_13_MRG.BagPastPE)","9"
RCOMMENT,"MainProgram","BM1_13_MRG","This rung compares the mainline bit shift registers to the merge line bit shift registers.$NIf the mainline bit shift register has ones in the merge line bit shift register it will be passed through to the interference array.","AND(BM1_13_MRG.MainLineBS[2],BM1_13_MRG.MrgLineBS[2],BM1_13_MRG.Intrfr[2])","10"
RCOMMENT,"MainProgram","BM1_13_MRG","If the interference arrays are empty then the merge ahead conditions have been met.$NIf the leading gap accumulator is done then the merge behind conditions have been met.$NSet the merge ok bit and generate a positive transition when the mainline is clear for a bag to merge in.","OTE(BM1_13_MRG.MrgOK)","11"
RCOMMENT,"MainProgram","BM1_13_MRG","If there are no faults on the merge conveyor, the photoeye seal is set and the merge ok bit is on then seal on the merge seal bit.$NThe merge seal bit is used in the motor logic to turn on the merge conveyor.","OTU(BM1_13_MRG.Hold_Align)","12"
RCOMMENT,"MainProgram","BM1_13_MRG","Priority logic below$N***********************************************************$N$NAccumulate the Mainline priority timer if a bag is waiting on the merge and the mainline is running","RTO(BM1_13_MRG.MLPriorityTmr,?,?)","13"
RCOMMENT,"MainProgram","BM1_13_MRG","Turn on the Priority stop bit when a bag has been waiting on the merge for the time the priority timer has been set to","OTE(BM1_13_MRG.PriorityStop)","14"
RCOMMENT,"MainProgram","BM1_13_MRG","Accumulate the Merge line priority timer while in priority stop mode and the merge is actively merging bags onto the mainline","RTO(BM1_13_MRG.MrgLPriorityTmr,?,?)","15"
RCOMMENT,"MainProgram","BM1_13_MRG","Reset the Merge line priority timer if a bag merges from the merge before entering priority mode","RES(BM1_13_MRG.MLPriorityTmr)","16"
RCOMMENT,"MainProgram","BM1_13_MRG","Reset priority timers if there is no bag flow on the merge for X amount of time","RES(BM1_13_MRG.MrgLPriorityTmr)","17"
RCOMMENT,"MainProgram","BM1_13_MRG","Reset priority timers once the merge line has had priority for the preset time","RES(BM1_13_MRG.MLPriorityTmr)","18"
RCOMMENT,"MainProgram","BM1_13_MRG","Detect active bag flow on the merge","TON(BM1_13_MRG.MrgLBagflow,?,?)","19"
RCOMMENT,"MainProgram","BM1_13_MRG","Merge Run Control$N*************************************************$N$NReset the merge run timer when the merge, pre merge, pre pre merge photo-eyes have been blocked, or during a system startup","RES(BM1_13_MRG.MergeRunTmr)","20"
RCOMMENT,"MainProgram","BM1_13_MRG","Run the merge conveyor for the designated merge run time","RTO(BM1_13_MRG.MergeRunTmr,?,?)","21"
RCOMMENT,"MainProgram","BM1_13_MRG","When a bag merges, send a bag Arrival message to the UL.$N","JSR(R_MSG_TO_UL_Add,0)","22"
RCOMMENT,"MainProgram","BM1_13_MRG_CAPT","Merge Distance capture routine.$NOnly call routine when setting up merge or testing merge$N*******************************************************************************$N$NClear the tail to head counter when a bag unblocks the capture photo-eye","MOV(0,BM1_13_MRG.TailHeadAcc)","0"
RCOMMENT,"MainProgram","BM1_13_MRG_CAPT","When a bag blocks the capture photo-eye, capture the current values of the: $NHead to Head count$NTail to head count.$Nand Zero the Head to Head count","MOV(0,BM1_13_MRG.HeadHeadAcc)","1"
RCOMMENT,"MainProgram","BM1_13_MRG_CAPT","For each pulse of the encoder increment the Head to Head and Tail the Head count","ADD(1,BM1_13_MRG.TailHeadAcc,BM1_13_MRG.TailHeadAcc)","2"
RCOMMENT,"MainProgram","BM1_13_MRG_CAPT","Computer the bags Head to Head distance based on the number of pulses received during the last window","CPT(BM1_13_MRG.LastBagMrgWndo,BM1_13_MRG.HeadHeadCnt*BM1_14_BTx.RES)","3"
RCOMMENT,"MainProgram","BM1_13_MRG_CAPT","Computer the Tail to head distance based on the number of pulses received during the last gap","CPT(BM1_13_MRG.LastBagGapDist,BM1_13_MRG.TailHeadCnt*BM1_14_BTx.RES)","4"
RCOMMENT,"MainProgram","BM1_A_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_A_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","BM1_A_FIELD_IND","Control Station$N$N","NOP()","5"
RCOMMENT,"MainProgram","BM1_A_FIELD_IND","Control Station$N$N","NOP()","9"
RCOMMENT,"MainProgram","BM1_A_FIELD_IND","Control Station$N$N","NOP()","13"
RCOMMENT,"MainProgram","BM1_A_FIELD_IND","Control Station$N$N","NOP()","17"
RCOMMENT,"MainProgram","BM1_A_FIELD_IND","Control Station$N$N","NOP()","24"
RCOMMENT,"MainProgram","BM1_A_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","28"
RCOMMENT,"MainProgram","BM1_A_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","31"
RCOMMENT,"MainProgram","BM1_A_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","34"
RCOMMENT,"MainProgram","BM1_A_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_13_MTR.G,G_BM1_13_STS)","1"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_12_MTR.G,G_BM1_12_STS)","2"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_11_MTR.G,G_BM1_11_STS)","3"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_10_MTR.G,G_BM1_10_STS)","4"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_09_MTR.G,G_BM1_09_STS)","5"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_08_MTR.G,G_BM1_08_STS)","6"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_07_MTR.G,G_BM1_07_STS)","7"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_06_MTR.G,G_BM1_06_STS)","8"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_05_MTR.G,G_BM1_05_STS)","9"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_04_MTR.G,G_BM1_04_STS)","10"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_03_MTR.G,G_BM1_03_STS)","11"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_02_MTR.G,G_BM1_02_STS)","12"
RCOMMENT,"MainProgram","BM1_A_GFX","Conveyor Graphic$N$N$N","MOV(BM1_01_MTR.G,G_BM1_01_STS)","13"
RCOMMENT,"MainProgram","BM1_A_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_A_JAMS","Jam Detection$N$N","RTO(BM1_06_PE2.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","BM1_A_JAMS","Jam Detection$N$N","RTO(BM1_06_PE1.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","BM1_A_JAMS","Jam Detection$N$N","RTO(BM1_07_PE.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","BM1_A_JAMS","Jam Detection$N$N","RTO(BM1_08_PE.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","BM1_A_JAMS","Jam Detection$N$N","RTO(BM1_09_PE.JAM_TMR,?,?)","13"
RCOMMENT,"MainProgram","BM1_A_JAMS","Jam Detection$N$N","RTO(BM1_10_PE.JAM_TMR,?,?)","16"
RCOMMENT,"MainProgram","BM1_A_JAMS","Jam Detection$N$N","RTO(BM1_11_PE.JAM_TMR,?,?)","19"
RCOMMENT,"MainProgram","BM1_A_JAMS","Jam Detection$N$N","RTO(BM1_12_PE.JAM_TMR,?,?)","22"
RCOMMENT,"MainProgram","BM1_A_JAMS","Jam Detection$N$N","RTO(BM1_13_PE.JAM_TMR,?,?)","25"
RCOMMENT,"MainProgram","BM1_A_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_A_MTRS","System Start Request","OTE(BM1_A.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor run expander.","OTE(BM1_A.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","BM1_A_MTRS","PE Grouping","OTE(BM1_A.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","BM1_A_MTRS","Reset Run Timer","RES(BM1_A.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","BM1_A_MTRS","Send downstream start request","OTE(BM1_A.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","BM1_A_MTRS","Run Timer","RTO(BM1_A.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","BM1_A_MTRS","Run Latch","OTE(BM1_A.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_13$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_13_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","BM1_A_MTRS","JRB Filter","OTE(BM1_13_MTR.JRB_FILT)","10"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_13_MTR.NO_FAULT)","11"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_13_MTR.IM_TMR,?,?)","12"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(BM1_13_MTR.INTL_MTR)","13"
RCOMMENT,"MainProgram","BM1_A_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_13_MTR.T2H_SPACE_TMR)","14"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(BM1_13_MTR.START_EN)","18"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_13_MTR.ON_TMR,?,?)","22"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_13_MTR.OFF_TMR,?,?)","23"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_12$N$N$N","NOP()","24"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_12_MTR.ANTI_CASC)","25"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_12_MTR.NO_FAULT)","26"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_12_MTR.IM_TMR,?,?)","27"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(O_C_BM1_12)","28"
RCOMMENT,"MainProgram","BM1_A_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_12_MTR.T2H_SPACE_TMR)","29"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(BM1_12_MTR.START_EN)","33"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_12_MTR.ON_TMR,?,?)","36"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_12_MTR.OFF_TMR,?,?)","37"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_11$N$N$N","NOP()","38"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_11_MTR.ANTI_CASC)","39"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_11_MTR.NO_FAULT)","40"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_11_MTR.IM_TMR,?,?)","41"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(O_C_BM1_11)","42"
RCOMMENT,"MainProgram","BM1_A_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_11_MTR.T2H_SPACE_TMR)","43"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(BM1_11_MTR.START_EN)","47"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_11_MTR.ON_TMR,?,?)","50"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_11_MTR.OFF_TMR,?,?)","51"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_10$N$N$N","NOP()","52"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_10_MTR.ANTI_CASC)","53"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_10_MTR.NO_FAULT)","54"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_10_MTR.IM_TMR,?,?)","55"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(O_C_BM1_10)","56"
RCOMMENT,"MainProgram","BM1_A_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_10_MTR.T2H_SPACE_TMR)","57"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(BM1_10_MTR.START_EN)","61"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_10_MTR.ON_TMR,?,?)","64"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_10_MTR.OFF_TMR,?,?)","65"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_09$N$N$N","NOP()","66"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_09_MTR.ANTI_CASC)","67"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_09_MTR.NO_FAULT)","68"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_09_MTR.IM_TMR,?,?)","69"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(O_C_BM1_09)","70"
RCOMMENT,"MainProgram","BM1_A_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_09_MTR.T2H_SPACE_TMR)","71"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(BM1_09_MTR.START_EN)","75"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_09_MTR.ON_TMR,?,?)","78"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_09_MTR.OFF_TMR,?,?)","79"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_08$N$N$N","NOP()","80"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_08_MTR.ANTI_CASC)","81"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_08_MTR.NO_FAULT)","82"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_08_MTR.IM_TMR,?,?)","83"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(O_C_BM1_08)","84"
RCOMMENT,"MainProgram","BM1_A_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_08_MTR.T2H_SPACE_TMR)","85"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(BM1_08_MTR.START_EN)","89"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_08_MTR.ON_TMR,?,?)","92"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_08_MTR.OFF_TMR,?,?)","93"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_07$N$N$N","NOP()","94"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_07_MTR.ANTI_CASC)","95"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_07_MTR.NO_FAULT)","96"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_07_MTR.IM_TMR,?,?)","97"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(O_C_BM1_07)","98"
RCOMMENT,"MainProgram","BM1_A_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_07_MTR.T2H_SPACE_TMR)","99"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(BM1_07_MTR.START_EN)","103"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_07_MTR.ON_TMR,?,?)","106"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_07_MTR.OFF_TMR,?,?)","107"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_06$N$N$N","NOP()","108"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_06_MTR.ANTI_CASC)","109"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_06_MTR.NO_FAULT)","110"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_06_MTR.IM_TMR,?,?)","111"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(BM1_06_MTR.INTL_MTR)","112"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(BM1_06_MTR.START_EN)","113"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_06_MTR.ON_TMR,?,?)","116"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_06_MTR.OFF_TMR,?,?)","117"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_05$N$N$N","NOP()","118"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_05_MTR.ANTI_CASC)","119"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_05_MTR.NO_FAULT)","120"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_05_MTR.IM_TMR,?,?)","121"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(BM1_05_MTR.INTL_MTR)","122"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(O_C_BM1_05)","123"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_05_MTR.ON_TMR,?,?)","124"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_05_MTR.OFF_TMR,?,?)","125"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_04$N$N$N","NOP()","126"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_04_MTR.ANTI_CASC)","127"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_04_MTR.NO_FAULT)","128"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_04_MTR.IM_TMR,?,?)","129"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(BM1_04_MTR.INTL_MTR)","130"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(O_C_BM1_04)","131"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_04_MTR.ON_TMR,?,?)","132"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_04_MTR.OFF_TMR,?,?)","133"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_03$N$N$N","NOP()","134"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_03_MTR.ANTI_CASC)","135"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_03_MTR.NO_FAULT)","136"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_03_MTR.IM_TMR,?,?)","137"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(BM1_03_MTR.INTL_MTR)","138"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(O_C_BM1_03)","139"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_03_MTR.ON_TMR,?,?)","140"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_03_MTR.OFF_TMR,?,?)","141"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_02$N$N$N","NOP()","142"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_02_MTR.ANTI_CASC)","143"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_02_MTR.NO_FAULT)","144"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_02_MTR.IM_TMR,?,?)","145"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(BM1_02_MTR.INTL_MTR)","146"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(O_C_BM1_02)","147"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_02_MTR.ON_TMR,?,?)","148"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_02_MTR.OFF_TMR,?,?)","149"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor BM1_01$N$N$N","NOP()","150"
RCOMMENT,"MainProgram","BM1_A_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_01_MTR.ANTI_CASC)","151"
RCOMMENT,"MainProgram","BM1_A_MTRS","Motor No Fault detection","OTE(BM1_01_MTR.NO_FAULT)","152"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor timer.","TON(BM1_01_MTR.IM_TMR,?,?)","153"
RCOMMENT,"MainProgram","BM1_A_MTRS","Internal Motor.","OTE(BM1_01_MTR.INTL_MTR)","154"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor Running.","OTE(O_C_BM1_01)","155"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_01_MTR.ON_TMR,?,?)","156"
RCOMMENT,"MainProgram","BM1_A_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_01_MTR.OFF_TMR,?,?)","157"
RCOMMENT,"MainProgram","BM1_A_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_A_PE_Filters","Photoeye","OTE(BM1_06_PE2.FILT)","1"
RCOMMENT,"MainProgram","BM1_A_PE_Filters","Photoeye","OTE(BM1_06_PE1.FILT)","4"
RCOMMENT,"MainProgram","BM1_A_PE_Filters","Photoeye","OTE(BM1_07_PE.FILT)","7"
RCOMMENT,"MainProgram","BM1_A_PE_Filters","Photoeye","OTE(BM1_08_PE.FILT)","11"
RCOMMENT,"MainProgram","BM1_A_PE_Filters","Photoeye","OTE(BM1_09_PE.FILT)","15"
RCOMMENT,"MainProgram","BM1_A_PE_Filters","Photoeye","OTE(BM1_10_PE.FILT)","19"
RCOMMENT,"MainProgram","BM1_A_PE_Filters","Photoeye","OTE(BM1_11_PE.FILT)","23"
RCOMMENT,"MainProgram","BM1_A_PE_Filters","Photoeye","OTE(BM1_12_PE.FILT)","27"
RCOMMENT,"MainProgram","BM1_A_PE_Filters","Photoeye","OTE(BM1_13_PE.FILT)","31"
RCOMMENT,"MainProgram","BM1_A_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","19"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","36"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","53"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","70"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","87"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","104"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","121"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","138"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","155"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","172"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","189"
RCOMMENT,"MainProgram","BM1_A_STATUS","Conveyor Status$N$N$N","NOP()","206"
RCOMMENT,"MainProgram","BM1_A_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","5"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","9"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","13"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","17"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","21"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","28"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","32"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","36"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","40"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","46"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","50"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","55"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","59"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Control Station$N$N","NOP()","63"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","67"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","70"
RCOMMENT,"MainProgram","BM1_B_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","73"
RCOMMENT,"MainProgram","BM1_B_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_26_MTR.G,G_BM1_26_STS)","1"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_25_MTR.G,G_BM1_25_STS)","2"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_24_MTR.G,G_BM1_24_STS)","3"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_23_MTR.G,G_BM1_23_STS)","4"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_22_MTR.G,G_BM1_22_STS)","5"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_21_MTR.G,G_BM1_21_STS)","6"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_20_MTR.G,G_BM1_20_STS)","7"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_19_MTR.G,G_BM1_19_STS)","8"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_18_MTR.G,G_BM1_18_STS)","9"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_17_MTR.G,G_BM1_17_STS)","10"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_16_MTR.G,G_BM1_16_STS)","11"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_15_MTR.G,G_BM1_15_STS)","12"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_14_MTR.G,G_BM1_14_STS)","13"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_38_MTR.G,G_BM1_38_STS)","14"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_37_MTR.G,G_BM1_37_STS)","15"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_36_MTR.G,G_BM1_36_STS)","16"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_35_MTR.G,G_BM1_35_STS)","17"
RCOMMENT,"MainProgram","BM1_B_GFX","Conveyor Graphic$N$N$N","MOV(BM1_34_MTR.G,G_BM1_34_STS)","18"
RCOMMENT,"MainProgram","BM1_B_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_14_PE2.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_14_PE1.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_15_PE.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_16_PE.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_17_PE.JAM_TMR,?,?)","13"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_18_PE.JAM_TMR,?,?)","16"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_19_PE2.JAM_TMR,?,?)","19"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_19_PE1.JAM_TMR,?,?)","22"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_20_PE.JAM_TMR,?,?)","25"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_21_PE.JAM_TMR,?,?)","28"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_22_PE.JAM_TMR,?,?)","31"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_23_PE2.JAM_TMR,?,?)","34"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_23_PE1.JAM_TMR,?,?)","37"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_23_PE.JAM_TMR,?,?)","40"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_24_PE.JAM_TMR,?,?)","43"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_25_PE.JAM_TMR,?,?)","46"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_26_PE.JAM_TMR,?,?)","49"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_34_PE.JAM_TMR,?,?)","52"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_35_PE.JAM_TMR,?,?)","55"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_36_PE.JAM_TMR,?,?)","58"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_37_PE.JAM_TMR,?,?)","61"
RCOMMENT,"MainProgram","BM1_B_JAMS","Jam Detection$N$N","RTO(BM1_38_PE.JAM_TMR,?,?)","64"
RCOMMENT,"MainProgram","BM1_B_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_B_MTRS","System Start Request","OTE(BM1_B.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor run expander.","OTE(BM1_B.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","BM1_B_MTRS","PE Grouping","OTE(BM1_B.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","BM1_B_MTRS","Reset Run Timer","RES(BM1_B.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","BM1_B_MTRS","Send downstream start request","OTE(BM1_B.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","BM1_B_MTRS","Run Timer","RTO(BM1_B.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","BM1_B_MTRS","Run Latch","OTE(BM1_B.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_26$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_26_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_26_MTR.NO_FAULT)","10"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_26_MTR.IM_TMR,?,?)","11"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_26_MTR.INTL_MTR)","12"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_26_MTR.START_EN)","14"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_26_MTR.ON_TMR,?,?)","17"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_26_MTR.OFF_TMR,?,?)","18"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_25$N$N$N","NOP()","19"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_25_MTR.ANTI_CASC)","20"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_25_MTR.NO_FAULT)","21"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_25_MTR.IM_TMR,?,?)","22"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_25_MTR.INTL_MTR)","23"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_25_MTR.T2H_SPACE_TMR)","24"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_25_MTR.START_EN)","28"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_25_MTR.ON_TMR,?,?)","31"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_25_MTR.OFF_TMR,?,?)","32"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_24$N$N$N","NOP()","33"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_24_MTR.ANTI_CASC)","34"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_24_MTR.NO_FAULT)","35"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_24_MTR.IM_TMR,?,?)","36"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_24_MTR.INTL_MTR)","37"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_24_MTR.T2H_SPACE_TMR)","38"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_24_MTR.START_EN)","42"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_24_MTR.ON_TMR,?,?)","45"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_24_MTR.OFF_TMR,?,?)","46"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_23$N$N$N","NOP()","47"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_23_MTR.ANTI_CASC)","48"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_23_MTR.NO_FAULT)","49"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_23_MTR.IM_TMR,?,?)","50"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_23_MTR.INTL_MTR)","51"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_23_MTR.T2H_SPACE_TMR)","52"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_23_MTR.START_EN)","56"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_23_MTR.ON_TMR,?,?)","63"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_23_MTR.OFF_TMR,?,?)","64"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_22$N$N$N","NOP()","65"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_22_MTR.ANTI_CASC)","66"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_22_MTR.NO_FAULT)","67"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_22_MTR.IM_TMR,?,?)","68"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_22_MTR.INTL_MTR)","69"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_22_MTR.T2H_SPACE_TMR)","70"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_22_MTR.START_EN)","74"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_22_MTR.ON_TMR,?,?)","77"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_22_MTR.OFF_TMR,?,?)","78"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_21$N$N$N","NOP()","79"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_21_MTR.ANTI_CASC)","80"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_21_MTR.NO_FAULT)","81"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_21_MTR.IM_TMR,?,?)","82"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_21_MTR.INTL_MTR)","83"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_21_MTR.T2H_SPACE_TMR)","84"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_21_MTR.START_EN)","88"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_21_MTR.ON_TMR,?,?)","91"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_21_MTR.OFF_TMR,?,?)","92"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_20$N$N$N","NOP()","93"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_20_MTR.ANTI_CASC)","94"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_20_MTR.NO_FAULT)","95"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_20_MTR.IM_TMR,?,?)","96"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_20_MTR.INTL_MTR)","97"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_20_MTR.T2H_SPACE_TMR)","98"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_20_MTR.START_EN)","102"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_20_MTR.ON_TMR,?,?)","105"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_20_MTR.OFF_TMR,?,?)","106"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_19$N$N$N","NOP()","107"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_19_MTR.ANTI_CASC)","108"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_19_MTR.NO_FAULT)","109"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_19_MTR.IM_TMR,?,?)","110"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_19_MTR.INTL_MTR)","111"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_19_MTR.T2H_SPACE_TMR)","112"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_19_MTR.START_EN)","116"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_19_MTR.ON_TMR,?,?)","119"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_19_MTR.OFF_TMR,?,?)","120"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_18$N$N$N","NOP()","121"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_18_MTR.ANTI_CASC)","122"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_18_MTR.NO_FAULT)","123"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_18_MTR.IM_TMR,?,?)","124"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_18_MTR.INTL_MTR)","125"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_18_MTR.T2H_SPACE_TMR)","126"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_18_MTR.START_EN)","130"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_18_MTR.ON_TMR,?,?)","133"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_18_MTR.OFF_TMR,?,?)","134"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_17$N$N$N","NOP()","135"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_17_MTR.ANTI_CASC)","136"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_17_MTR.NO_FAULT)","137"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_17_MTR.IM_TMR,?,?)","138"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_17_MTR.INTL_MTR)","139"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_17_MTR.T2H_SPACE_TMR)","140"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_17_MTR.START_EN)","144"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_17_MTR.ON_TMR,?,?)","147"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_17_MTR.OFF_TMR,?,?)","148"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_16$N$N$N","NOP()","149"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_16_MTR.ANTI_CASC)","150"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_16_MTR.NO_FAULT)","151"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_16_MTR.IM_TMR,?,?)","152"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_16_MTR.INTL_MTR)","153"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_16_MTR.T2H_SPACE_TMR)","154"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_16_MTR.START_EN)","158"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_16_MTR.ON_TMR,?,?)","161"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_16_MTR.OFF_TMR,?,?)","162"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_15$N$N$N","NOP()","163"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_15_MTR.ANTI_CASC)","164"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_15_MTR.NO_FAULT)","165"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_15_MTR.IM_TMR,?,?)","166"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_15_MTR.INTL_MTR)","167"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_15_MTR.T2H_SPACE_TMR)","168"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_15_MTR.START_EN)","172"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_15_MTR.ON_TMR,?,?)","175"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_15_MTR.OFF_TMR,?,?)","176"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_14$N$N$N","NOP()","177"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_14_MTR.ANTI_CASC)","178"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_14_MTR.NO_FAULT)","179"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_14_MTR.IM_TMR,?,?)","180"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_14_MTR.INTL_MTR)","181"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_14_MTR.T2H_SPACE_TMR)","182"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_14_MTR.START_EN)","186"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_14_MTR.ON_TMR,?,?)","189"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_14_MTR.OFF_TMR,?,?)","190"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_38$N$N$N","NOP()","191"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_38_MTR.ANTI_CASC)","192"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_38_MTR.NO_FAULT)","193"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_38_MTR.IM_TMR,?,?)","194"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_38_MTR.INTL_MTR)","195"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_38_MTR.T2H_SPACE_TMR)","196"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_38_MTR.START_EN)","200"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_38_MTR.ON_TMR,?,?)","203"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_38_MTR.OFF_TMR,?,?)","204"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_37$N$N$N","NOP()","205"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_37_MTR.ANTI_CASC)","206"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_37_MTR.NO_FAULT)","207"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_37_MTR.IM_TMR,?,?)","208"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_37_MTR.INTL_MTR)","209"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_37_MTR.T2H_SPACE_TMR)","210"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_37_MTR.START_EN)","214"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_37_MTR.ON_TMR,?,?)","217"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_37_MTR.OFF_TMR,?,?)","218"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_36$N$N$N","NOP()","219"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_36_MTR.ANTI_CASC)","220"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_36_MTR.NO_FAULT)","221"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_36_MTR.IM_TMR,?,?)","222"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_36_MTR.INTL_MTR)","223"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_36_MTR.T2H_SPACE_TMR)","224"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_36_MTR.START_EN)","228"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_36_MTR.ON_TMR,?,?)","231"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_36_MTR.OFF_TMR,?,?)","232"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_35$N$N$N","NOP()","233"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_35_MTR.ANTI_CASC)","234"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_35_MTR.NO_FAULT)","235"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_35_MTR.IM_TMR,?,?)","236"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_35_MTR.INTL_MTR)","237"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_35_MTR.T2H_SPACE_TMR)","238"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_35_MTR.START_EN)","242"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_35_MTR.ON_TMR,?,?)","245"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_35_MTR.OFF_TMR,?,?)","246"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor BM1_34$N$N$N","NOP()","247"
RCOMMENT,"MainProgram","BM1_B_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_34_MTR.ANTI_CASC)","248"
RCOMMENT,"MainProgram","BM1_B_MTRS","Motor No Fault detection","OTE(BM1_34_MTR.NO_FAULT)","249"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor timer.","TON(BM1_34_MTR.IM_TMR,?,?)","250"
RCOMMENT,"MainProgram","BM1_B_MTRS","Internal Motor.","OTE(BM1_34_MTR.INTL_MTR)","251"
RCOMMENT,"MainProgram","BM1_B_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(BM1_34_MTR.T2H_SPACE_TMR)","252"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor Running.","OTE(BM1_34_MTR.START_EN)","256"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_34_MTR.ON_TMR,?,?)","259"
RCOMMENT,"MainProgram","BM1_B_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_34_MTR.OFF_TMR,?,?)","260"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_14_PE2.FILT)","1"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_14_PE1.FILT)","4"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_15_PE.FILT)","8"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_16_PE.FILT)","12"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_17_PE.FILT)","16"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_18_PE.FILT)","20"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_19_PE2.FILT)","24"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_19_PE1.FILT)","27"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_20_PE.FILT)","31"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_21_PE.FILT)","35"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_22_PE.FILT)","39"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_23_PE2.FILT)","43"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_23_PE1.FILT)","46"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_23_PE.FILT)","49"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_24_PE.FILT)","53"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_25_PE.FILT)","57"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_26_PE.FILT)","61"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_34_PE.FILT)","65"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_35_PE.FILT)","69"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_36_PE.FILT)","73"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_37_PE.FILT)","77"
RCOMMENT,"MainProgram","BM1_B_PE_Filters","Photoeye","OTE(BM1_38_PE.FILT)","81"
RCOMMENT,"MainProgram","BM1_B_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","18"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","35"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","52"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","69"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","86"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","103"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","120"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","137"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","154"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","171"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","188"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","205"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","222"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","239"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","256"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","273"
RCOMMENT,"MainProgram","BM1_B_STATUS","Conveyor Status$N$N$N","NOP()","290"
RCOMMENT,"MainProgram","BM1_B_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","5"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","9"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","11"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","13"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","18"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","25"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","29"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","31"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","36"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","40"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","45"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","47"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","49"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","55"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","59"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Control Station$N$N","NOP()","64"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","66"
RCOMMENT,"MainProgram","BM1_C_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","69"
RCOMMENT,"MainProgram","BM1_C_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_C_GFX","Conveyor Graphic$N$N$N","MOV(BM1_30_MTR.G,G_BM1_30_STS)","1"
RCOMMENT,"MainProgram","BM1_C_GFX","Conveyor Graphic$N$N$N","MOV(BM1_29_MTR.G,G_BM1_29_STS)","2"
RCOMMENT,"MainProgram","BM1_C_GFX","Conveyor Graphic$N$N$N","MOV(BM1_28_MTR.G,G_BM1_28_STS)","3"
RCOMMENT,"MainProgram","BM1_C_GFX","Conveyor Graphic$N$N$N","MOV(BM1_27_MTR.G,G_BM1_27_STS)","4"
RCOMMENT,"MainProgram","BM1_C_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_C_JAMS","Jam Detection$N$N","RTO(BM1_27_PE2.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","BM1_C_JAMS","Jam Detection$N$N","RTO(BM1_27_PE1.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","BM1_C_JAMS","Jam Detection$N$N","RTO(BM1_28_PE2.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","BM1_C_JAMS","Jam Detection$N$N","RTO(BM1_28_PE1.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","BM1_C_JAMS","Jam Detection$N$N","RTO(BM1_29_PE2.JAM_TMR,?,?)","13"
RCOMMENT,"MainProgram","BM1_C_JAMS","Jam Detection$N$N","RTO(BM1_29_PE1.JAM_TMR,?,?)","16"
RCOMMENT,"MainProgram","BM1_C_JAMS","Jam Detection$N$N","RTO(BM1_30_PE3.JAM_TMR,?,?)","19"
RCOMMENT,"MainProgram","BM1_C_JAMS","Jam Detection$N$N","RTO(BM1_30_PE2.JAM_TMR,?,?)","22"
RCOMMENT,"MainProgram","BM1_C_JAMS","Jam Detection$N$N","RTO(BM1_30_PE1.JAM_TMR,?,?)","25"
RCOMMENT,"MainProgram","BM1_C_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_C_MTRS","System Start Request","OTE(BM1_C.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","BM1_C_MTRS","Motor run expander.","OTE(BM1_C.MTR_GRP.RUN_EXPAND)","14"
RCOMMENT,"MainProgram","BM1_C_MTRS","PE Grouping","OTE(BM1_C.MTR_GRP.PEs)","15"
RCOMMENT,"MainProgram","BM1_C_MTRS","Reset Run Timer","RES(BM1_C.MTR_GRP.AUTO_STOP_TIMER)","16"
RCOMMENT,"MainProgram","BM1_C_MTRS","Send downstream start request","OTE(BM1_C.MTR_GRP.START_DS)","17"
RCOMMENT,"MainProgram","BM1_C_MTRS","Run Timer","RTO(BM1_C.MTR_GRP.AUTO_STOP_TIMER,?,?)","18"
RCOMMENT,"MainProgram","BM1_C_MTRS","Run Latch","OTE(BM1_C.MTR_GRP.RUN_LATCH)","19"
RCOMMENT,"MainProgram","BM1_C_MTRS","The sync stop of the post indexing belt should in effect once the photo-eye is blocked up until the bag is off of the belt. This logic is for when a bag is transitioning from the indexing belt to the downstream belt and the indexing belt were to stop. We want the sync_stop logic to stop belt the downstream belt","OTE(BM1_27_MTR.SYNC_STOP)","20"
RCOMMENT,"MainProgram","BM1_C_MTRS","Reset Indexing timer when upstream PE is blocked$NPositive transition memory bit is used to prevent indexing timer from resetting if conveyor is spacing$N","RES(BM1_27_MTR.INDEX_TMR)","24"
RCOMMENT,"MainProgram","BM1_C_MTRS","Motor BM1_30$N$N$N","NOP()","28"
RCOMMENT,"MainProgram","BM1_C_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_30_MTR.ANTI_CASC)","29"
RCOMMENT,"MainProgram","BM1_C_MTRS","Motor No Fault detection","OTE(BM1_30_MTR.NO_FAULT)","30"
RCOMMENT,"MainProgram","BM1_C_MTRS","Internal Motor timer.","TON(BM1_30_MTR.IM_TMR,?,?)","31"
RCOMMENT,"MainProgram","BM1_C_MTRS","Internal Motor.","OTE(BM1_30_MTR.INTL_MTR)","32"
RCOMMENT,"MainProgram","BM1_C_MTRS","Indexing Control$NWhen Indexing is enabled and the upstream PE is blocked, turn on the index forward and leave it on until the indexing timer has expired$N","OTE(BM1_30_MTR.INDEX_FWD)","34"
RCOMMENT,"MainProgram","BM1_C_MTRS","Only run the indexing timer while the indexing belt is running","RTO(BM1_30_MTR.INDEX_TMR,?,?)","35"
RCOMMENT,"MainProgram","BM1_C_MTRS","Conveyor Running.","OTE(BM1_30_MTR.START_EN)","36"
RCOMMENT,"MainProgram","BM1_C_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_30_MTR.ON_TMR,?,?)","39"
RCOMMENT,"MainProgram","BM1_C_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_30_MTR.OFF_TMR,?,?)","40"
RCOMMENT,"MainProgram","BM1_C_MTRS","Motor BM1_29$N$N$N","NOP()","41"
RCOMMENT,"MainProgram","BM1_C_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_29_MTR.ANTI_CASC)","42"
RCOMMENT,"MainProgram","BM1_C_MTRS","Motor No Fault detection","OTE(BM1_29_MTR.NO_FAULT)","43"
RCOMMENT,"MainProgram","BM1_C_MTRS","Internal Motor timer.","TON(BM1_29_MTR.IM_TMR,?,?)","44"
RCOMMENT,"MainProgram","BM1_C_MTRS","Internal Motor.","OTE(BM1_29_MTR.INTL_MTR)","45"
RCOMMENT,"MainProgram","BM1_C_MTRS","Indexing Control$NWhen Indexing is enabled and the upstream PE is blocked, turn on the index forward and leave it on until the indexing timer has expired$N","OTE(BM1_29_MTR.INDEX_FWD)","47"
RCOMMENT,"MainProgram","BM1_C_MTRS","Only run the indexing timer while the indexing belt is running","RTO(BM1_29_MTR.INDEX_TMR,?,?)","48"
RCOMMENT,"MainProgram","BM1_C_MTRS","Conveyor Running.","OTE(BM1_29_MTR.START_EN)","49"
RCOMMENT,"MainProgram","BM1_C_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_29_MTR.ON_TMR,?,?)","52"
RCOMMENT,"MainProgram","BM1_C_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_29_MTR.OFF_TMR,?,?)","53"
RCOMMENT,"MainProgram","BM1_C_MTRS","Motor BM1_28$N$N$N","NOP()","54"
RCOMMENT,"MainProgram","BM1_C_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_28_MTR.ANTI_CASC)","55"
RCOMMENT,"MainProgram","BM1_C_MTRS","Motor No Fault detection","OTE(BM1_28_MTR.NO_FAULT)","56"
RCOMMENT,"MainProgram","BM1_C_MTRS","Internal Motor timer.","TON(BM1_28_MTR.IM_TMR,?,?)","57"
RCOMMENT,"MainProgram","BM1_C_MTRS","Internal Motor.","OTE(BM1_28_MTR.INTL_MTR)","58"
RCOMMENT,"MainProgram","BM1_C_MTRS","Indexing Control$NWhen Indexing is enabled and the upstream PE is blocked, turn on the index forward and leave it on until the indexing timer has expired$N","OTE(BM1_28_MTR.INDEX_FWD)","60"
RCOMMENT,"MainProgram","BM1_C_MTRS","Only run the indexing timer while the indexing belt is running","RTO(BM1_28_MTR.INDEX_TMR,?,?)","61"
RCOMMENT,"MainProgram","BM1_C_MTRS","Conveyor Running.","OTE(BM1_28_MTR.START_EN)","62"
RCOMMENT,"MainProgram","BM1_C_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_28_MTR.ON_TMR,?,?)","65"
RCOMMENT,"MainProgram","BM1_C_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_28_MTR.OFF_TMR,?,?)","66"
RCOMMENT,"MainProgram","BM1_C_MTRS","Motor BM1_27$N$N$N","NOP()","67"
RCOMMENT,"MainProgram","BM1_C_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(BM1_27_MTR.ANTI_CASC)","68"
RCOMMENT,"MainProgram","BM1_C_MTRS","Motor No Fault detection","OTE(BM1_27_MTR.NO_FAULT)","69"
RCOMMENT,"MainProgram","BM1_C_MTRS","Internal Motor timer.","TON(BM1_27_MTR.IM_TMR,?,?)","70"
RCOMMENT,"MainProgram","BM1_C_MTRS","Internal Motor.","OTE(BM1_27_MTR.INTL_MTR)","71"
RCOMMENT,"MainProgram","BM1_C_MTRS","Indexing Control$NWhen Indexing is enabled and the upstream PE is blocked, turn on the index forward and leave it on until the indexing timer has expired$N","OTE(BM1_27_MTR.INDEX_FWD)","73"
RCOMMENT,"MainProgram","BM1_C_MTRS","Only run the indexing timer while the indexing belt is running","RTO(BM1_27_MTR.INDEX_TMR,?,?)","74"
RCOMMENT,"MainProgram","BM1_C_MTRS","Conveyor Running.","OTE(BM1_27_MTR.START_EN)","75"
RCOMMENT,"MainProgram","BM1_C_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(BM1_27_MTR.ON_TMR,?,?)","78"
RCOMMENT,"MainProgram","BM1_C_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(BM1_27_MTR.OFF_TMR,?,?)","79"
RCOMMENT,"MainProgram","BM1_C_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_C_PE_Filters","Photoeye","OTE(BM1_27_PE2.FILT)","1"
RCOMMENT,"MainProgram","BM1_C_PE_Filters","Photoeye","OTE(BM1_27_PE1.FILT)","4"
RCOMMENT,"MainProgram","BM1_C_PE_Filters","Photoeye","OTE(BM1_28_PE2.FILT)","7"
RCOMMENT,"MainProgram","BM1_C_PE_Filters","Photoeye","OTE(BM1_28_PE1.FILT)","10"
RCOMMENT,"MainProgram","BM1_C_PE_Filters","Photoeye","OTE(BM1_29_PE2.FILT)","13"
RCOMMENT,"MainProgram","BM1_C_PE_Filters","Photoeye","OTE(BM1_29_PE1.FILT)","16"
RCOMMENT,"MainProgram","BM1_C_PE_Filters","Photoeye","OTE(BM1_30_PE3.FILT)","19"
RCOMMENT,"MainProgram","BM1_C_PE_Filters","Photoeye","OTE(BM1_30_PE2.FILT)","22"
RCOMMENT,"MainProgram","BM1_C_PE_Filters","Photoeye","OTE(BM1_30_PE1.FILT)","25"
RCOMMENT,"MainProgram","BM1_C_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_C_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","BM1_C_STATUS","Conveyor Status$N$N$N","NOP()","19"
RCOMMENT,"MainProgram","BM1_C_STATUS","Conveyor Status$N$N$N","NOP()","37"
RCOMMENT,"MainProgram","BM1_C_STATUS","Conveyor Status$N$N$N","NOP()","55"
RCOMMENT,"MainProgram","BM1_C_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BM1_C_VFDS","Motor BM1_30 VFD$N***************************$N","TON(BM1_30_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","BM1_C_VFDS","Motor BM1_29 VFD$N***************************$N","TON(BM1_29_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","BM1_C_VFDS","Motor BM1_28 VFD$N***************************$N","TON(BM1_28_VFD.POWERED_DLY_TMR,?,?)","5"
RCOMMENT,"MainProgram","BM1_C_VFDS","Motor BM1_27 VFD$N***************************$N","TON(BM1_27_VFD.POWERED_DLY_TMR,?,?)","7"
RCOMMENT,"MainProgram","BT_BM1_12_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(BM1_12_BT.RAMP_CNT,1,BM1_12_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_BM1_12_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(BM1_12_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_BM1_12_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(BM1_12_BT.RAMP_CNT,1,BM1_12_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_BM1_12_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(BM1_12_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_BM1_12_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(BM1_12_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_BM1_12_P","One shot the calculated pulse time going negative.","OTE(BM1_12_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_BM1_12_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(BM1_12_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_BM1_12_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(BM1_12_BT.SIM_PULSE_TIME,BM1_12_BTx.PULSE_PERIOD,BM1_12_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_BM1_12_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(BM1_12_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_BM1_12_P","Count the encoder pulses.","ADD(BM1_12_BT.ACCUM,1,BM1_12_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_BM1_12_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,BM1_12_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_BM1_12_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(BM1_12_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_BM1_12_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(BM1_12_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_BM1_12_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(BM1_12_BT.LU_COUNTER,1,BM1_12_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_BM1_12_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(BM1_12_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_BM1_13_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(BM1_13_BT.RAMP_CNT,1,BM1_13_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_BM1_13_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(BM1_13_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_BM1_13_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(BM1_13_BT.RAMP_CNT,1,BM1_13_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_BM1_13_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(BM1_13_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_BM1_13_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(BM1_13_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_BM1_13_P","One shot the calculated pulse time going negative.","OTE(BM1_13_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_BM1_13_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(BM1_13_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_BM1_13_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(BM1_13_BT.SIM_PULSE_TIME,BM1_13_BTx.PULSE_PERIOD,BM1_13_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_BM1_13_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(BM1_13_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_BM1_13_P","Count the encoder pulses.","ADD(BM1_13_BT.ACCUM,1,BM1_13_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_BM1_13_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,BM1_13_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_BM1_13_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(BM1_13_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_BM1_13_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(BM1_13_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_BM1_13_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(BM1_13_BT.LU_COUNTER,1,BM1_13_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_BM1_13_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(BM1_13_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_BM1_14_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(BM1_14_BT.RAMP_CNT,1,BM1_14_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_BM1_14_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(BM1_14_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_BM1_14_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(BM1_14_BT.RAMP_CNT,1,BM1_14_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_BM1_14_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(BM1_14_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_BM1_14_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(BM1_14_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_BM1_14_P","One shot the calculated pulse time going negative.","OTE(BM1_14_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_BM1_14_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(BM1_14_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_BM1_14_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(BM1_14_BT.SIM_PULSE_TIME,BM1_14_BTx.PULSE_PERIOD,BM1_14_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_BM1_14_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(BM1_14_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_BM1_14_P","Count the encoder pulses.","ADD(BM1_14_BT.ACCUM,1,BM1_14_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_BM1_14_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,BM1_14_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_BM1_14_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(BM1_14_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_BM1_14_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(BM1_14_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_BM1_14_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(BM1_14_BT.LU_COUNTER,1,BM1_14_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_BM1_14_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(BM1_14_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_BM1_22_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(BM1_22_BT.RAMP_CNT,1,BM1_22_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_BM1_22_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(BM1_22_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_BM1_22_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(BM1_22_BT.RAMP_CNT,1,BM1_22_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_BM1_22_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(BM1_22_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_BM1_22_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(BM1_22_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_BM1_22_P","One shot the calculated pulse time going negative.","OTE(BM1_22_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_BM1_22_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(BM1_22_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_BM1_22_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(BM1_22_BT.SIM_PULSE_TIME,BM1_22_BTx.PULSE_PERIOD,BM1_22_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_BM1_22_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(BM1_22_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_BM1_22_P","Count the encoder pulses.","ADD(BM1_22_BT.ACCUM,1,BM1_22_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_BM1_22_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,BM1_22_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_BM1_22_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(BM1_22_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_BM1_22_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(BM1_22_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_BM1_22_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(BM1_22_BT.LU_COUNTER,1,BM1_22_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_BM1_22_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(BM1_22_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_BM1_23_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(BM1_23_BT.RAMP_CNT,1,BM1_23_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_BM1_23_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(BM1_23_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_BM1_23_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(BM1_23_BT.RAMP_CNT,1,BM1_23_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_BM1_23_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(BM1_23_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_BM1_23_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(BM1_23_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_BM1_23_P","One shot the calculated pulse time going negative.","OTE(BM1_23_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_BM1_23_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(BM1_23_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_BM1_23_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(BM1_23_BT.SIM_PULSE_TIME,BM1_23_BTx.PULSE_PERIOD,BM1_23_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_BM1_23_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(BM1_23_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_BM1_23_P","Count the encoder pulses.","ADD(BM1_23_BT.ACCUM,1,BM1_23_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_BM1_23_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,BM1_23_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_BM1_23_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(BM1_23_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_BM1_23_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(BM1_23_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_BM1_23_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(BM1_23_BT.LU_COUNTER,1,BM1_23_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_BM1_23_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(BM1_23_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_BM1_38_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(BM1_38_BT.RAMP_CNT,1,BM1_38_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_BM1_38_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(BM1_38_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_BM1_38_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(BM1_38_BT.RAMP_CNT,1,BM1_38_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_BM1_38_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(BM1_38_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_BM1_38_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(BM1_38_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_BM1_38_P","One shot the calculated pulse time going negative.","OTE(BM1_38_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_BM1_38_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(BM1_38_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_BM1_38_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(BM1_38_BT.SIM_PULSE_TIME,BM1_38_BTx.PULSE_PERIOD,BM1_38_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_BM1_38_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(BM1_38_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_BM1_38_P","Count the encoder pulses.","ADD(BM1_38_BT.ACCUM,1,BM1_38_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_BM1_38_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,BM1_38_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_BM1_38_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(BM1_38_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_BM1_38_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(BM1_38_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_BM1_38_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(BM1_38_BT.LU_COUNTER,1,BM1_38_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_BM1_38_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(BM1_38_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_C2T_16_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(C2T_16_BT.RAMP_CNT,1,C2T_16_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_C2T_16_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(C2T_16_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_C2T_16_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(C2T_16_BT.RAMP_CNT,1,C2T_16_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_C2T_16_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(C2T_16_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_C2T_16_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(C2T_16_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_C2T_16_P","One shot the calculated pulse time going negative.","OTE(C2T_16_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_C2T_16_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(C2T_16_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_C2T_16_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(C2T_16_BT.SIM_PULSE_TIME,C2T_16_BTx.PULSE_PERIOD,C2T_16_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_C2T_16_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(C2T_16_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_C2T_16_P","Count the encoder pulses.","ADD(C2T_16_BT.ACCUM,1,C2T_16_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_C2T_16_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,C2T_16_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_C2T_16_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(C2T_16_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_C2T_16_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(C2T_16_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_C2T_16_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(C2T_16_BT.LU_COUNTER,1,C2T_16_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_C2T_16_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(C2T_16_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_C2T_17_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(C2T_17_BT.RAMP_CNT,1,C2T_17_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_C2T_17_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(C2T_17_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_C2T_17_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(C2T_17_BT.RAMP_CNT,1,C2T_17_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_C2T_17_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(C2T_17_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_C2T_17_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(C2T_17_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_C2T_17_P","One shot the calculated pulse time going negative.","OTE(C2T_17_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_C2T_17_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(C2T_17_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_C2T_17_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(C2T_17_BT.SIM_PULSE_TIME,C2T_17_BTx.PULSE_PERIOD,C2T_17_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_C2T_17_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(C2T_17_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_C2T_17_P","Count the encoder pulses.","ADD(C2T_17_BT.ACCUM,1,C2T_17_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_C2T_17_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,C2T_17_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_C2T_17_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(C2T_17_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_C2T_17_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(C2T_17_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_C2T_17_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(C2T_17_BT.LU_COUNTER,1,C2T_17_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_C2T_17_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(C2T_17_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_C4_09_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(C4_09_BT.RAMP_CNT,1,C4_09_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_C4_09_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(C4_09_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_C4_09_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(C4_09_BT.RAMP_CNT,1,C4_09_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_C4_09_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(C4_09_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_C4_09_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(C4_09_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_C4_09_P","One shot the calculated pulse time going negative.","OTE(C4_09_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_C4_09_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(C4_09_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_C4_09_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(C4_09_BT.SIM_PULSE_TIME,C4_09_BTx.PULSE_PERIOD,C4_09_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_C4_09_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(C4_09_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_C4_09_P","Count the encoder pulses.","ADD(C4_09_BT.ACCUM,1,C4_09_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_C4_09_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,C4_09_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_C4_09_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(C4_09_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_C4_09_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(C4_09_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_C4_09_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(C4_09_BT.LU_COUNTER,1,C4_09_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_C4_09_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(C4_09_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_CL12T_35_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(CL12T_35_BTP.RAMP_CNT,1,CL12T_35_BTP.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_CL12T_35_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(CL12T_35_BTP.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_CL12T_35_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(CL12T_35_BTP.RAMP_CNT,1,CL12T_35_BTP.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_CL12T_35_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(CL12T_35_BTP.MOVING)","3"
RCOMMENT,"MainProgram","BT_CL12T_35_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(CL12T_35_BTP.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_CL12T_35_P","One shot the calculated pulse time going negative.","OTE(CL12T_35_BTP.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_CL12T_35_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(CL12T_35_BTP.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_CL12T_35_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(CL12T_35_BTP.SIM_PULSE_TIME,CL12T_35_BTx.PULSE_PERIOD,CL12T_35_BTP.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_CL12T_35_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(CL12T_35_BTP.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_CL12T_35_P","Count the encoder pulses.","ADD(CL12T_35_BTP.ACCUM,1,CL12T_35_BTP.ACCUM)","11"
RCOMMENT,"MainProgram","BT_CL12T_35_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,CL12T_35_BTP.ACCUM)","12"
RCOMMENT,"MainProgram","BT_CL12T_35_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(CL12T_35_BTP.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_CL12T_35_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(CL12T_35_BTP.LU_DET)","14"
RCOMMENT,"MainProgram","BT_CL12T_35_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(CL12T_35_BTP.LU_COUNTER,1,CL12T_35_BTP.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_CL12T_35_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(CL12T_35_BTP.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_CL12T_36_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(CL12T_36_BT.RAMP_CNT,1,CL12T_36_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_CL12T_36_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(CL12T_36_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_CL12T_36_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(CL12T_36_BT.RAMP_CNT,1,CL12T_36_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_CL12T_36_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(CL12T_36_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_CL12T_36_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(CL12T_36_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_CL12T_36_P","One shot the calculated pulse time going negative.","OTE(CL12T_36_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_CL12T_36_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(CL12T_36_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_CL12T_36_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(CL12T_36_BT.SIM_PULSE_TIME,CL12T_36_BTx.PULSE_PERIOD,CL12T_36_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_CL12T_36_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(CL12T_36_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_CL12T_36_P","Count the encoder pulses.","ADD(CL12T_36_BT.ACCUM,1,CL12T_36_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_CL12T_36_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,CL12T_36_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_CL12T_36_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(CL12T_36_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_CL12T_36_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(CL12T_36_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_CL12T_36_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(CL12T_36_BT.LU_COUNTER,1,CL12T_36_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_CL12T_36_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(CL12T_36_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_CL1T_26_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(CL1T_26_BT.RAMP_CNT,1,CL1T_26_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_CL1T_26_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(CL1T_26_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_CL1T_26_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(CL1T_26_BT.RAMP_CNT,1,CL1T_26_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_CL1T_26_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(CL1T_26_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_CL1T_26_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(CL1T_26_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_CL1T_26_P","One shot the calculated pulse time going negative.","OTE(CL1T_26_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_CL1T_26_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(CL1T_26_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_CL1T_26_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(CL1T_26_BT.SIM_PULSE_TIME,CL1T_26_BTx.PULSE_PERIOD,CL1T_26_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_CL1T_26_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(CL1T_26_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_CL1T_26_P","Count the encoder pulses.","ADD(CL1T_26_BT.ACCUM,1,CL1T_26_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_CL1T_26_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,CL1T_26_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_CL1T_26_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(CL1T_26_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_CL1T_26_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(CL1T_26_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_CL1T_26_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(CL1T_26_BT.LU_COUNTER,1,CL1T_26_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_CL1T_26_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(CL1T_26_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_HX1T_09_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(HX1T_09_BT.RAMP_CNT,1,HX1T_09_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_HX1T_09_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(HX1T_09_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_HX1T_09_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(HX1T_09_BT.RAMP_CNT,1,HX1T_09_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_HX1T_09_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(HX1T_09_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_HX1T_09_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(HX1T_09_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_HX1T_09_P","One shot the calculated pulse time going negative.","OTE(HX1T_09_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_HX1T_09_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(HX1T_09_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_HX1T_09_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(HX1T_09_BT.SIM_PULSE_TIME,HX1T_09_BTx.PULSE_PERIOD,HX1T_09_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_HX1T_09_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(HX1T_09_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_HX1T_09_P","Count the encoder pulses.","ADD(HX1T_09_BT.ACCUM,1,HX1T_09_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_HX1T_09_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,HX1T_09_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_HX1T_09_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(HX1T_09_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_HX1T_09_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(HX1T_09_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_HX1T_09_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(HX1T_09_BT.LU_COUNTER,1,HX1T_09_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_HX1T_09_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(HX1T_09_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_HX1T_10_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(HX1T_10_BT.RAMP_CNT,1,HX1T_10_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_HX1T_10_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(HX1T_10_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_HX1T_10_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(HX1T_10_BT.RAMP_CNT,1,HX1T_10_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_HX1T_10_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(HX1T_10_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_HX1T_10_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(HX1T_10_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_HX1T_10_P","One shot the calculated pulse time going negative.","OTE(HX1T_10_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_HX1T_10_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(HX1T_10_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_HX1T_10_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(HX1T_10_BT.SIM_PULSE_TIME,HX1T_10_BTx.PULSE_PERIOD,HX1T_10_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_HX1T_10_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(HX1T_10_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_HX1T_10_P","Count the encoder pulses.","ADD(HX1T_10_BT.ACCUM,1,HX1T_10_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_HX1T_10_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,HX1T_10_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_HX1T_10_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(HX1T_10_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_HX1T_10_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(HX1T_10_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_HX1T_10_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(HX1T_10_BT.LU_COUNTER,1,HX1T_10_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_HX1T_10_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(HX1T_10_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_O2T_10_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(O2T_10_BT.RAMP_CNT,1,O2T_10_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_O2T_10_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(O2T_10_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_O2T_10_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(O2T_10_BT.RAMP_CNT,1,O2T_10_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_O2T_10_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(O2T_10_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_O2T_10_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(O2T_10_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_O2T_10_P","One shot the calculated pulse time going negative.","OTE(O2T_10_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_O2T_10_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(O2T_10_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_O2T_10_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(O2T_10_BT.SIM_PULSE_TIME,O2T_10_BTx.PULSE_PERIOD,O2T_10_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_O2T_10_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(O2T_10_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_O2T_10_P","Count the encoder pulses.","ADD(O2T_10_BT.ACCUM,1,O2T_10_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_O2T_10_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,O2T_10_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_O2T_10_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(O2T_10_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_O2T_10_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(O2T_10_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_O2T_10_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(O2T_10_BT.LU_COUNTER,1,O2T_10_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_O2T_10_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(O2T_10_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_O2T_17_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(O2T_17_BT.RAMP_CNT,1,O2T_17_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_O2T_17_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(O2T_17_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_O2T_17_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(O2T_17_BT.RAMP_CNT,1,O2T_17_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_O2T_17_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(O2T_17_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_O2T_17_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(O2T_17_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_O2T_17_P","One shot the calculated pulse time going negative.","OTE(O2T_17_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_O2T_17_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(O2T_17_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_O2T_17_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(O2T_17_BT.SIM_PULSE_TIME,O2T_17_BTx.PULSE_PERIOD,O2T_17_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_O2T_17_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(O2T_17_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_O2T_17_P","Count the encoder pulses.","ADD(O2T_17_BT.ACCUM,1,O2T_17_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_O2T_17_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,O2T_17_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_O2T_17_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(O2T_17_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_O2T_17_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(O2T_17_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_O2T_17_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(O2T_17_BT.LU_COUNTER,1,O2T_17_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_O2T_17_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(O2T_17_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_O2T_18_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(O2T_18_BT.RAMP_CNT,1,O2T_18_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_O2T_18_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(O2T_18_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_O2T_18_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(O2T_18_BT.RAMP_CNT,1,O2T_18_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_O2T_18_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(O2T_18_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_O2T_18_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(O2T_18_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_O2T_18_P","One shot the calculated pulse time going negative.","OTE(O2T_18_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_O2T_18_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(O2T_18_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_O2T_18_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(O2T_18_BT.SIM_PULSE_TIME,O2T_18_BTx.PULSE_PERIOD,O2T_18_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_O2T_18_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(O2T_18_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_O2T_18_P","Count the encoder pulses.","ADD(O2T_18_BT.ACCUM,1,O2T_18_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_O2T_18_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,O2T_18_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_O2T_18_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(O2T_18_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_O2T_18_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(O2T_18_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_O2T_18_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(O2T_18_BT.LU_COUNTER,1,O2T_18_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_O2T_18_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(O2T_18_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_O4T_09_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(O4T_09_BT.RAMP_CNT,1,O4T_09_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_O4T_09_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(O4T_09_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_O4T_09_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(O4T_09_BT.RAMP_CNT,1,O4T_09_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_O4T_09_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(O4T_09_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_O4T_09_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(O4T_09_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_O4T_09_P","One shot the calculated pulse time going negative.","OTE(O4T_09_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_O4T_09_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(O4T_09_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_O4T_09_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(O4T_09_BT.SIM_PULSE_TIME,O4T_09_BTx.PULSE_PERIOD,O4T_09_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_O4T_09_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(O4T_09_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_O4T_09_P","Count the encoder pulses.","ADD(O4T_09_BT.ACCUM,1,O4T_09_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_O4T_09_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,O4T_09_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_O4T_09_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(O4T_09_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_O4T_09_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(O4T_09_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_O4T_09_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(O4T_09_BT.LU_COUNTER,1,O4T_09_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_O4T_09_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(O4T_09_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_O4T_10_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(O4T_10_BT.RAMP_CNT,1,O4T_10_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_O4T_10_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(O4T_10_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_O4T_10_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(O4T_10_BT.RAMP_CNT,1,O4T_10_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_O4T_10_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(O4T_10_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_O4T_10_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(O4T_10_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_O4T_10_P","One shot the calculated pulse time going negative.","OTE(O4T_10_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_O4T_10_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(O4T_10_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_O4T_10_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(O4T_10_BT.SIM_PULSE_TIME,O4T_10_BTx.PULSE_PERIOD,O4T_10_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_O4T_10_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(O4T_10_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_O4T_10_P","Count the encoder pulses.","ADD(O4T_10_BT.ACCUM,1,O4T_10_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_O4T_10_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,O4T_10_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_O4T_10_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(O4T_10_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_O4T_10_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(O4T_10_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_O4T_10_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(O4T_10_BT.LU_COUNTER,1,O4T_10_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_O4T_10_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(O4T_10_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_O4T_20_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(O4T_20_BT.RAMP_CNT,1,O4T_20_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_O4T_20_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(O4T_20_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_O4T_20_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(O4T_20_BT.RAMP_CNT,1,O4T_20_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_O4T_20_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(O4T_20_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_O4T_20_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(O4T_20_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_O4T_20_P","One shot the calculated pulse time going negative.","OTE(O4T_20_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_O4T_20_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(O4T_20_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_O4T_20_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(O4T_20_BT.SIM_PULSE_TIME,O4T_20_BTx.PULSE_PERIOD,O4T_20_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_O4T_20_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(O4T_20_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_O4T_20_P","Count the encoder pulses.","ADD(O4T_20_BT.ACCUM,1,O4T_20_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_O4T_20_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,O4T_20_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_O4T_20_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(O4T_20_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_O4T_20_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(O4T_20_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_O4T_20_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(O4T_20_BT.LU_COUNTER,1,O4T_20_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_O4T_20_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(O4T_20_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_O4_04_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(O4_04_BT.RAMP_CNT,1,O4_04_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_O4_04_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(O4_04_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_O4_04_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(O4_04_BT.RAMP_CNT,1,O4_04_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_O4_04_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(O4_04_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_O4_04_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(O4_04_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_O4_04_P","One shot the calculated pulse time going negative.","OTE(O4_04_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_O4_04_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(O4_04_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_O4_04_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(O4_04_BT.SIM_PULSE_TIME,O4_04_BTx.PULSE_PERIOD,O4_04_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_O4_04_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(O4_04_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_O4_04_P","Count the encoder pulses.","ADD(O4_04_BT.ACCUM,1,O4_04_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_O4_04_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,O4_04_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_O4_04_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(O4_04_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_O4_04_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(O4_04_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_O4_04_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(O4_04_BT.LU_COUNTER,1,O4_04_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_O4_04_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(O4_04_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_SUBR_CALLS","****************************************************************************************************$NThis routine calls all of the Belt Tach (encoder) routines.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","BT_T5T_08_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(T5T_08_BT.RAMP_CNT,1,T5T_08_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_T5T_08_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(T5T_08_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_T5T_08_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(T5T_08_BT.RAMP_CNT,1,T5T_08_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_T5T_08_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(T5T_08_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_T5T_08_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(T5T_08_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_T5T_08_P","One shot the calculated pulse time going negative.","OTE(T5T_08_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_T5T_08_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(T5T_08_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_T5T_08_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(T5T_08_BT.SIM_PULSE_TIME,T5T_08_BTx.PULSE_PERIOD,T5T_08_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_T5T_08_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(T5T_08_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_T5T_08_P","Count the encoder pulses.","ADD(T5T_08_BT.ACCUM,1,T5T_08_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_T5T_08_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,T5T_08_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_T5T_08_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(T5T_08_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_T5T_08_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(T5T_08_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_T5T_08_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(T5T_08_BT.LU_COUNTER,1,T5T_08_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_T5T_08_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(T5T_08_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_T5T_09_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(T5T_09_BT.RAMP_CNT,1,T5T_09_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_T5T_09_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(T5T_09_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_T5T_09_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(T5T_09_BT.RAMP_CNT,1,T5T_09_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_T5T_09_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(T5T_09_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_T5T_09_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(T5T_09_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_T5T_09_P","One shot the calculated pulse time going negative.","OTE(T5T_09_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_T5T_09_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(T5T_09_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_T5T_09_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(T5T_09_BT.SIM_PULSE_TIME,T5T_09_BTx.PULSE_PERIOD,T5T_09_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_T5T_09_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(T5T_09_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_T5T_09_P","Count the encoder pulses.","ADD(T5T_09_BT.ACCUM,1,T5T_09_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_T5T_09_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,T5T_09_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_T5T_09_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(T5T_09_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_T5T_09_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(T5T_09_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_T5T_09_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(T5T_09_BT.LU_COUNTER,1,T5T_09_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_T5T_09_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(T5T_09_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_XO2_04_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(XO2_04_BT.RAMP_CNT,1,XO2_04_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_XO2_04_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(XO2_04_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_XO2_04_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(XO2_04_BT.RAMP_CNT,1,XO2_04_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_XO2_04_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(XO2_04_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_XO2_04_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(XO2_04_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_XO2_04_P","One shot the calculated pulse time going negative.","OTE(XO2_04_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_XO2_04_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(XO2_04_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_XO2_04_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(XO2_04_BT.SIM_PULSE_TIME,XO2_04_BTx.PULSE_PERIOD,XO2_04_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_XO2_04_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(XO2_04_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_XO2_04_P","Count the encoder pulses.","ADD(XO2_04_BT.ACCUM,1,XO2_04_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_XO2_04_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,XO2_04_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_XO2_04_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(XO2_04_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_XO2_04_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(XO2_04_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_XO2_04_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(XO2_04_BT.LU_COUNTER,1,XO2_04_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_XO2_04_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(XO2_04_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","BT_XO2_05_P","****************************************************************$NThis subroutine monitors conveyor control and generates a simulated encoder pulse for use throughout the program.$NThis pulse is primarily used in tracking routines to track the bags.$NThe pseudo encoders are programmed to simulate ramp up and down of the conveyor upon starting and stopping.  A pulse counter is used for this.$N****************************************************************$N$NIf the conveyor is running, and the ramp count is not done, increment the ramp counter on each pulse generated.","ADD(XO2_05_BT.RAMP_CNT,1,XO2_05_BT.RAMP_CNT)","0"
RCOMMENT,"MainProgram","BT_XO2_05_P","If the ramp count is greater than or equal to the setpoint, the ramp count is done.","OTE(XO2_05_BT.RAMP_CNT_DN)","1"
RCOMMENT,"MainProgram","BT_XO2_05_P","If the conveyor is not running, decrement the ramp counter on each pulse generated.","SUB(XO2_05_BT.RAMP_CNT,1,XO2_05_BT.RAMP_CNT)","2"
RCOMMENT,"MainProgram","BT_XO2_05_P","If the ramp count is greater than zero, then consider the conveyor to be moving.","OTE(XO2_05_BT.MOVING)","3"
RCOMMENT,"MainProgram","BT_XO2_05_P","Upon the conveyor starting, calculate the CST value at which the first internal pulse should be generated.$NAlso run the ramp timer when the $Qconv_run$Q bit is on.","TON(XO2_05_BT.RAMP_UP_TMR,?,?)","5"
RCOMMENT,"MainProgram","BT_XO2_05_P","One shot the calculated pulse time going negative.","OTE(XO2_05_BT.SIM_PULSE_TIME_NEG_MEM)","7"
RCOMMENT,"MainProgram","BT_XO2_05_P","When the calculated pulse time is negative, but the CST is still positive, then seal in the $Qrollover$Q bit.","OTE(XO2_05_BT.SIM_PULSE_ROLL)","8"
RCOMMENT,"MainProgram","BT_XO2_05_P","If the CST is greater than the calculated pulse time, then turn on the internal pulse bit, and calculate the next pulse time.  If the CST/pulse time are at a rollover point, don$'t pulse until both are negative.$NIf the CST goes negative, but the calculated pulse time is positive, then that means that the CST has actually surpassed the calculated pulse time, so pulse and calculate new pulse time.","ADD(XO2_05_BT.SIM_PULSE_TIME,XO2_05_BTx.PULSE_PERIOD,XO2_05_BT.SIM_PULSE_TIME)","9"
RCOMMENT,"MainProgram","BT_XO2_05_P","If the $Qconv_run$Q bit is on and the ramp count is done, then create BT_PULSE output with the internal pulse bit.$NIf the $Qconv_run$Q bit is off, then create BT_PULSE output until the ramp count reaches zero (i.e. $QMOVING$Q bit is off).","OTE(XO2_05_BT.BT_PULSE)","10"
RCOMMENT,"MainProgram","BT_XO2_05_P","Count the encoder pulses.","ADD(XO2_05_BT.ACCUM,1,XO2_05_BT.ACCUM)","11"
RCOMMENT,"MainProgram","BT_XO2_05_P","On the timed pulse, record the encoder pulse count and reset the counter.","MOV(0,XO2_05_BT.ACCUM)","12"
RCOMMENT,"MainProgram","BT_XO2_05_P","When the motor is on, run the fault timer.  Reset the timer each time a pulse is detected.  This timer detects when no encoder pulses are being generated.","TON(XO2_05_BT.FAULT_TIMER,?,?)","13"
RCOMMENT,"MainProgram","BT_XO2_05_P","When the difference between the CST and the SIM Pulse Time is greater than the Pulse Period, or the fault timer detected no encoder pulses being generated, or the Primary Chassis has switched, trigger a Lockup","OTE(XO2_05_BT.LU_DET)","14"
RCOMMENT,"MainProgram","BT_XO2_05_P","Capture a lockup condition for troubleshooting purposes by programmers.","ADD(XO2_05_BT.LU_COUNTER,1,XO2_05_BT.LU_COUNTER)","15"
RCOMMENT,"MainProgram","BT_XO2_05_P","The configuration counter allows you to configure and evaluate the ramp counter setting of the pseudo BT. To evaluate the accuracy do the following:$N$N-Toggle CFG_RAMP_UP to OFF.$N-Turn off the downstream conveyor.$N-Drop a bag upstream of the head end PE of the pseudo BT conveyor and allow it to head end stop.$N-Restart the downstream conveyor and allow the bag to transfer onto the downstream conveyor.$N-Measure the bag with a measuring tape.$N-Divide the bag$'s length by the pseudo BT$'s resolution.$N-The CFG_CNT should match what you$'ve calculated as the bag$'s length in pulses.$N$NNotes:$N-------------$N-For contactor controlled conveyors, the ramp up is usually almost instantaneous and the ramp down is longer.$N-For VFD belts with a configured ramp setting, the ramp up and ramp down are usually the same.","CLR(XO2_05_BT.CFG_CNT)","16"
RCOMMENT,"MainProgram","C2T_17_MRG","Merge Routine - Fixed Gap size$N*********************************************$N$NThis rung will fill the mainline bit shift register with a 1 when the merge inhibit photoeye is blocked.","OTL(C2T_17_MRG.MainLineBS[1].15)","0"
RCOMMENT,"MainProgram","C2T_17_MRG","For each mainline belt tach pulse do the following:$NBit shift right the mainline bit shift register$NIncrement the leading gap counter accumulator","ADD(1,C2T_17_MRG.Lead_Gap_Acc,C2T_17_MRG.Lead_Gap_Acc)","1"
RCOMMENT,"MainProgram","C2T_17_MRG","This rung will add the distance the bag on the merge has coasted to the required minimum leading gap.$NThe variable $Q_MRGx.Lead_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged behind.","ADD(C2T_17_MRG.BagPastPE,C2T_17_MRGx.Lead_Gap,C2T_17_MRG.Lead_Gap)","2"
RCOMMENT,"MainProgram","C2T_17_MRG","As the BSR is unloading ones from the mainline bit shift register at element zero bit zero clear the leading gap counter accumulator.$NThis insures the leading gap counter only increments based on the tail of the mainline bag.","CLR(C2T_17_MRG.Lead_Gap_Acc)","3"
RCOMMENT,"MainProgram","C2T_17_MRG","Once the leading gap counter has accumulated to the leading gap constant the merge behind condition has been met.","OTE(C2T_17_MRG.Lead_Gap_DN)","4"
RCOMMENT,"MainProgram","C2T_17_MRG","Sync Run logic for non tracked merges.$NThis allows the merge to restart when the mainline stops and a bag is mid merge","RES(C2T_17_MRG.SyncRunTmr)","5"
RCOMMENT,"MainProgram","C2T_17_MRG","On the positive transition of the photoeye seal, populate the merge line bit shift registers.$NThe merge line bit shift registers are compared to the mainline bit shift registers to see if a bag can merge without crashing into another bag.$NThe variable $Q_MRGx.Trail_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged ahead of.$NThe variable $Q_MRGx.MinLength$Q is used when the merging bag does not have its length defined.  In such a case, you must assume the bag is the max size the system is designed to handle.$NIf the bag does have its length defined, the bag$'s length is added to $Q_MRGx.Trail_Gap$Q to define the value populated into the merge line shift register.$NThe variable $Q_MRGx.MaxLength$Q represents the number of the highest element in the $QMrgLenMask$Q arrays.  If the bag length + gap ends up greater than $Q_MRGx.MaxLength$Q, then $Q_MRGx.MaxLength$Q is used.","CLR(C2T_17_MRG.BagPastPE)","8"
RCOMMENT,"MainProgram","C2T_17_MRG","Shift the merge line bit shift one position for each pulse detected after the photoeye seal has been on but the bag is not merging as detected by the merge seal.$NThis will adjust the merge line bit shift register for any coasting of the merge conveyor.","ADD(1,C2T_17_MRG.BagPastPE,C2T_17_MRG.BagPastPE)","9"
RCOMMENT,"MainProgram","C2T_17_MRG","This rung compares the mainline bit shift registers to the merge line bit shift registers.$NIf the mainline bit shift register has ones in the merge line bit shift register it will be passed through to the interference array.","AND(C2T_17_MRG.MainLineBS[2],C2T_17_MRG.MrgLineBS[2],C2T_17_MRG.Intrfr[2])","10"
RCOMMENT,"MainProgram","C2T_17_MRG","If the interference arrays are empty then the merge ahead conditions have been met.$NIf the leading gap accumulator is done then the merge behind conditions have been met.$NSet the merge ok bit and generate a positive transition when the mainline is clear for a bag to merge in.","OTE(C2T_17_MRG.MrgOK)","11"
RCOMMENT,"MainProgram","C2T_17_MRG","If there are no faults on the merge conveyor, the photoeye seal is set and the merge ok bit is on then seal on the merge seal bit.$NThe merge seal bit is used in the motor logic to turn on the merge conveyor.","OTU(C2T_17_MRG.Hold_Align)","12"
RCOMMENT,"MainProgram","C2T_17_MRG","Priority logic below$N***********************************************************$N$NAccumulate the Mainline priority timer if a bag is waiting on the merge and the mainline is running","RTO(C2T_17_MRG.MLPriorityTmr,?,?)","13"
RCOMMENT,"MainProgram","C2T_17_MRG","Turn on the Priority stop bit when a bag has been waiting on the merge for the time the priority timer has been set to","OTE(C2T_17_MRG.PriorityStop)","14"
RCOMMENT,"MainProgram","C2T_17_MRG","Accumulate the Merge line priority timer while in priority stop mode and the merge is actively merging bags onto the mainline","RTO(C2T_17_MRG.MrgLPriorityTmr,?,?)","15"
RCOMMENT,"MainProgram","C2T_17_MRG","Reset the Merge line priority timer if a bag merges from the merge before entering priority mode","RES(C2T_17_MRG.MLPriorityTmr)","16"
RCOMMENT,"MainProgram","C2T_17_MRG","Reset priority timers if there is no bag flow on the merge for X amount of time","RES(C2T_17_MRG.MrgLPriorityTmr)","17"
RCOMMENT,"MainProgram","C2T_17_MRG","Reset priority timers once the merge line has had priority for the preset time","RES(C2T_17_MRG.MLPriorityTmr)","18"
RCOMMENT,"MainProgram","C2T_17_MRG","Detect active bag flow on the merge","TON(C2T_17_MRG.MrgLBagflow,?,?)","19"
RCOMMENT,"MainProgram","C2T_17_MRG","Merge Run Control$N*************************************************$N$NReset the merge run timer when the merge, pre merge, pre pre merge photo-eyes have been blocked, or during a system startup","RES(C2T_17_MRG.MergeRunTmr)","20"
RCOMMENT,"MainProgram","C2T_17_MRG","Run the merge conveyor for the designated merge run time","RTO(C2T_17_MRG.MergeRunTmr,?,?)","21"
RCOMMENT,"MainProgram","C2T_17_MRG","When a bag merges, send a bag Arrival message to the UL.$N","JSR(R_MSG_TO_UL_Add,0)","22"
RCOMMENT,"MainProgram","C2T_17_MRG_CAPT","Merge Distance capture routine.$NOnly call routine when setting up merge or testing merge$N*******************************************************************************$N$NClear the tail to head counter when a bag unblocks the capture photo-eye","MOV(0,C2T_17_MRG.TailHeadAcc)","0"
RCOMMENT,"MainProgram","C2T_17_MRG_CAPT","When a bag blocks the capture photo-eye, capture the current values of the: $NHead to Head count$NTail to head count.$Nand Zero the Head to Head count","MOV(0,C2T_17_MRG.HeadHeadAcc)","1"
RCOMMENT,"MainProgram","C2T_17_MRG_CAPT","For each pulse of the encoder increment the Head to Head and Tail the Head count","ADD(1,C2T_17_MRG.TailHeadAcc,C2T_17_MRG.TailHeadAcc)","2"
RCOMMENT,"MainProgram","C2T_17_MRG_CAPT","Computer the bags Head to Head distance based on the number of pulses received during the last window","CPT(C2T_17_MRG.LastBagMrgWndo,C2T_17_MRG.HeadHeadCnt*O2T_10_BTx.RES)","3"
RCOMMENT,"MainProgram","C2T_17_MRG_CAPT","Computer the Tail to head distance based on the number of pulses received during the last gap","CPT(C2T_17_MRG.LastBagGapDist,C2T_17_MRG.TailHeadCnt*O2T_10_BTx.RES)","4"
RCOMMENT,"MainProgram","C2T_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","C2T_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","C2T_FIELD_IND","Control Station$N$N","NOP()","6"
RCOMMENT,"MainProgram","C2T_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","11"
RCOMMENT,"MainProgram","C2T_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","C2T_GFX","Conveyor Graphic$N$N$N","MOV(C2T_17_MTR.G,G_C2T_17_STS)","1"
RCOMMENT,"MainProgram","C2T_GFX","Conveyor Graphic$N$N$N","MOV(C2T_16_MTR.G,G_C2T_16_STS)","2"
RCOMMENT,"MainProgram","C2T_GFX","Conveyor Graphic$N$N$N","MOV(C2T_15_MTR.G,G_C2T_15_STS)","3"
RCOMMENT,"MainProgram","C2T_GFX","Conveyor Graphic$N$N$N","MOV(C2T_14_MTR.G,G_C2T_14_STS)","4"
RCOMMENT,"MainProgram","C2T_GFX","Conveyor Graphic$N$N$N","MOV(C2T_13_MTR.G,G_C2T_13_STS)","5"
RCOMMENT,"MainProgram","C2T_GFX","Conveyor Graphic$N$N$N","MOV(C2T_12_MTR.G,G_C2T_12_STS)","6"
RCOMMENT,"MainProgram","C2T_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","C2T_JAMS","Jam Detection$N$N","RTO(C2T_17_PE.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","C2T_JAMS","Jam Detection$N$N","RTO(C2T_16_PE.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","C2T_JAMS","Jam Detection$N$N","RTO(C2T_15_PE.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","C2T_JAMS","Jam Detection$N$N","RTO(C2T_14_PE.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","C2T_JAMS","Jam Detection$N$N","RTO(C2T_13_PE.JAM_TMR,?,?)","13"
RCOMMENT,"MainProgram","C2T_JAMS","Jam Detection$N$N","RTO(C2T_12_PE.JAM_TMR,?,?)","16"
RCOMMENT,"MainProgram","C2T_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","C2T_MTRS","System Start Request","OTE(C2T.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","C2T_MTRS","Motor run expander.","OTE(C2T.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","C2T_MTRS","PE Grouping","OTE(C2T.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","C2T_MTRS","Reset Run Timer","RES(C2T.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","C2T_MTRS","Send downstream start request","OTE(C2T.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","C2T_MTRS","Run Timer","RTO(C2T.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","C2T_MTRS","Run Latch","OTE(C2T.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","C2T_MTRS","Motor C2T_17$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","C2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(C2T_17_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","C2T_MTRS","JRB Filter","OTE(C2T_17_MTR.JRB_FILT)","10"
RCOMMENT,"MainProgram","C2T_MTRS","Motor No Fault detection","OTE(C2T_17_MTR.NO_FAULT)","11"
RCOMMENT,"MainProgram","C2T_MTRS","Internal Motor timer.","TON(C2T_17_MTR.IM_TMR,?,?)","12"
RCOMMENT,"MainProgram","C2T_MTRS","Internal Motor.","OTE(C2T_17_MTR.INTL_MTR)","13"
RCOMMENT,"MainProgram","C2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(C2T_17_MTR.T2H_SPACE_TMR)","14"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor Running.","OTE(C2T_17_MTR.START_EN)","18"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(C2T_17_MTR.ON_TMR,?,?)","22"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(C2T_17_MTR.OFF_TMR,?,?)","23"
RCOMMENT,"MainProgram","C2T_MTRS","Motor C2T_16$N$N$N","NOP()","24"
RCOMMENT,"MainProgram","C2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(C2T_16_MTR.ANTI_CASC)","25"
RCOMMENT,"MainProgram","C2T_MTRS","Motor No Fault detection","OTE(C2T_16_MTR.NO_FAULT)","26"
RCOMMENT,"MainProgram","C2T_MTRS","Internal Motor timer.","TON(C2T_16_MTR.IM_TMR,?,?)","27"
RCOMMENT,"MainProgram","C2T_MTRS","Internal Motor.","OTE(C2T_16_MTR.INTL_MTR)","28"
RCOMMENT,"MainProgram","C2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(C2T_16_MTR.T2H_SPACE_TMR)","29"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor Running.","OTE(C2T_16_MTR.START_EN)","33"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(C2T_16_MTR.ON_TMR,?,?)","36"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(C2T_16_MTR.OFF_TMR,?,?)","37"
RCOMMENT,"MainProgram","C2T_MTRS","Motor C2T_15$N$N$N","NOP()","38"
RCOMMENT,"MainProgram","C2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(C2T_15_MTR.ANTI_CASC)","39"
RCOMMENT,"MainProgram","C2T_MTRS","Motor No Fault detection","OTE(C2T_15_MTR.NO_FAULT)","40"
RCOMMENT,"MainProgram","C2T_MTRS","Internal Motor timer.","TON(C2T_15_MTR.IM_TMR,?,?)","41"
RCOMMENT,"MainProgram","C2T_MTRS","Internal Motor.","OTE(C2T_15_MTR.INTL_MTR)","42"
RCOMMENT,"MainProgram","C2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(C2T_15_MTR.T2H_SPACE_TMR)","43"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor Running.","OTE(C2T_15_MTR.START_EN)","47"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(C2T_15_MTR.ON_TMR,?,?)","50"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(C2T_15_MTR.OFF_TMR,?,?)","51"
RCOMMENT,"MainProgram","C2T_MTRS","Motor C2T_14$N$N$N","NOP()","52"
RCOMMENT,"MainProgram","C2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(C2T_14_MTR.ANTI_CASC)","53"
RCOMMENT,"MainProgram","C2T_MTRS","Motor No Fault detection","OTE(C2T_14_MTR.NO_FAULT)","54"
RCOMMENT,"MainProgram","C2T_MTRS","Internal Motor timer.","TON(C2T_14_MTR.IM_TMR,?,?)","55"
RCOMMENT,"MainProgram","C2T_MTRS","Internal Motor.","OTE(C2T_14_MTR.INTL_MTR)","56"
RCOMMENT,"MainProgram","C2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(C2T_14_MTR.T2H_SPACE_TMR)","57"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor Running.","OTE(C2T_14_MTR.START_EN)","61"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(C2T_14_MTR.ON_TMR,?,?)","64"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(C2T_14_MTR.OFF_TMR,?,?)","65"
RCOMMENT,"MainProgram","C2T_MTRS","Motor C2T_13$N$N$N","NOP()","66"
RCOMMENT,"MainProgram","C2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(C2T_13_MTR.ANTI_CASC)","67"
RCOMMENT,"MainProgram","C2T_MTRS","Motor No Fault detection","OTE(C2T_13_MTR.NO_FAULT)","68"
RCOMMENT,"MainProgram","C2T_MTRS","Internal Motor timer.","TON(C2T_13_MTR.IM_TMR,?,?)","69"
RCOMMENT,"MainProgram","C2T_MTRS","Internal Motor.","OTE(C2T_13_MTR.INTL_MTR)","70"
RCOMMENT,"MainProgram","C2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(C2T_13_MTR.T2H_SPACE_TMR)","71"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor Running.","OTE(C2T_13_MTR.START_EN)","75"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(C2T_13_MTR.ON_TMR,?,?)","78"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(C2T_13_MTR.OFF_TMR,?,?)","79"
RCOMMENT,"MainProgram","C2T_MTRS","Motor C2T_12$N$N$N","NOP()","80"
RCOMMENT,"MainProgram","C2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(C2T_12_MTR.ANTI_CASC)","81"
RCOMMENT,"MainProgram","C2T_MTRS","Motor No Fault detection","OTE(C2T_12_MTR.NO_FAULT)","82"
RCOMMENT,"MainProgram","C2T_MTRS","Internal Motor timer.","TON(C2T_12_MTR.IM_TMR,?,?)","83"
RCOMMENT,"MainProgram","C2T_MTRS","Internal Motor.","OTE(C2T_12_MTR.INTL_MTR)","84"
RCOMMENT,"MainProgram","C2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(C2T_12_MTR.T2H_SPACE_TMR)","85"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor Running.","OTE(C2T_12_MTR.START_EN)","89"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(C2T_12_MTR.ON_TMR,?,?)","92"
RCOMMENT,"MainProgram","C2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(C2T_12_MTR.OFF_TMR,?,?)","93"
RCOMMENT,"MainProgram","C2T_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","C2T_PE_Filters","Photoeye","OTE(C2T_17_PE.FILT)","1"
RCOMMENT,"MainProgram","C2T_PE_Filters","Photoeye","OTE(C2T_16_PE.FILT)","4"
RCOMMENT,"MainProgram","C2T_PE_Filters","Photoeye","OTE(C2T_15_PE.FILT)","8"
RCOMMENT,"MainProgram","C2T_PE_Filters","Photoeye","OTE(C2T_14_PE.FILT)","12"
RCOMMENT,"MainProgram","C2T_PE_Filters","Photoeye","OTE(C2T_13_PE.FILT)","16"
RCOMMENT,"MainProgram","C2T_PE_Filters","Photoeye","OTE(C2T_12_PE.FILT)","20"
RCOMMENT,"MainProgram","C2T_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","C2T_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","C2T_STATUS","Conveyor Status$N$N$N","NOP()","18"
RCOMMENT,"MainProgram","C2T_STATUS","Conveyor Status$N$N$N","NOP()","34"
RCOMMENT,"MainProgram","C2T_STATUS","Conveyor Status$N$N$N","NOP()","50"
RCOMMENT,"MainProgram","C2T_STATUS","Conveyor Status$N$N$N","NOP()","66"
RCOMMENT,"MainProgram","C2T_STATUS","Conveyor Status$N$N$N","NOP()","82"
RCOMMENT,"MainProgram","C2T_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","C2T_VFDS","Motor C2T_17 VFD$N***************************$N","TON(C2T_17_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","C2T_VFDS","Motor C2T_16 VFD$N***************************$N","TON(C2T_16_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","C2T_VFDS","Motor C2T_15 VFD$N***************************$N","TON(C2T_15_VFD.POWERED_DLY_TMR,?,?)","5"
RCOMMENT,"MainProgram","C2T_VFDS","Motor C2T_14 VFD$N***************************$N","TON(C2T_14_VFD.POWERED_DLY_TMR,?,?)","7"
RCOMMENT,"MainProgram","C2T_VFDS","Motor C2T_13 VFD$N***************************$N","TON(C2T_13_VFD.POWERED_DLY_TMR,?,?)","9"
RCOMMENT,"MainProgram","C2T_VFDS","Motor C2T_12 VFD$N***************************$N","TON(C2T_12_VFD.POWERED_DLY_TMR,?,?)","11"
RCOMMENT,"MainProgram","CL12T_36_MRG","Merge Routine - Fixed Gap size$N*********************************************$N$NThis rung will fill the mainline bit shift register with a 1 when the merge inhibit photoeye is blocked.","OTL(CL12T_36_MRG.MainLineBS[1].15)","0"
RCOMMENT,"MainProgram","CL12T_36_MRG","For each mainline belt tach pulse do the following:$NBit shift right the mainline bit shift register$NIncrement the leading gap counter accumulator","ADD(1,CL12T_36_MRG.Lead_Gap_Acc,CL12T_36_MRG.Lead_Gap_Acc)","1"
RCOMMENT,"MainProgram","CL12T_36_MRG","This rung will add the distance the bag on the merge has coasted to the required minimum leading gap.$NThe variable $Q_MRGx.Lead_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged behind.","ADD(CL12T_36_MRG.BagPastPE,CL12T_36_MRGx.Lead_Gap,CL12T_36_MRG.Lead_Gap)","2"
RCOMMENT,"MainProgram","CL12T_36_MRG","As the BSR is unloading ones from the mainline bit shift register at element zero bit zero clear the leading gap counter accumulator.$NThis insures the leading gap counter only increments based on the tail of the mainline bag.","CLR(CL12T_36_MRG.Lead_Gap_Acc)","3"
RCOMMENT,"MainProgram","CL12T_36_MRG","Once the leading gap counter has accumulated to the leading gap constant the merge behind condition has been met.","OTE(CL12T_36_MRG.Lead_Gap_DN)","4"
RCOMMENT,"MainProgram","CL12T_36_MRG","Sync Run logic for non tracked merges.$NThis allows the merge to restart when the mainline stops and a bag is mid merge","RES(CL12T_36_MRG.SyncRunTmr)","5"
RCOMMENT,"MainProgram","CL12T_36_MRG","On the positive transition of the photoeye seal, populate the merge line bit shift registers.$NThe merge line bit shift registers are compared to the mainline bit shift registers to see if a bag can merge without crashing into another bag.$NThe variable $Q_MRGx.Trail_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged ahead of.$NThe variable $Q_MRGx.MinLength$Q is used when the merging bag does not have its length defined.  In such a case, you must assume the bag is the max size the system is designed to handle.$NIf the bag does have its length defined, the bag$'s length is added to $Q_MRGx.Trail_Gap$Q to define the value populated into the merge line shift register.$NThe variable $Q_MRGx.MaxLength$Q represents the number of the highest element in the $QMrgLenMask$Q arrays.  If the bag length + gap ends up greater than $Q_MRGx.MaxLength$Q, then $Q_MRGx.MaxLength$Q is used.","CLR(CL12T_36_MRG.BagPastPE)","8"
RCOMMENT,"MainProgram","CL12T_36_MRG","Shift the merge line bit shift one position for each pulse detected after the photoeye seal has been on but the bag is not merging as detected by the merge seal.$NThis will adjust the merge line bit shift register for any coasting of the merge conveyor.","ADD(1,CL12T_36_MRG.BagPastPE,CL12T_36_MRG.BagPastPE)","9"
RCOMMENT,"MainProgram","CL12T_36_MRG","This rung compares the mainline bit shift registers to the merge line bit shift registers.$NIf the mainline bit shift register has ones in the merge line bit shift register it will be passed through to the interference array.","AND(CL12T_36_MRG.MainLineBS[2],CL12T_36_MRG.MrgLineBS[2],CL12T_36_MRG.Intrfr[2])","10"
RCOMMENT,"MainProgram","CL12T_36_MRG","If the interference arrays are empty then the merge ahead conditions have been met.$NIf the leading gap accumulator is done then the merge behind conditions have been met.$NSet the merge ok bit and generate a positive transition when the mainline is clear for a bag to merge in.","OTE(CL12T_36_MRG.MrgOK)","11"
RCOMMENT,"MainProgram","CL12T_36_MRG","If there are no faults on the merge conveyor, the photoeye seal is set and the merge ok bit is on then seal on the merge seal bit.$NThe merge seal bit is used in the motor logic to turn on the merge conveyor.","OTU(CL12T_36_MRG.Hold_Align)","12"
RCOMMENT,"MainProgram","CL12T_36_MRG","Priority logic below$N***********************************************************$N$NAccumulate the Mainline priority timer if a bag is waiting on the merge and the mainline is running","RTO(CL12T_36_MRG.MLPriorityTmr,?,?)","13"
RCOMMENT,"MainProgram","CL12T_36_MRG","Turn on the Priority stop bit when a bag has been waiting on the merge for the time the priority timer has been set to","OTE(CL12T_36_MRG.PriorityStop)","14"
RCOMMENT,"MainProgram","CL12T_36_MRG","Accumulate the Merge line priority timer while in priority stop mode and the merge is actively merging bags onto the mainline","RTO(CL12T_36_MRG.MrgLPriorityTmr,?,?)","15"
RCOMMENT,"MainProgram","CL12T_36_MRG","Reset the Merge line priority timer if a bag merges from the merge before entering priority mode","RES(CL12T_36_MRG.MLPriorityTmr)","16"
RCOMMENT,"MainProgram","CL12T_36_MRG","Reset priority timers if there is no bag flow on the merge for X amount of time","RES(CL12T_36_MRG.MrgLPriorityTmr)","17"
RCOMMENT,"MainProgram","CL12T_36_MRG","Reset priority timers once the merge line has had priority for the preset time","RES(CL12T_36_MRG.MLPriorityTmr)","18"
RCOMMENT,"MainProgram","CL12T_36_MRG","Detect active bag flow on the merge","TON(CL12T_36_MRG.MrgLBagflow,?,?)","19"
RCOMMENT,"MainProgram","CL12T_36_MRG","Merge Run Control$N*************************************************$N$NReset the merge run timer when the merge, pre merge, pre pre merge photo-eyes have been blocked, or during a system startup","RES(CL12T_36_MRG.MergeRunTmr)","20"
RCOMMENT,"MainProgram","CL12T_36_MRG","Run the merge conveyor for the designated merge run time","RTO(CL12T_36_MRG.MergeRunTmr,?,?)","21"
RCOMMENT,"MainProgram","CL12T_36_MRG","When a bag merges, send a bag Arrival message to the UL.$N","JSR(R_MSG_TO_UL_Add,0)","22"
RCOMMENT,"MainProgram","CL12T_36_MRG_CAPT","Merge Distance capture routine.$NOnly call routine when setting up merge or testing merge$N*******************************************************************************$N$NClear the tail to head counter when a bag unblocks the capture photo-eye","MOV(0,CL12T_36_MRG.TailHeadAcc)","0"
RCOMMENT,"MainProgram","CL12T_36_MRG_CAPT","When a bag blocks the capture photo-eye, capture the current values of the: $NHead to Head count$NTail to head count.$Nand Zero the Head to Head count","MOV(0,CL12T_36_MRG.HeadHeadAcc)","1"
RCOMMENT,"MainProgram","CL12T_36_MRG_CAPT","For each pulse of the encoder increment the Head to Head and Tail the Head count","ADD(1,CL12T_36_MRG.TailHeadAcc,CL12T_36_MRG.TailHeadAcc)","2"
RCOMMENT,"MainProgram","CL12T_36_MRG_CAPT","Computer the bags Head to Head distance based on the number of pulses received during the last window","CPT(CL12T_36_MRG.LastBagMrgWndo,CL12T_36_MRG.HeadHeadCnt*O4T_20_BTx.RES)","3"
RCOMMENT,"MainProgram","CL12T_36_MRG_CAPT","Computer the Tail to head distance based on the number of pulses received during the last gap","CPT(CL12T_36_MRG.LastBagGapDist,CL12T_36_MRG.TailHeadCnt*O4T_20_BTx.RES)","4"
RCOMMENT,"MainProgram","CL12T_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL12T_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","CL12T_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL12T_GFX","Conveyor Graphic$N$N$N","MOV(CL12T_36_MTR.G,G_CL12T_36_STS)","1"
RCOMMENT,"MainProgram","CL12T_GFX","Conveyor Graphic$N$N$N","MOV(CL12T_35_MTR.G,G_CL12T_35_STS)","2"
RCOMMENT,"MainProgram","CL12T_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL12T_JAMS","Jam Detection$N$N","RTO(CL12T_36_PE.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","CL12T_JAMS","Jam Detection$N$N","RTO(CL12T_35_PE.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","CL12T_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL12T_MTRS","System Start Request","OTE(CL12T.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","CL12T_MTRS","Motor run expander.","OTE(CL12T.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","CL12T_MTRS","PE Grouping","OTE(CL12T.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","CL12T_MTRS","Reset Run Timer","RES(CL12T.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","CL12T_MTRS","Send downstream start request","OTE(CL12T.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","CL12T_MTRS","Run Timer","RTO(CL12T.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","CL12T_MTRS","Run Latch","OTE(CL12T.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","CL12T_MTRS","Motor CL12T_36$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","CL12T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL12T_36_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","CL12T_MTRS","JRB Filter","OTE(CL12T_36_MTR.JRB_FILT)","10"
RCOMMENT,"MainProgram","CL12T_MTRS","Motor No Fault detection","OTE(CL12T_36_MTR.NO_FAULT)","11"
RCOMMENT,"MainProgram","CL12T_MTRS","Internal Motor timer.","TON(CL12T_36_MTR.IM_TMR,?,?)","12"
RCOMMENT,"MainProgram","CL12T_MTRS","Internal Motor.","OTE(CL12T_36_MTR.INTL_MTR)","13"
RCOMMENT,"MainProgram","CL12T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL12T_36_MTR.T2H_SPACE_TMR)","14"
RCOMMENT,"MainProgram","CL12T_MTRS","Conveyor Running.","OTE(CL12T_36_MTR.START_EN)","18"
RCOMMENT,"MainProgram","CL12T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL12T_36_MTR.ON_TMR,?,?)","22"
RCOMMENT,"MainProgram","CL12T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL12T_36_MTR.OFF_TMR,?,?)","23"
RCOMMENT,"MainProgram","CL12T_MTRS","Motor CL12T_35$N$N$N","NOP()","24"
RCOMMENT,"MainProgram","CL12T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL12T_35_MTR.ANTI_CASC)","25"
RCOMMENT,"MainProgram","CL12T_MTRS","Motor No Fault detection","OTE(CL12T_35_MTR.NO_FAULT)","26"
RCOMMENT,"MainProgram","CL12T_MTRS","Internal Motor timer.","TON(CL12T_35_MTR.IM_TMR,?,?)","27"
RCOMMENT,"MainProgram","CL12T_MTRS","Internal Motor.","OTE(CL12T_35_MTR.INTL_MTR)","28"
RCOMMENT,"MainProgram","CL12T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL12T_35_MTR.T2H_SPACE_TMR)","29"
RCOMMENT,"MainProgram","CL12T_MTRS","Conveyor Running.","OTE(CL12T_35_MTR.START_EN)","33"
RCOMMENT,"MainProgram","CL12T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL12T_35_MTR.ON_TMR,?,?)","36"
RCOMMENT,"MainProgram","CL12T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL12T_35_MTR.OFF_TMR,?,?)","37"
RCOMMENT,"MainProgram","CL12T_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL12T_PE_Filters","Photoeye","OTE(CL12T_36_PE.FILT)","1"
RCOMMENT,"MainProgram","CL12T_PE_Filters","Photoeye","OTE(CL12T_35_PE.FILT)","4"
RCOMMENT,"MainProgram","CL12T_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL12T_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","CL12T_STATUS","Conveyor Status$N$N$N","NOP()","17"
RCOMMENT,"MainProgram","CL12T_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL12T_VFDS","Motor CL12T_36 VFD$N***************************$N","TON(CL12T_36_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","CL12T_VFDS","Motor CL12T_35 VFD$N***************************$N","TON(CL12T_35_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","4"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","7"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","10"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","15"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","18"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","21"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","26"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","31"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","36"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","41"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","46"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Control Station$N$N","NOP()","51"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","56"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","60"
RCOMMENT,"MainProgram","CL1T_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","64"
RCOMMENT,"MainProgram","CL1T_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_26_MTR.G,G_CL1T_26_STS)","1"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_25_MTR.G,G_CL1T_25_STS)","2"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_24_MTR.G,G_CL1T_24_STS)","3"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_23_MTR.G,G_CL1T_23_STS)","4"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_22_MTR.G,G_CL1T_22_STS)","5"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_21_MTR.G,G_CL1T_21_STS)","6"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_20_MTR.G,G_CL1T_20_STS)","7"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_19_MTR.G,G_CL1T_19_STS)","8"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_18_MTR.G,G_CL1T_18_STS)","9"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_17_MTR.G,G_CL1T_17_STS)","10"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_16_MTR.G,G_CL1T_16_STS)","11"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_15_MTR.G,G_CL1T_15_STS)","12"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_14_MTR.G,G_CL1T_14_STS)","13"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_13_MTR.G,G_CL1T_13_STS)","14"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_12_MTR.G,G_CL1T_12_STS)","15"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_11_MTR.G,G_CL1T_11_STS)","16"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_10_MTR.G,G_CL1T_10_STS)","17"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_09_MTR.G,G_CL1T_09_STS)","18"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_08_MTR.G,G_CL1T_08_STS)","19"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_07_MTR.G,G_CL1T_07_STS)","20"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_06_MTR.G,G_CL1T_06_STS)","21"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_05_MTR.G,G_CL1T_05_STS)","22"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_04_MTR.G,G_CL1T_04_STS)","23"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_03_MTR.G,G_CL1T_03_STS)","24"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_02_MTR.G,G_CL1T_02_STS)","25"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(CL1T_01_MTR.G,G_CL1T_01_STS)","26"
RCOMMENT,"MainProgram","CL1T_GFX","Conveyor Graphic$N$N$N","MOV(HX1T_10A_MTR.G,G_HX1T_10A_STS)","27"
RCOMMENT,"MainProgram","CL1T_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_26_PE1.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_26_PE2.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_24_PE.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_23_PE.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_21_PE.JAM_TMR,?,?)","13"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_20_PE.JAM_TMR,?,?)","16"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_19_PE.JAM_TMR,?,?)","19"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_18_PE.JAM_TMR,?,?)","22"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_17_PE.JAM_TMR,?,?)","25"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_16_PE.JAM_TMR,?,?)","28"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_15_PE.JAM_TMR,?,?)","31"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_14_PE.JAM_TMR,?,?)","34"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_13_PE.JAM_TMR,?,?)","37"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_12_PE.JAM_TMR,?,?)","40"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_11_PE.JAM_TMR,?,?)","43"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_10_PE.JAM_TMR,?,?)","46"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_09_PE.JAM_TMR,?,?)","49"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_08_PE.JAM_TMR,?,?)","52"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_07_PE.JAM_TMR,?,?)","55"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_06_PE.JAM_TMR,?,?)","58"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_05_PE.JAM_TMR,?,?)","61"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_04_PE.JAM_TMR,?,?)","64"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_03_PE.JAM_TMR,?,?)","67"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_02_PE.JAM_TMR,?,?)","70"
RCOMMENT,"MainProgram","CL1T_JAMS","Jam Detection$N$N","RTO(CL1T_01_PE.JAM_TMR,?,?)","73"
RCOMMENT,"MainProgram","CL1T_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL1T_MTRS","System Start Request","OTE(CL1T.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor run expander.","OTE(CL1T.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","CL1T_MTRS","PE Grouping","OTE(CL1T.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","CL1T_MTRS","Reset Run Timer","RES(CL1T.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","CL1T_MTRS","Send downstream start request","OTE(CL1T.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","CL1T_MTRS","Run Timer","RTO(CL1T.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","CL1T_MTRS","Run Latch","OTE(CL1T.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_26$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_26_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_26_MTR.NO_FAULT)","10"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_26_MTR.IM_TMR,?,?)","11"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_26_MTR.INTL_MTR)","12"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_26_MTR.T2H_SPACE_TMR)","13"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_26_MTR.START_EN)","17"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_26_MTR.ON_TMR,?,?)","20"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_26_MTR.OFF_TMR,?,?)","21"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_25$N$N$N","NOP()","22"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_25_MTR.ANTI_CASC)","23"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_25_MTR.NO_FAULT)","24"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_25_MTR.IM_TMR,?,?)","25"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_25_MTR.INTL_MTR)","26"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_25_MTR.CONV_RUN)","27"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_25_MTR.ON_TMR,?,?)","28"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_25_MTR.OFF_TMR,?,?)","29"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_24$N$N$N","NOP()","30"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_24_MTR.ANTI_CASC)","31"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_24_MTR.NO_FAULT)","32"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_24_MTR.IM_TMR,?,?)","33"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_24_MTR.INTL_MTR)","34"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_24_MTR.T2H_SPACE_TMR)","35"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_24_MTR.START_EN)","39"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_24_MTR.ON_TMR,?,?)","42"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_24_MTR.OFF_TMR,?,?)","43"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_23$N$N$N","NOP()","44"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_23_MTR.ANTI_CASC)","45"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_23_MTR.NO_FAULT)","46"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_23_MTR.IM_TMR,?,?)","47"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_23_MTR.INTL_MTR)","48"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_23_MTR.T2H_SPACE_TMR)","49"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_23_MTR.START_EN)","53"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_23_MTR.ON_TMR,?,?)","56"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_23_MTR.OFF_TMR,?,?)","57"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_22$N$N$N","NOP()","58"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_22_MTR.ANTI_CASC)","59"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_22_MTR.NO_FAULT)","60"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_22_MTR.IM_TMR,?,?)","61"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_22_MTR.INTL_MTR)","62"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_22_MTR.CONV_RUN)","63"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_22_MTR.ON_TMR,?,?)","64"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_22_MTR.OFF_TMR,?,?)","65"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_21$N$N$N","NOP()","66"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_21_MTR.ANTI_CASC)","67"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_21_MTR.NO_FAULT)","68"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_21_MTR.IM_TMR,?,?)","69"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_21_MTR.INTL_MTR)","70"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_21_MTR.T2H_SPACE_TMR)","71"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_21_MTR.START_EN)","75"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_21_MTR.ON_TMR,?,?)","78"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_21_MTR.OFF_TMR,?,?)","79"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_20$N$N$N","NOP()","80"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_20_MTR.ANTI_CASC)","81"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_20_MTR.NO_FAULT)","82"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_20_MTR.IM_TMR,?,?)","83"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_20_MTR.INTL_MTR)","84"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_20_MTR.T2H_SPACE_TMR)","85"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_20_MTR.START_EN)","89"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_20_MTR.ON_TMR,?,?)","92"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_20_MTR.OFF_TMR,?,?)","93"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_19$N$N$N","NOP()","94"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_19_MTR.ANTI_CASC)","95"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_19_MTR.NO_FAULT)","96"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_19_MTR.IM_TMR,?,?)","97"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_19_MTR.INTL_MTR)","98"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_19_MTR.T2H_SPACE_TMR)","99"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_19_MTR.START_EN)","103"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_19_MTR.ON_TMR,?,?)","106"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_19_MTR.OFF_TMR,?,?)","107"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_18$N$N$N","NOP()","108"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_18_MTR.ANTI_CASC)","109"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_18_MTR.NO_FAULT)","110"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_18_MTR.IM_TMR,?,?)","111"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_18_MTR.INTL_MTR)","112"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_18_MTR.T2H_SPACE_TMR)","113"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_18_MTR.START_EN)","117"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_18_MTR.ON_TMR,?,?)","120"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_18_MTR.OFF_TMR,?,?)","121"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_17$N$N$N","NOP()","122"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_17_MTR.ANTI_CASC)","123"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_17_MTR.NO_FAULT)","124"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_17_MTR.IM_TMR,?,?)","125"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_17_MTR.INTL_MTR)","126"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_17_MTR.T2H_SPACE_TMR)","127"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_17_MTR.START_EN)","131"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_17_MTR.ON_TMR,?,?)","134"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_17_MTR.OFF_TMR,?,?)","135"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_16$N$N$N","NOP()","136"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_16_MTR.ANTI_CASC)","137"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_16_MTR.NO_FAULT)","138"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_16_MTR.IM_TMR,?,?)","139"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_16_MTR.INTL_MTR)","140"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_16_MTR.T2H_SPACE_TMR)","141"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_16_MTR.START_EN)","145"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_16_MTR.ON_TMR,?,?)","148"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_16_MTR.OFF_TMR,?,?)","149"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_15$N$N$N","NOP()","150"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_15_MTR.ANTI_CASC)","151"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_15_MTR.NO_FAULT)","152"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_15_MTR.IM_TMR,?,?)","153"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_15_MTR.INTL_MTR)","154"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_15_MTR.T2H_SPACE_TMR)","155"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_15_MTR.START_EN)","159"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_15_MTR.ON_TMR,?,?)","162"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_15_MTR.OFF_TMR,?,?)","163"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_14$N$N$N","NOP()","164"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_14_MTR.ANTI_CASC)","165"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_14_MTR.NO_FAULT)","166"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_14_MTR.IM_TMR,?,?)","167"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_14_MTR.INTL_MTR)","168"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_14_MTR.T2H_SPACE_TMR)","169"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_14_MTR.START_EN)","173"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_14_MTR.ON_TMR,?,?)","176"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_14_MTR.OFF_TMR,?,?)","177"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_13$N$N$N","NOP()","178"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_13_MTR.ANTI_CASC)","179"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_13_MTR.NO_FAULT)","180"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_13_MTR.IM_TMR,?,?)","181"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_13_MTR.INTL_MTR)","182"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_13_MTR.T2H_SPACE_TMR)","183"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_13_MTR.START_EN)","187"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_13_MTR.ON_TMR,?,?)","190"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_13_MTR.OFF_TMR,?,?)","191"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_12$N$N$N","NOP()","192"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_12_MTR.ANTI_CASC)","193"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_12_MTR.NO_FAULT)","194"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_12_MTR.IM_TMR,?,?)","195"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_12_MTR.INTL_MTR)","196"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_12_MTR.T2H_SPACE_TMR)","197"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_12_MTR.START_EN)","201"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_12_MTR.ON_TMR,?,?)","204"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_12_MTR.OFF_TMR,?,?)","205"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_11$N$N$N","NOP()","206"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_11_MTR.ANTI_CASC)","207"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_11_MTR.NO_FAULT)","208"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_11_MTR.IM_TMR,?,?)","209"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_11_MTR.INTL_MTR)","210"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_11_MTR.T2H_SPACE_TMR)","211"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_11_MTR.START_EN)","215"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_11_MTR.ON_TMR,?,?)","218"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_11_MTR.OFF_TMR,?,?)","219"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_10$N$N$N","NOP()","220"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_10_MTR.ANTI_CASC)","221"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_10_MTR.NO_FAULT)","222"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_10_MTR.IM_TMR,?,?)","223"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_10_MTR.INTL_MTR)","224"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_10_MTR.T2H_SPACE_TMR)","225"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_10_MTR.START_EN)","229"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_10_MTR.ON_TMR,?,?)","232"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_10_MTR.OFF_TMR,?,?)","233"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_09$N$N$N","NOP()","234"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_09_MTR.ANTI_CASC)","235"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_09_MTR.NO_FAULT)","236"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_09_MTR.IM_TMR,?,?)","237"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_09_MTR.INTL_MTR)","238"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_09_MTR.T2H_SPACE_TMR)","239"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_09_MTR.START_EN)","243"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_09_MTR.ON_TMR,?,?)","246"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_09_MTR.OFF_TMR,?,?)","247"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_08$N$N$N","NOP()","248"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_08_MTR.ANTI_CASC)","249"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_08_MTR.NO_FAULT)","250"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_08_MTR.IM_TMR,?,?)","251"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_08_MTR.INTL_MTR)","252"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_08_MTR.T2H_SPACE_TMR)","253"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_08_MTR.START_EN)","257"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_08_MTR.ON_TMR,?,?)","260"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_08_MTR.OFF_TMR,?,?)","261"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_07$N$N$N","NOP()","262"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_07_MTR.ANTI_CASC)","263"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_07_MTR.NO_FAULT)","264"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_07_MTR.IM_TMR,?,?)","265"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_07_MTR.INTL_MTR)","266"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_07_MTR.T2H_SPACE_TMR)","267"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_07_MTR.START_EN)","271"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_07_MTR.ON_TMR,?,?)","274"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_07_MTR.OFF_TMR,?,?)","275"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_06$N$N$N","NOP()","276"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_06_MTR.ANTI_CASC)","277"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_06_MTR.NO_FAULT)","278"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_06_MTR.IM_TMR,?,?)","279"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_06_MTR.INTL_MTR)","280"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_06_MTR.T2H_SPACE_TMR)","281"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_06_MTR.START_EN)","285"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_06_MTR.ON_TMR,?,?)","288"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_06_MTR.OFF_TMR,?,?)","289"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_05$N$N$N","NOP()","290"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_05_MTR.ANTI_CASC)","291"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_05_MTR.NO_FAULT)","292"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_05_MTR.IM_TMR,?,?)","293"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_05_MTR.INTL_MTR)","294"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_05_MTR.T2H_SPACE_TMR)","295"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_05_MTR.START_EN)","299"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_05_MTR.ON_TMR,?,?)","302"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_05_MTR.OFF_TMR,?,?)","303"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_04$N$N$N","NOP()","304"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_04_MTR.ANTI_CASC)","305"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_04_MTR.NO_FAULT)","306"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_04_MTR.IM_TMR,?,?)","307"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_04_MTR.INTL_MTR)","308"
RCOMMENT,"MainProgram","CL1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL1T_04_MTR.T2H_SPACE_TMR)","309"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_04_MTR.START_EN)","313"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_04_MTR.ON_TMR,?,?)","316"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_04_MTR.OFF_TMR,?,?)","317"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_03$N$N$N","NOP()","318"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_03_MTR.ANTI_CASC)","319"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_03_MTR.NO_FAULT)","320"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_03_MTR.IM_TMR,?,?)","321"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_03_MTR.INTL_MTR)","322"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_03_MTR.START_EN)","323"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_03_MTR.ON_TMR,?,?)","326"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_03_MTR.OFF_TMR,?,?)","327"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_02$N$N$N","NOP()","328"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_02_MTR.ANTI_CASC)","329"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_02_MTR.NO_FAULT)","330"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_02_MTR.IM_TMR,?,?)","331"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_02_MTR.INTL_MTR)","332"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_02_MTR.START_EN)","333"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_02_MTR.ON_TMR,?,?)","336"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_02_MTR.OFF_TMR,?,?)","337"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor CL1T_01$N$N$N","NOP()","338"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL1T_01_MTR.ANTI_CASC)","339"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(CL1T_01_MTR.NO_FAULT)","340"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(CL1T_01_MTR.IM_TMR,?,?)","341"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(CL1T_01_MTR.INTL_MTR)","342"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(CL1T_01_MTR.START_EN)","343"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL1T_01_MTR.ON_TMR,?,?)","346"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL1T_01_MTR.OFF_TMR,?,?)","347"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor HX1T_10_A$N$N$N","NOP()","348"
RCOMMENT,"MainProgram","CL1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(HX1T_10A_MTR.ANTI_CASC)","349"
RCOMMENT,"MainProgram","CL1T_MTRS","Motor No Fault detection","OTE(HX1T_10A_MTR.NO_FAULT)","350"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor timer.","TON(HX1T_10A_MTR.IM_TMR,?,?)","351"
RCOMMENT,"MainProgram","CL1T_MTRS","Internal Motor.","OTE(HX1T_10A_MTR.INTL_MTR)","352"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor Running.","OTE(HX1T_10A_MTR.START_EN)","353"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(HX1T_10A_MTR.ON_TMR,?,?)","356"
RCOMMENT,"MainProgram","CL1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(HX1T_10A_MTR.OFF_TMR,?,?)","357"
RCOMMENT,"MainProgram","CL1T_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_26_PE1.FILT)","1"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_26_PE2.FILT)","5"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_24_PE.FILT)","8"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_23_PE.FILT)","12"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_21_PE.FILT)","16"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_20_PE.FILT)","20"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_19_PE.FILT)","24"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_18_PE.FILT)","28"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_17_PE.FILT)","32"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_16_PE.FILT)","36"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_15_PE.FILT)","40"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_14_PE.FILT)","44"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_13_PE.FILT)","48"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_12_PE.FILT)","52"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_11_PE.FILT)","56"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_10_PE.FILT)","60"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_09_PE.FILT)","64"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_08_PE.FILT)","68"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_07_PE.FILT)","72"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_06_PE.FILT)","76"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_05_PE.FILT)","80"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_04_PE.FILT)","84"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_03_PE.FILT)","88"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_02_PE.FILT)","91"
RCOMMENT,"MainProgram","CL1T_PE_Filters","Photoeye","OTE(CL1T_01_PE.FILT)","94"
RCOMMENT,"MainProgram","CL1T_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","17"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","33"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","49"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","65"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","81"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","97"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","113"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","129"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","145"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","161"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","177"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","193"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","209"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","225"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","241"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","257"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","273"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","289"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","305"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","321"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","337"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","353"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","369"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","385"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","401"
RCOMMENT,"MainProgram","CL1T_STATUS","Conveyor Status$N$N$N","NOP()","417"
RCOMMENT,"MainProgram","CL1T_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_26 VFD$N***************************$N","TON(CL1T_26_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_24 VFD$N***************************$N","TON(CL1T_24_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_23 VFD$N***************************$N","TON(CL1T_23_VFD.POWERED_DLY_TMR,?,?)","5"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_21 VFD$N***************************$N","TON(CL1T_21_VFD.POWERED_DLY_TMR,?,?)","7"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_20 VFD$N***************************$N","TON(CL1T_20_VFD.POWERED_DLY_TMR,?,?)","9"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_19 VFD$N***************************$N","TON(CL1T_19_VFD.POWERED_DLY_TMR,?,?)","11"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_18 VFD$N***************************$N","TON(CL1T_18_VFD.POWERED_DLY_TMR,?,?)","13"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_17 VFD$N***************************$N","TON(CL1T_17_VFD.POWERED_DLY_TMR,?,?)","15"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_16 VFD$N***************************$N","TON(CL1T_16_VFD.POWERED_DLY_TMR,?,?)","17"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_15 VFD$N***************************$N","TON(CL1T_15_VFD.POWERED_DLY_TMR,?,?)","19"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_14 VFD$N***************************$N","TON(CL1T_14_VFD.POWERED_DLY_TMR,?,?)","21"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_13 VFD$N***************************$N","TON(CL1T_13_VFD.POWERED_DLY_TMR,?,?)","23"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_12 VFD$N***************************$N","TON(CL1T_12_VFD.POWERED_DLY_TMR,?,?)","25"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_11 VFD$N***************************$N","TON(CL1T_11_VFD.POWERED_DLY_TMR,?,?)","27"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_10 VFD$N***************************$N","TON(CL1T_10_VFD.POWERED_DLY_TMR,?,?)","29"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_09 VFD$N***************************$N","TON(CL1T_09_VFD.POWERED_DLY_TMR,?,?)","31"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_08 VFD$N***************************$N","TON(CL1T_08_VFD.POWERED_DLY_TMR,?,?)","33"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_07 VFD$N***************************$N","TON(CL1T_07_VFD.POWERED_DLY_TMR,?,?)","35"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_06 VFD$N***************************$N","TON(CL1T_06_VFD.POWERED_DLY_TMR,?,?)","37"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_05 VFD$N***************************$N","TON(CL1T_05_VFD.POWERED_DLY_TMR,?,?)","39"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_04 VFD$N***************************$N","TON(CL1T_04_VFD.POWERED_DLY_TMR,?,?)","41"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_03 VFD$N***************************$N","TON(CL1T_03_VFD.POWERED_DLY_TMR,?,?)","43"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_02 VFD$N***************************$N","TON(CL1T_02_VFD.POWERED_DLY_TMR,?,?)","45"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor CL1T_01 VFD$N***************************$N","TON(CL1T_01_VFD.POWERED_DLY_TMR,?,?)","47"
RCOMMENT,"MainProgram","CL1T_VFDS","Motor HX1T_10_A VFD$N***************************$N","TON(HX1T_10A_VFD.POWERED_DLY_TMR,?,?)","49"
RCOMMENT,"MainProgram","CL2T_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL2T_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","CL2T_FIELD_IND","Control Station$N$N","NOP()","4"
RCOMMENT,"MainProgram","CL2T_FIELD_IND","Control Station$N$N","NOP()","7"
RCOMMENT,"MainProgram","CL2T_FIELD_IND","Control Station$N$N","NOP()","12"
RCOMMENT,"MainProgram","CL2T_FIELD_IND","Control Station$N$N","NOP()","15"
RCOMMENT,"MainProgram","CL2T_FIELD_IND","Control Station$N$N","NOP()","18"
RCOMMENT,"MainProgram","CL2T_FIELD_IND","Control Station$N$N","NOP()","23"
RCOMMENT,"MainProgram","CL2T_FIELD_IND","Control Station$N$N","NOP()","28"
RCOMMENT,"MainProgram","CL2T_FIELD_IND","Control Station$N$N","NOP()","33"
RCOMMENT,"MainProgram","CL2T_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","38"
RCOMMENT,"MainProgram","CL2T_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","42"
RCOMMENT,"MainProgram","CL2T_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL2T_GFX","Conveyor Graphic$N$N$N","MOV(CL2T_09_MTR.G,G_CL2T_09_STS)","1"
RCOMMENT,"MainProgram","CL2T_GFX","Conveyor Graphic$N$N$N","MOV(CL2T_08_MTR.G,G_CL2T_08_STS)","2"
RCOMMENT,"MainProgram","CL2T_GFX","Conveyor Graphic$N$N$N","MOV(CL2T_07_MTR.G,G_CL2T_07_STS)","3"
RCOMMENT,"MainProgram","CL2T_GFX","Conveyor Graphic$N$N$N","MOV(CL2T_06_MTR.G,G_CL2T_06_STS)","4"
RCOMMENT,"MainProgram","CL2T_GFX","Conveyor Graphic$N$N$N","MOV(CL2T_05_MTR.G,G_CL2T_05_STS)","5"
RCOMMENT,"MainProgram","CL2T_GFX","Conveyor Graphic$N$N$N","MOV(CL2T_04_MTR.G,G_CL2T_04_STS)","6"
RCOMMENT,"MainProgram","CL2T_GFX","Conveyor Graphic$N$N$N","MOV(CL2T_03_MTR.G,G_CL2T_03_STS)","7"
RCOMMENT,"MainProgram","CL2T_GFX","Conveyor Graphic$N$N$N","MOV(CL2T_02_MTR.G,G_CL2T_02_STS)","8"
RCOMMENT,"MainProgram","CL2T_GFX","Conveyor Graphic$N$N$N","MOV(CL2T_01_MTR.G,G_CL2T_01_STS)","9"
RCOMMENT,"MainProgram","CL2T_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL2T_JAMS","Jam Detection$N$N","RTO(CL2T_09_PE.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","CL2T_JAMS","Jam Detection$N$N","RTO(CL2T_08_PE.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","CL2T_JAMS","Jam Detection$N$N","RTO(CL2T_07_PE.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","CL2T_JAMS","Jam Detection$N$N","RTO(CL2T_06_PE.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","CL2T_JAMS","Jam Detection$N$N","RTO(CL2T_05_PE.JAM_TMR,?,?)","13"
RCOMMENT,"MainProgram","CL2T_JAMS","Jam Detection$N$N","RTO(CL2T_04_PE.JAM_TMR,?,?)","16"
RCOMMENT,"MainProgram","CL2T_JAMS","Jam Detection$N$N","RTO(CL2T_03_PE.JAM_TMR,?,?)","19"
RCOMMENT,"MainProgram","CL2T_JAMS","Jam Detection$N$N","RTO(CL2T_02_PE.JAM_TMR,?,?)","22"
RCOMMENT,"MainProgram","CL2T_JAMS","Jam Detection$N$N","RTO(CL2T_01_PE.JAM_TMR,?,?)","25"
RCOMMENT,"MainProgram","CL2T_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL2T_MTRS","System Start Request","OTE(CL2T.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor run expander.","OTE(CL2T.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","CL2T_MTRS","PE Grouping","OTE(CL2T.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","CL2T_MTRS","Reset Run Timer","RES(CL2T.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","CL2T_MTRS","Send downstream start request","OTE(CL2T.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","CL2T_MTRS","Run Timer","RTO(CL2T.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","CL2T_MTRS","Run Latch","OTE(CL2T.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor CL2T_09$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","CL2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL2T_09_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor No Fault detection","OTE(CL2T_09_MTR.NO_FAULT)","10"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor timer.","TON(CL2T_09_MTR.IM_TMR,?,?)","11"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor.","OTE(CL2T_09_MTR.INTL_MTR)","12"
RCOMMENT,"MainProgram","CL2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL2T_09_MTR.T2H_SPACE_TMR)","13"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor Running.","OTE(CL2T_09_MTR.START_EN)","17"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL2T_09_MTR.ON_TMR,?,?)","20"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL2T_09_MTR.OFF_TMR,?,?)","21"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor CL2T_08$N$N$N","NOP()","22"
RCOMMENT,"MainProgram","CL2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL2T_08_MTR.ANTI_CASC)","23"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor No Fault detection","OTE(CL2T_08_MTR.NO_FAULT)","24"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor timer.","TON(CL2T_08_MTR.IM_TMR,?,?)","25"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor.","OTE(CL2T_08_MTR.INTL_MTR)","26"
RCOMMENT,"MainProgram","CL2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL2T_08_MTR.T2H_SPACE_TMR)","27"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor Running.","OTE(CL2T_08_MTR.START_EN)","31"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL2T_08_MTR.ON_TMR,?,?)","34"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL2T_08_MTR.OFF_TMR,?,?)","35"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor CL2T_07$N$N$N","NOP()","36"
RCOMMENT,"MainProgram","CL2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL2T_07_MTR.ANTI_CASC)","37"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor No Fault detection","OTE(CL2T_07_MTR.NO_FAULT)","38"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor timer.","TON(CL2T_07_MTR.IM_TMR,?,?)","39"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor.","OTE(CL2T_07_MTR.INTL_MTR)","40"
RCOMMENT,"MainProgram","CL2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL2T_07_MTR.T2H_SPACE_TMR)","41"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor Running.","OTE(CL2T_07_MTR.START_EN)","45"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL2T_07_MTR.ON_TMR,?,?)","48"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL2T_07_MTR.OFF_TMR,?,?)","49"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor CL2T_06$N$N$N","NOP()","50"
RCOMMENT,"MainProgram","CL2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL2T_06_MTR.ANTI_CASC)","51"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor No Fault detection","OTE(CL2T_06_MTR.NO_FAULT)","52"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor timer.","TON(CL2T_06_MTR.IM_TMR,?,?)","53"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor.","OTE(CL2T_06_MTR.INTL_MTR)","54"
RCOMMENT,"MainProgram","CL2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL2T_06_MTR.T2H_SPACE_TMR)","55"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor Running.","OTE(CL2T_06_MTR.START_EN)","59"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL2T_06_MTR.ON_TMR,?,?)","62"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL2T_06_MTR.OFF_TMR,?,?)","63"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor CL2T_05$N$N$N","NOP()","64"
RCOMMENT,"MainProgram","CL2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL2T_05_MTR.ANTI_CASC)","65"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor No Fault detection","OTE(CL2T_05_MTR.NO_FAULT)","66"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor timer.","TON(CL2T_05_MTR.IM_TMR,?,?)","67"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor.","OTE(CL2T_05_MTR.INTL_MTR)","68"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor Running.","OTE(CL2T_05_MTR.START_EN)","69"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL2T_05_MTR.ON_TMR,?,?)","72"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL2T_05_MTR.OFF_TMR,?,?)","73"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor CL2T_04$N$N$N","NOP()","74"
RCOMMENT,"MainProgram","CL2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL2T_04_MTR.ANTI_CASC)","75"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor No Fault detection","OTE(CL2T_04_MTR.NO_FAULT)","76"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor timer.","TON(CL2T_04_MTR.IM_TMR,?,?)","77"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor.","OTE(CL2T_04_MTR.INTL_MTR)","78"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor Running.","OTE(CL2T_04_MTR.START_EN)","79"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL2T_04_MTR.ON_TMR,?,?)","82"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL2T_04_MTR.OFF_TMR,?,?)","83"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor CL2T_03$N$N$N","NOP()","84"
RCOMMENT,"MainProgram","CL2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL2T_03_MTR.ANTI_CASC)","85"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor No Fault detection","OTE(CL2T_03_MTR.NO_FAULT)","86"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor timer.","TON(CL2T_03_MTR.IM_TMR,?,?)","87"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor.","OTE(CL2T_03_MTR.INTL_MTR)","88"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor Running.","OTE(CL2T_03_MTR.START_EN)","89"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL2T_03_MTR.ON_TMR,?,?)","92"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL2T_03_MTR.OFF_TMR,?,?)","93"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor CL2T_02$N$N$N","NOP()","94"
RCOMMENT,"MainProgram","CL2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL2T_02_MTR.ANTI_CASC)","95"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor No Fault detection","OTE(CL2T_02_MTR.NO_FAULT)","96"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor timer.","TON(CL2T_02_MTR.IM_TMR,?,?)","97"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor.","OTE(CL2T_02_MTR.INTL_MTR)","98"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor Running.","OTE(CL2T_02_MTR.START_EN)","99"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL2T_02_MTR.ON_TMR,?,?)","102"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL2T_02_MTR.OFF_TMR,?,?)","103"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor CL2T_01$N$N$N","NOP()","104"
RCOMMENT,"MainProgram","CL2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL2T_01_MTR.ANTI_CASC)","105"
RCOMMENT,"MainProgram","CL2T_MTRS","Motor No Fault detection","OTE(CL2T_01_MTR.NO_FAULT)","106"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor timer.","TON(CL2T_01_MTR.IM_TMR,?,?)","107"
RCOMMENT,"MainProgram","CL2T_MTRS","Internal Motor.","OTE(CL2T_01_MTR.INTL_MTR)","108"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor Running.","OTE(CL2T_01_MTR.START_EN)","109"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL2T_01_MTR.ON_TMR,?,?)","112"
RCOMMENT,"MainProgram","CL2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL2T_01_MTR.OFF_TMR,?,?)","113"
RCOMMENT,"MainProgram","CL2T_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL2T_PE_Filters","Photoeye","OTE(CL2T_09_PE.FILT)","1"
RCOMMENT,"MainProgram","CL2T_PE_Filters","Photoeye","OTE(CL2T_08_PE.FILT)","5"
RCOMMENT,"MainProgram","CL2T_PE_Filters","Photoeye","OTE(CL2T_07_PE.FILT)","9"
RCOMMENT,"MainProgram","CL2T_PE_Filters","Photoeye","OTE(CL2T_06_PE.FILT)","13"
RCOMMENT,"MainProgram","CL2T_PE_Filters","Photoeye","OTE(CL2T_05_PE.FILT)","17"
RCOMMENT,"MainProgram","CL2T_PE_Filters","Photoeye","OTE(CL2T_04_PE.FILT)","20"
RCOMMENT,"MainProgram","CL2T_PE_Filters","Photoeye","OTE(CL2T_03_PE.FILT)","23"
RCOMMENT,"MainProgram","CL2T_PE_Filters","Photoeye","OTE(CL2T_02_PE.FILT)","26"
RCOMMENT,"MainProgram","CL2T_PE_Filters","Photoeye","OTE(CL2T_01_PE.FILT)","29"
RCOMMENT,"MainProgram","CL2T_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL2T_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","CL2T_STATUS","Conveyor Status$N$N$N","NOP()","17"
RCOMMENT,"MainProgram","CL2T_STATUS","Conveyor Status$N$N$N","NOP()","33"
RCOMMENT,"MainProgram","CL2T_STATUS","Conveyor Status$N$N$N","NOP()","49"
RCOMMENT,"MainProgram","CL2T_STATUS","Conveyor Status$N$N$N","NOP()","65"
RCOMMENT,"MainProgram","CL2T_STATUS","Conveyor Status$N$N$N","NOP()","81"
RCOMMENT,"MainProgram","CL2T_STATUS","Conveyor Status$N$N$N","NOP()","97"
RCOMMENT,"MainProgram","CL2T_STATUS","Conveyor Status$N$N$N","NOP()","113"
RCOMMENT,"MainProgram","CL2T_STATUS","Conveyor Status$N$N$N","NOP()","129"
RCOMMENT,"MainProgram","CL2T_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL2T_VFDS","Motor CL2T_09 VFD$N***************************$N","TON(CL2T_09_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","CL2T_VFDS","Motor CL2T_08 VFD$N***************************$N","TON(CL2T_08_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","CL2T_VFDS","Motor CL2T_07 VFD$N***************************$N","TON(CL2T_07_VFD.POWERED_DLY_TMR,?,?)","5"
RCOMMENT,"MainProgram","CL2T_VFDS","Motor CL2T_06 VFD$N***************************$N","TON(CL2T_06_VFD.POWERED_DLY_TMR,?,?)","7"
RCOMMENT,"MainProgram","CL2T_VFDS","Motor CL2T_05 VFD$N***************************$N","TON(CL2T_05_VFD.POWERED_DLY_TMR,?,?)","9"
RCOMMENT,"MainProgram","CL2T_VFDS","Motor CL2T_04 VFD$N***************************$N","TON(CL2T_04_VFD.POWERED_DLY_TMR,?,?)","11"
RCOMMENT,"MainProgram","CL2T_VFDS","Motor CL2T_03 VFD$N***************************$N","TON(CL2T_03_VFD.POWERED_DLY_TMR,?,?)","13"
RCOMMENT,"MainProgram","CL2T_VFDS","Motor CL2T_02 VFD$N***************************$N","TON(CL2T_02_VFD.POWERED_DLY_TMR,?,?)","15"
RCOMMENT,"MainProgram","CL2T_VFDS","Motor CL2T_01 VFD$N***************************$N","TON(CL2T_01_VFD.POWERED_DLY_TMR,?,?)","17"
RCOMMENT,"MainProgram","CL3T_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL3T_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","CL3T_FIELD_IND","Control Station$N$N","NOP()","4"
RCOMMENT,"MainProgram","CL3T_FIELD_IND","Control Station$N$N","NOP()","7"
RCOMMENT,"MainProgram","CL3T_FIELD_IND","Control Station$N$N","NOP()","12"
RCOMMENT,"MainProgram","CL3T_FIELD_IND","Control Station$N$N","NOP()","15"
RCOMMENT,"MainProgram","CL3T_FIELD_IND","Control Station$N$N","NOP()","18"
RCOMMENT,"MainProgram","CL3T_FIELD_IND","Control Station$N$N","NOP()","23"
RCOMMENT,"MainProgram","CL3T_FIELD_IND","Control Station$N$N","NOP()","28"
RCOMMENT,"MainProgram","CL3T_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","33"
RCOMMENT,"MainProgram","CL3T_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL3T_GFX","Conveyor Graphic$N$N$N","MOV(CL3T_08_MTR.G,G_CL3T_08_STS)","1"
RCOMMENT,"MainProgram","CL3T_GFX","Conveyor Graphic$N$N$N","MOV(CL3T_07_MTR.G,G_CL3T_07_STS)","2"
RCOMMENT,"MainProgram","CL3T_GFX","Conveyor Graphic$N$N$N","MOV(CL3T_06_MTR.G,G_CL3T_06_STS)","3"
RCOMMENT,"MainProgram","CL3T_GFX","Conveyor Graphic$N$N$N","MOV(CL3T_05_MTR.G,G_CL3T_05_STS)","4"
RCOMMENT,"MainProgram","CL3T_GFX","Conveyor Graphic$N$N$N","MOV(CL3T_04_MTR.G,G_CL3T_04_STS)","5"
RCOMMENT,"MainProgram","CL3T_GFX","Conveyor Graphic$N$N$N","MOV(CL3T_03_MTR.G,G_CL3T_03_STS)","6"
RCOMMENT,"MainProgram","CL3T_GFX","Conveyor Graphic$N$N$N","MOV(CL3T_02_MTR.G,G_CL3T_02_STS)","7"
RCOMMENT,"MainProgram","CL3T_GFX","Conveyor Graphic$N$N$N","MOV(CL3T_01_MTR.G,G_CL3T_01_STS)","8"
RCOMMENT,"MainProgram","CL3T_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL3T_JAMS","Jam Detection$N$N","RTO(CL3T_08_PE.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","CL3T_JAMS","Jam Detection$N$N","RTO(CL3T_07_PE.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","CL3T_JAMS","Jam Detection$N$N","RTO(CL3T_06_PE.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","CL3T_JAMS","Jam Detection$N$N","RTO(CL3T_05_PE.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","CL3T_JAMS","Jam Detection$N$N","RTO(CL3T_04_PE.JAM_TMR,?,?)","13"
RCOMMENT,"MainProgram","CL3T_JAMS","Jam Detection$N$N","RTO(CL3T_03_PE.JAM_TMR,?,?)","16"
RCOMMENT,"MainProgram","CL3T_JAMS","Jam Detection$N$N","RTO(CL3T_02_PE.JAM_TMR,?,?)","19"
RCOMMENT,"MainProgram","CL3T_JAMS","Jam Detection$N$N","RTO(CL3T_01_PE.JAM_TMR,?,?)","22"
RCOMMENT,"MainProgram","CL3T_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL3T_MTRS","System Start Request","OTE(CL3T.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor run expander.","OTE(CL3T.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","CL3T_MTRS","PE Grouping","OTE(CL3T.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","CL3T_MTRS","Reset Run Timer","RES(CL3T.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","CL3T_MTRS","Send downstream start request","OTE(CL3T.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","CL3T_MTRS","Run Timer","RTO(CL3T.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","CL3T_MTRS","Run Latch","OTE(CL3T.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor CL3T_08$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","CL3T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL3T_08_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor No Fault detection","OTE(CL3T_08_MTR.NO_FAULT)","10"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor timer.","TON(CL3T_08_MTR.IM_TMR,?,?)","11"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor.","OTE(CL3T_08_MTR.INTL_MTR)","12"
RCOMMENT,"MainProgram","CL3T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL3T_08_MTR.T2H_SPACE_TMR)","13"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor Running.","OTE(CL3T_08_MTR.START_EN)","17"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL3T_08_MTR.ON_TMR,?,?)","20"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL3T_08_MTR.OFF_TMR,?,?)","21"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor CL3T_07$N$N$N","NOP()","22"
RCOMMENT,"MainProgram","CL3T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL3T_07_MTR.ANTI_CASC)","23"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor No Fault detection","OTE(CL3T_07_MTR.NO_FAULT)","24"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor timer.","TON(CL3T_07_MTR.IM_TMR,?,?)","25"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor.","OTE(CL3T_07_MTR.INTL_MTR)","26"
RCOMMENT,"MainProgram","CL3T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL3T_07_MTR.T2H_SPACE_TMR)","27"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor Running.","OTE(CL3T_07_MTR.START_EN)","31"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL3T_07_MTR.ON_TMR,?,?)","34"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL3T_07_MTR.OFF_TMR,?,?)","35"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor CL3T_06$N$N$N","NOP()","36"
RCOMMENT,"MainProgram","CL3T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL3T_06_MTR.ANTI_CASC)","37"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor No Fault detection","OTE(CL3T_06_MTR.NO_FAULT)","38"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor timer.","TON(CL3T_06_MTR.IM_TMR,?,?)","39"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor.","OTE(CL3T_06_MTR.INTL_MTR)","40"
RCOMMENT,"MainProgram","CL3T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL3T_06_MTR.T2H_SPACE_TMR)","41"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor Running.","OTE(CL3T_06_MTR.START_EN)","45"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL3T_06_MTR.ON_TMR,?,?)","48"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL3T_06_MTR.OFF_TMR,?,?)","49"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor CL3T_05$N$N$N","NOP()","50"
RCOMMENT,"MainProgram","CL3T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL3T_05_MTR.ANTI_CASC)","51"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor No Fault detection","OTE(CL3T_05_MTR.NO_FAULT)","52"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor timer.","TON(CL3T_05_MTR.IM_TMR,?,?)","53"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor.","OTE(CL3T_05_MTR.INTL_MTR)","54"
RCOMMENT,"MainProgram","CL3T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(CL3T_05_MTR.T2H_SPACE_TMR)","55"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor Running.","OTE(CL3T_05_MTR.START_EN)","59"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL3T_05_MTR.ON_TMR,?,?)","62"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL3T_05_MTR.OFF_TMR,?,?)","63"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor CL3T_04$N$N$N","NOP()","64"
RCOMMENT,"MainProgram","CL3T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL3T_04_MTR.ANTI_CASC)","65"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor No Fault detection","OTE(CL3T_04_MTR.NO_FAULT)","66"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor timer.","TON(CL3T_04_MTR.IM_TMR,?,?)","67"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor.","OTE(CL3T_04_MTR.INTL_MTR)","68"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor Running.","OTE(CL3T_04_MTR.START_EN)","69"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL3T_04_MTR.ON_TMR,?,?)","72"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL3T_04_MTR.OFF_TMR,?,?)","73"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor CL3T_03$N$N$N","NOP()","74"
RCOMMENT,"MainProgram","CL3T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL3T_03_MTR.ANTI_CASC)","75"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor No Fault detection","OTE(CL3T_03_MTR.NO_FAULT)","76"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor timer.","TON(CL3T_03_MTR.IM_TMR,?,?)","77"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor.","OTE(CL3T_03_MTR.INTL_MTR)","78"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor Running.","OTE(CL3T_03_MTR.START_EN)","79"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL3T_03_MTR.ON_TMR,?,?)","82"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL3T_03_MTR.OFF_TMR,?,?)","83"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor CL3T_02$N$N$N","NOP()","84"
RCOMMENT,"MainProgram","CL3T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL3T_02_MTR.ANTI_CASC)","85"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor No Fault detection","OTE(CL3T_02_MTR.NO_FAULT)","86"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor timer.","TON(CL3T_02_MTR.IM_TMR,?,?)","87"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor.","OTE(CL3T_02_MTR.INTL_MTR)","88"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor Running.","OTE(CL3T_02_MTR.START_EN)","89"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL3T_02_MTR.ON_TMR,?,?)","92"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL3T_02_MTR.OFF_TMR,?,?)","93"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor CL3T_01$N$N$N","NOP()","94"
RCOMMENT,"MainProgram","CL3T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(CL3T_01_MTR.ANTI_CASC)","95"
RCOMMENT,"MainProgram","CL3T_MTRS","Motor No Fault detection","OTE(CL3T_01_MTR.NO_FAULT)","96"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor timer.","TON(CL3T_01_MTR.IM_TMR,?,?)","97"
RCOMMENT,"MainProgram","CL3T_MTRS","Internal Motor.","OTE(CL3T_01_MTR.INTL_MTR)","98"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor Running.","OTE(CL3T_01_MTR.START_EN)","99"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(CL3T_01_MTR.ON_TMR,?,?)","102"
RCOMMENT,"MainProgram","CL3T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(CL3T_01_MTR.OFF_TMR,?,?)","103"
RCOMMENT,"MainProgram","CL3T_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL3T_PE_Filters","Photoeye","OTE(CL3T_08_PE.FILT)","1"
RCOMMENT,"MainProgram","CL3T_PE_Filters","Photoeye","OTE(CL3T_07_PE.FILT)","5"
RCOMMENT,"MainProgram","CL3T_PE_Filters","Photoeye","OTE(CL3T_06_PE.FILT)","9"
RCOMMENT,"MainProgram","CL3T_PE_Filters","Photoeye","OTE(CL3T_05_PE.FILT)","13"
RCOMMENT,"MainProgram","CL3T_PE_Filters","Photoeye","OTE(CL3T_04_PE.FILT)","17"
RCOMMENT,"MainProgram","CL3T_PE_Filters","Photoeye","OTE(CL3T_03_PE.FILT)","20"
RCOMMENT,"MainProgram","CL3T_PE_Filters","Photoeye","OTE(CL3T_02_PE.FILT)","23"
RCOMMENT,"MainProgram","CL3T_PE_Filters","Photoeye","OTE(CL3T_01_PE.FILT)","26"
RCOMMENT,"MainProgram","CL3T_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL3T_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","CL3T_STATUS","Conveyor Status$N$N$N","NOP()","17"
RCOMMENT,"MainProgram","CL3T_STATUS","Conveyor Status$N$N$N","NOP()","33"
RCOMMENT,"MainProgram","CL3T_STATUS","Conveyor Status$N$N$N","NOP()","49"
RCOMMENT,"MainProgram","CL3T_STATUS","Conveyor Status$N$N$N","NOP()","65"
RCOMMENT,"MainProgram","CL3T_STATUS","Conveyor Status$N$N$N","NOP()","81"
RCOMMENT,"MainProgram","CL3T_STATUS","Conveyor Status$N$N$N","NOP()","97"
RCOMMENT,"MainProgram","CL3T_STATUS","Conveyor Status$N$N$N","NOP()","113"
RCOMMENT,"MainProgram","CL3T_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","CL3T_VFDS","Motor CL3T_08 VFD$N***************************$N","TON(CL3T_08_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","CL3T_VFDS","Motor CL3T_07 VFD$N***************************$N","TON(CL3T_07_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","CL3T_VFDS","Motor CL3T_06 VFD$N***************************$N","TON(CL3T_06_VFD.POWERED_DLY_TMR,?,?)","5"
RCOMMENT,"MainProgram","CL3T_VFDS","Motor CL3T_05 VFD$N***************************$N","TON(CL3T_05_VFD.POWERED_DLY_TMR,?,?)","7"
RCOMMENT,"MainProgram","CL3T_VFDS","Motor CL3T_04 VFD$N***************************$N","TON(CL3T_04_VFD.POWERED_DLY_TMR,?,?)","9"
RCOMMENT,"MainProgram","CL3T_VFDS","Motor CL3T_03 VFD$N***************************$N","TON(CL3T_03_VFD.POWERED_DLY_TMR,?,?)","11"
RCOMMENT,"MainProgram","CL3T_VFDS","Motor CL3T_02 VFD$N***************************$N","TON(CL3T_02_VFD.POWERED_DLY_TMR,?,?)","13"
RCOMMENT,"MainProgram","CL3T_VFDS","Motor CL3T_01 VFD$N***************************$N","TON(CL3T_01_VFD.POWERED_DLY_TMR,?,?)","15"
RCOMMENT,"MainProgram","COM_STATUS","****************************************************************************************************$NThis routine monitors the IO communication modules.$NHMI status$' and alarms related to the communication modules are programmed in this routine.$NIf the status of a module is anything other than 4, then it is faulted.$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","COM_STATUS","***********************************$NCard CC01_RK01_S02$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(CC01_RK1_S02_STATUS.Fault)","1"
RCOMMENT,"MainProgram","COM_STATUS","Filter timer is immediate on, filtered off.","TOF(CC01_RK1_S02_STATUS.FltFilter_Tmr,?,?)","3"
RCOMMENT,"MainProgram","COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_CC01_RK01_S02_COMM)","4"
RCOMMENT,"MainProgram","COM_STATUS","***********************************$NCard MCP_BM1_RK01_S16$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_BM1_RK1_S16_STATUS.Fault)","5"
RCOMMENT,"MainProgram","COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_BM1_RK1_S16_STATUS.FltFilter_Tmr,?,?)","7"
RCOMMENT,"MainProgram","COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_BM1_RK01_S16_COMM)","8"
RCOMMENT,"MainProgram","COM_STATUS","***********************************$NCard MCP_BM1_RK02_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_BM1_RK2_S0_STATUS.Fault)","9"
RCOMMENT,"MainProgram","COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_BM1_RK2_S0_STATUS.FltFilter_Tmr,?,?)","11"
RCOMMENT,"MainProgram","COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_BM1_RK02_S00_COMM)","12"
RCOMMENT,"MainProgram","COM_STATUS","***********************************$NCard MCP_01_RK01_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_01_RK1_S0_STATUS.Fault)","13"
RCOMMENT,"MainProgram","COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_01_RK1_S0_STATUS.FltFilter_Tmr,?,?)","15"
RCOMMENT,"MainProgram","COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_01_RK01_S00_COMM)","16"
RCOMMENT,"MainProgram","COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_01_RK2_S0_STATUS.FltFilter_Tmr,?,?)","18"
RCOMMENT,"MainProgram","COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_01_RK02_S00_COMM)","19"
RCOMMENT,"MainProgram","COM_STATUS","***********************************$NCard MCP_02_RK01_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_02_RK1_S0_STATUS.Fault)","20"
RCOMMENT,"MainProgram","COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_02_RK1_S0_STATUS.FltFilter_Tmr,?,?)","22"
RCOMMENT,"MainProgram","COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_02_RK01_S00_COMM)","23"
RCOMMENT,"MainProgram","COM_STATUS","***********************************$NCard MCP_02_RK02_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_02_RK2_S0_STATUS.Fault)","24"
RCOMMENT,"MainProgram","COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_02_RK2_S0_STATUS.FltFilter_Tmr,?,?)","26"
RCOMMENT,"MainProgram","COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_02_RK02_S00_COMM)","27"
RCOMMENT,"MainProgram","COM_STATUS","***********************************$NCard MCP_03_RK01_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_03_RK1_S0_STATUS.Fault)","28"
RCOMMENT,"MainProgram","COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_03_RK1_S0_STATUS.FltFilter_Tmr,?,?)","30"
RCOMMENT,"MainProgram","COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_03_RK01_S00_COMM)","31"
RCOMMENT,"MainProgram","COM_STATUS","***********************************$NCard MCP_03_RK02_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_03_RK2_S0_STATUS.Fault)","32"
RCOMMENT,"MainProgram","COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_03_RK2_S0_STATUS.FltFilter_Tmr,?,?)","34"
RCOMMENT,"MainProgram","COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_03_RK02_S00_COMM)","35"
RCOMMENT,"MainProgram","COM_STATUS","***********************************$NCard MCP_16_RK01_S00$N***********************************$N$NThis rung performs a GSV for the communication module, which indicates the modules status.","OTE(MCP_16_RK1_S0_STATUS.Fault)","36"
RCOMMENT,"MainProgram","COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_16_RK1_S0_STATUS.FltFilter_Tmr,?,?)","38"
RCOMMENT,"MainProgram","COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_16_RK01_S00_COMM)","39"
RCOMMENT,"MainProgram","COM_STATUS","Filter timer is immediate on, filtered off.","TOF(MCP_16_RK2_S0_STATUS.FltFilter_Tmr,?,?)","41"
RCOMMENT,"MainProgram","COM_STATUS","Set the HMI fault bit based on filtered fault signal.","OTE(F_MCP_16_RK02_S00_COMM)","42"
RCOMMENT,"MainProgram","E_STOPS","****************************************************************$NAll E-stop faults are programmed in this routine.$N$N$NThis routine also groups individual e-stop faults into single bits for use elsewhere in the program.$N****************************************************************","NOP()","0"
RCOMMENT,"MainProgram","E_STOPS","MCP_BM1 E STOP","OTE(F_MCP_BM1_CS_E_STOP)","1"
RCOMMENT,"MainProgram","E_STOPS","BM1_01 E STOP","OTE(F_BM1_01_CS_E_STOP)","3"
RCOMMENT,"MainProgram","E_STOPS","BM1_02 E STOP","OTE(F_BM1_02_CS_E_STOP)","5"
RCOMMENT,"MainProgram","E_STOPS","BM1_03 E STOP","OTE(F_BM1_03_CS_E_STOP)","7"
RCOMMENT,"MainProgram","E_STOPS","BM1_06 E STOP","OTE(F_BM1_06_CS_E_STOP)","9"
RCOMMENT,"MainProgram","E_STOPS","BM1_07 E STOP","OTE(F_BM1_07_CS_E_STOP)","11"
RCOMMENT,"MainProgram","E_STOPS","BM1_13 E STOP","OTE(F_BM1_13_CS_E_STOP)","13"
RCOMMENT,"MainProgram","E_STOPS","BM1_14_A E STOP","OTE(F_BM1_14_CS1_E_STOP)","15"
RCOMMENT,"MainProgram","E_STOPS","BM1_14_B E STOP","OTE(F_BM1_14_CS2_E_STOP)","17"
RCOMMENT,"MainProgram","E_STOPS","BM1_15 E STOP","OTE(F_BM1_15_CS_E_STOP)","19"
RCOMMENT,"MainProgram","E_STOPS","BM1_16_A E STOP","OTE(F_BM1_16_CS1_E_STOP)","21"
RCOMMENT,"MainProgram","E_STOPS","BM1_16_B E STOP","OTE(F_BM1_16_CS2_E_STOP)","23"
RCOMMENT,"MainProgram","E_STOPS","BM1_17_A E STOP","OTE(F_BM1_17_CS1_E_STOP)","25"
RCOMMENT,"MainProgram","E_STOPS","BM1_17_B E STOP","OTE(F_BM1_17_CS2_E_STOP)","27"
RCOMMENT,"MainProgram","E_STOPS","BM1_18 E STOP","OTE(F_BM1_18_CS_E_STOP)","29"
RCOMMENT,"MainProgram","E_STOPS","BM1_19 E STOP","OTE(F_BM1_19_CS_E_STOP)","31"
RCOMMENT,"MainProgram","E_STOPS","BM1_20 E STOP","OTE(F_BM1_20_CS_E_STOP)","33"
RCOMMENT,"MainProgram","E_STOPS","BM1_23_A E STOP","OTE(F_BM1_23_CS1_E_STOP)","35"
RCOMMENT,"MainProgram","E_STOPS","BM1_23_B E STOP","OTE(F_BM1_23_CS2_E_STOP)","37"
RCOMMENT,"MainProgram","E_STOPS","BM1_25 E STOP","OTE(F_BM1_25_CS_E_STOP)","39"
RCOMMENT,"MainProgram","E_STOPS","BM1_27_A E STOP","OTE(F_BM1_27_CS1_E_STOP)","41"
RCOMMENT,"MainProgram","E_STOPS","BM1_27_B E STOP","OTE(F_BM1_27_CS2_E_STOP)","43"
RCOMMENT,"MainProgram","E_STOPS","BM1_27_C E STOP","OTE(F_BM1_27_CS3_E_STOP)","45"
RCOMMENT,"MainProgram","E_STOPS","BM1_27_D E STOP","OTE(F_BM1_27_CS3_E_STOP1)","47"
RCOMMENT,"MainProgram","E_STOPS","BM1_27_E E STOP","OTE(F_BM1_27_CS5_E_STOP)","49"
RCOMMENT,"MainProgram","E_STOPS","BM1_28_A E STOP","OTE(F_BM1_28_CS1_E_STOP)","51"
RCOMMENT,"MainProgram","E_STOPS","BM1_28_B E STOP","OTE(F_BM1_28_CS2_E_STOP)","53"
RCOMMENT,"MainProgram","E_STOPS","BM1_28_C E STOP","OTE(F_BM1_28_CS3_E_STOP)","55"
RCOMMENT,"MainProgram","E_STOPS","BM1_28_D E STOP","OTE(F_BM1_28_CS4_E_STOP)","57"
RCOMMENT,"MainProgram","E_STOPS","BM1_29_A E STOP","OTE(F_BM1_29_CS1_E_STOP)","59"
RCOMMENT,"MainProgram","E_STOPS","BM1_29_B E STOP","OTE(F_BM1_29_CS2_E_STOP)","61"
RCOMMENT,"MainProgram","E_STOPS","BM1_29_C E STOP","OTE(F_BM1_29_CS3_E_STOP)","63"
RCOMMENT,"MainProgram","E_STOPS","BM1_29_D E STOP","OTE(F_BM1_29_CS4_E_STOP)","65"
RCOMMENT,"MainProgram","E_STOPS","BM1_30_A E STOP","OTE(F_BM1_30_CS1_E_STOP)","67"
RCOMMENT,"MainProgram","E_STOPS","BM1_30_B E STOP","OTE(F_BM1_30_CS2_E_STOP)","69"
RCOMMENT,"MainProgram","E_STOPS","BM1_30_C E STOP","OTE(F_BM1_30_CS3_E_STOP)","71"
RCOMMENT,"MainProgram","E_STOPS","BM1_30_D E STOP","OTE(F_BM1_30_CS2_E_STOP)","73"
RCOMMENT,"MainProgram","E_STOPS","BM1_34 E STOP","OTE(F_BM1_34_CS_E_STOP)","75"
RCOMMENT,"MainProgram","E_STOPS","BM1_38 E STOP","OTE(F_BM1_38_CS_E_STOP)","77"
RCOMMENT,"MainProgram","E_STOPS","MCP_01 E STOP","OTE(F_MCP_01_CS_E_STOP)","79"
RCOMMENT,"MainProgram","E_STOPS","MCP_02 E STOP","OTE(F_MCP_02_CS_E_STOP)","81"
RCOMMENT,"MainProgram","E_STOPS","MCP_03 E STOP","OTE(F_MCP_03_CS_E_STOP)","83"
RCOMMENT,"MainProgram","E_STOPS","MCP_16 E STOP","OTE(F_MCP_16_CS_E_STOP)","85"
RCOMMENT,"MainProgram","E_STOPS","O2T_04 E STOP","OTE(F_O2T_04_CS_E_STOP)","87"
RCOMMENT,"MainProgram","E_STOPS","O2T_06 E STOP","OTE(F_O2T_06_CS_E_STOP)","89"
RCOMMENT,"MainProgram","E_STOPS","O2T_10 E STOP","OTE(F_O2T_10_CS_E_STOP)","91"
RCOMMENT,"MainProgram","E_STOPS","O2T_12 E STOP","OTE(F_O2T_12_CS_E_STOP)","93"
RCOMMENT,"MainProgram","E_STOPS","O2T_14 E STOP","OTE(F_O2T_14_CS_E_STOP)","95"
RCOMMENT,"MainProgram","E_STOPS","O2T_18 E STOP","OTE(F_O2T_18_CS_E_STOP)","97"
RCOMMENT,"MainProgram","E_STOPS","C2T_13 E STOP","OTE(F_C2T_13_CS_E_STOP)","99"
RCOMMENT,"MainProgram","E_STOPS","C2T_17 E STOP","OTE(F_C2T_17_CS_E_STOP)","101"
RCOMMENT,"MainProgram","E_STOPS","CL2T_01_A E STOP","OTE(F_CL2T_01_CS1_E_STOP)","103"
RCOMMENT,"MainProgram","E_STOPS","CL2T_01_B E STOP","OTE(F_CL2T_01_CS2_E_STOP)","105"
RCOMMENT,"MainProgram","E_STOPS","CL2T_02_A E STOP","OTE(F_CL2T_02_CS1_E_STOP)","107"
RCOMMENT,"MainProgram","E_STOPS","CL2T_02_B E STOP","OTE(F_CL2T_02_CS2_E_STOP)","109"
RCOMMENT,"MainProgram","E_STOPS","CL2T_02_C E STOP","OTE(F_CL2T_02_CS3_E_STOP)","111"
RCOMMENT,"MainProgram","E_STOPS","CL2T_04 E STOP","OTE(F_CL2T_04_CS_E_STOP)","113"
RCOMMENT,"MainProgram","E_STOPS","CL2T_05_A E STOP","OTE(F_CL2T_05_CS1_E_STOP)","115"
RCOMMENT,"MainProgram","E_STOPS","CL2T_05_B E STOP","OTE(F_CL2T_05_CS2_E_STOP)","117"
RCOMMENT,"MainProgram","E_STOPS","CL2T_09 E STOP","OTE(F_CL2T_09_CS_E_STOP)","119"
RCOMMENT,"MainProgram","E_STOPS","CL3T_01_A E STOP","OTE(F_CL3T_01_CS1_E_STOP)","121"
RCOMMENT,"MainProgram","E_STOPS","CL3T_01_B E STOP","OTE(F_CL3T_01_CS2_E_STOP)","123"
RCOMMENT,"MainProgram","E_STOPS","CL3T_02_A E STOP","OTE(F_CL3T_02_CS1_E_STOP)","125"
RCOMMENT,"MainProgram","E_STOPS","CL3T_02_B E STOP","OTE(F_CL3T_02_CS2_E_STOP)","127"
RCOMMENT,"MainProgram","E_STOPS","CL3T_02_C E STOP","OTE(F_CL3T_02_CS3_E_STOP)","129"
RCOMMENT,"MainProgram","E_STOPS","CL3T_02_D E STOP","OTE(F_CL3T_02_CS4_E_STOP)","131"
RCOMMENT,"MainProgram","E_STOPS","CL3T_04 E STOP","OTE(F_CL3T_04_CS_E_STOP)","133"
RCOMMENT,"MainProgram","E_STOPS","O4T_06 E STOP","OTE(F_O4T_06_CS_E_STOP)","135"
RCOMMENT,"MainProgram","E_STOPS","O4T_10 E STOP","OTE(F_O4T_10_CS_E_STOP)","137"
RCOMMENT,"MainProgram","E_STOPS","XO1_01 E STOP","OTE(F_XO1_01_CS_E_STOP)","139"
RCOMMENT,"MainProgram","E_STOPS","T5T_09 E STOP","OTE(F_T5T_09_CS_E_STOP)","141"
RCOMMENT,"MainProgram","E_STOPS","XO2_02 E STOP","OTE(F_XO2_02_CS_E_STOP)","143"
RCOMMENT,"MainProgram","E_STOPS","XO2_05 E STOP","OTE(F_XO2_05_CS_E_STOP)","145"
RCOMMENT,"MainProgram","E_STOPS","CL1T_01_A E STOP","OTE(F_CL1T_01_CS1_E_STOP)","147"
RCOMMENT,"MainProgram","E_STOPS","CL1T_01_B E STOP","OTE(F_CL1T_01_CS2_E_STOP)","149"
RCOMMENT,"MainProgram","E_STOPS","CL1T_01_C E STOP","OTE(F_CL1T_01_CS3_E_STOP)","151"
RCOMMENT,"MainProgram","E_STOPS","CL1T_02_A E STOP","OTE(F_CL1T_02_CS1_E_STOP)","153"
RCOMMENT,"MainProgram","E_STOPS","CL1T_02_B E STOP","OTE(F_CL1T_02_CS2_E_STOP)","155"
RCOMMENT,"MainProgram","E_STOPS","CL1T_02_C E STOP","OTE(F_CL1T_02_CS3_E_STOP)","157"
RCOMMENT,"MainProgram","E_STOPS","CL1T_05 E STOP","OTE(F_CL1T_05_CS_E_STOP)","159"
RCOMMENT,"MainProgram","E_STOPS","CL1T_09 E STOP","OTE(F_CL1T_09_CS_E_STOP)","161"
RCOMMENT,"MainProgram","E_STOPS","CL1T_11 E STOP","OTE(F_CL1T_11_CS_E_STOP)","163"
RCOMMENT,"MainProgram","E_STOPS","CL1T_12 E STOP","OTE(F_CL1T_12_CS_E_STOP)","165"
RCOMMENT,"MainProgram","E_STOPS","CL1T_16 E STOP","OTE(F_CL1T_16_CS_E_STOP)","167"
RCOMMENT,"MainProgram","E_STOPS","CL1T_20 E STOP","OTE(F_CL1T_20_CS_E_STOP)","169"
RCOMMENT,"MainProgram","E_STOPS","CL1T_24 E STOP","OTE(F_CL1T_24_CS_E_STOP)","171"
RCOMMENT,"MainProgram","E_STOPS","HX1T_10 E STOP","OTE(F_HX1T_10_CS_E_STOP)","173"
RCOMMENT,"MainProgram","E_STOPS","O3T_17 E STOP","OTE(F_O3T_17_CS_E_STOP)","175"
RCOMMENT,"MainProgram","E_STOPS","O3T_19_A E STOP","OTE(F_O3T_19_CS1_E_STOP)","177"
RCOMMENT,"MainProgram","E_STOPS","O3T_19_B E STOP","OTE(F_O3T_19_CS2_E_STOP)","179"
RCOMMENT,"MainProgram","E_STOPS","O4T_16 E STOP","OTE(F_O4T_16_CS_E_STOP)","181"
RCOMMENT,"MainProgram","E_STOPS","O4T_21_A E STOP","OTE(F_O4T_19_CS1_E_STOP)","183"
RCOMMENT,"MainProgram","E_STOPS","O4T_21_B E STOP","OTE(F_O4T_19_CS2_E_STOP)","185"
RCOMMENT,"MainProgram","E_STOPS","****************************************************************$NE-Stop zone grouping$N****************************************************************","NOP()","187"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone BM1_ECR_1.","OTE(EZ_BM1_ECR_1.Zone_OK)","188"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30100.","OTE(EZ_30100.Zone_OK)","190"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30200.","OTE(EZ_30200.Zone_OK)","192"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30300.","OTE(EZ_30300.Zone_OK)","194"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 31600.","OTE(EZ_31600.Zone_OK)","196"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone ZONE_1.","OTE(EZ_ZONE_1.Zone_OK)","198"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone ZONE_2.","OTE(EZ_ZONE_2.Zone_OK)","200"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30101.","OTE(EZ_30101.Zone_OK)","202"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30102.","OTE(EZ_30102.Zone_OK)","204"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30103.","OTE(EZ_30103.Zone_OK)","206"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30201.","OTE(EZ_30201.Zone_OK)","208"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30202.","OTE(EZ_30202.Zone_OK)","210"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30203.","OTE(EZ_30203.Zone_OK)","212"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone A32A3.","OTE(EZ_A32A3.Zone_OK)","214"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone A32B3.","OTE(EZ_A32B3.Zone_OK)","216"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30307.","OTE(EZ_30307.Zone_OK)","218"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30301.","OTE(EZ_30301.Zone_OK)","220"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone A3283.","OTE(EZ_A3283.Zone_OK)","222"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30303.","OTE(EZ_30303.Zone_OK)","224"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30304.","OTE(EZ_30304.Zone_OK)","226"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30305.","OTE(EZ_30305.Zone_OK)","228"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone 30306.","OTE(EZ_30306.Zone_OK)","230"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone W15_1CR.","OTE(EZ_W15_1CR.Zone_OK)","232"
RCOMMENT,"MainProgram","E_STOPS","E-Stop Zone W12_1CR.","OTE(EZ_W12_1CR.Zone_OK)","234"
RCOMMENT,"MainProgram","FIRST_SCAN","****************************************************************************************************$NThis routine is configured to run once on the first scan of the PLC code.$NThis logic resets major fault codes.  This is here so that if there is a major fault that halts the controller, if someone does a power cycle to reset the fault the HMI will update correctly.$N$N****************************************************************************************************$N","CLR(S_PLC_101_CNTRL_FAULT_CODE)","0"
RCOMMENT,"MainProgram","FIRST_SCAN","Initialize Flasher control timers","MOV(500,INT.Flasher2On_TON.PRE)","1"
RCOMMENT,"MainProgram","HX1T_10_MRG","Merge Routine - Fixed Gap size$N*********************************************$N$NThis rung will fill the mainline bit shift register with a 1 when the merge inhibit photoeye is blocked.","OTL(HX1T_10_MRG.MainLineBS[1].15)","0"
RCOMMENT,"MainProgram","HX1T_10_MRG","For each mainline belt tach pulse do the following:$NBit shift right the mainline bit shift register$NIncrement the leading gap counter accumulator","ADD(1,HX1T_10_MRG.Lead_Gap_Acc,HX1T_10_MRG.Lead_Gap_Acc)","1"
RCOMMENT,"MainProgram","HX1T_10_MRG","This rung will add the distance the bag on the merge has coasted to the required minimum leading gap.$NThe variable $Q_MRGx.Lead_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged behind.","ADD(HX1T_10_MRG.BagPastPE,HX1T_10_MRGx.Lead_Gap,HX1T_10_MRG.Lead_Gap)","2"
RCOMMENT,"MainProgram","HX1T_10_MRG","As the BSR is unloading ones from the mainline bit shift register at element zero bit zero clear the leading gap counter accumulator.$NThis insures the leading gap counter only increments based on the tail of the mainline bag.","CLR(HX1T_10_MRG.Lead_Gap_Acc)","3"
RCOMMENT,"MainProgram","HX1T_10_MRG","Once the leading gap counter has accumulated to the leading gap constant the merge behind condition has been met.","OTE(HX1T_10_MRG.Lead_Gap_DN)","4"
RCOMMENT,"MainProgram","HX1T_10_MRG","Sync Run logic for non tracked merges.$NThis allows the merge to restart when the mainline stops and a bag is mid merge","RES(HX1T_10_MRG.SyncRunTmr)","5"
RCOMMENT,"MainProgram","HX1T_10_MRG","On the positive transition of the photoeye seal, populate the merge line bit shift registers.$NThe merge line bit shift registers are compared to the mainline bit shift registers to see if a bag can merge without crashing into another bag.$NThe variable $Q_MRGx.Trail_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged ahead of.$NThe variable $Q_MRGx.MinLength$Q is used when the merging bag does not have its length defined.  In such a case, you must assume the bag is the max size the system is designed to handle.$NIf the bag does have its length defined, the bag$'s length is added to $Q_MRGx.Trail_Gap$Q to define the value populated into the merge line shift register.$NThe variable $Q_MRGx.MaxLength$Q represents the number of the highest element in the $QMrgLenMask$Q arrays.  If the bag length + gap ends up greater than $Q_MRGx.MaxLength$Q, then $Q_MRGx.MaxLength$Q is used.","CLR(HX1T_10_MRG.BagPastPE)","8"
RCOMMENT,"MainProgram","HX1T_10_MRG","Shift the merge line bit shift one position for each pulse detected after the photoeye seal has been on but the bag is not merging as detected by the merge seal.$NThis will adjust the merge line bit shift register for any coasting of the merge conveyor.","ADD(1,HX1T_10_MRG.BagPastPE,HX1T_10_MRG.BagPastPE)","9"
RCOMMENT,"MainProgram","HX1T_10_MRG","This rung compares the mainline bit shift registers to the merge line bit shift registers.$NIf the mainline bit shift register has ones in the merge line bit shift register it will be passed through to the interference array.","AND(HX1T_10_MRG.MainLineBS[2],HX1T_10_MRG.MrgLineBS[2],HX1T_10_MRG.Intrfr[2])","10"
RCOMMENT,"MainProgram","HX1T_10_MRG","If the interference arrays are empty then the merge ahead conditions have been met.$NIf the leading gap accumulator is done then the merge behind conditions have been met.$NSet the merge ok bit and generate a positive transition when the mainline is clear for a bag to merge in.","OTE(HX1T_10_MRG.MrgOK)","11"
RCOMMENT,"MainProgram","HX1T_10_MRG","If there are no faults on the merge conveyor, the photoeye seal is set and the merge ok bit is on then seal on the merge seal bit.$NThe merge seal bit is used in the motor logic to turn on the merge conveyor.","OTU(HX1T_10_MRG.Hold_Align)","12"
RCOMMENT,"MainProgram","HX1T_10_MRG","Priority logic below$N***********************************************************$N$NAccumulate the Mainline priority timer if a bag is waiting on the merge and the mainline is running","RTO(HX1T_10_MRG.MLPriorityTmr,?,?)","13"
RCOMMENT,"MainProgram","HX1T_10_MRG","Turn on the Priority stop bit when a bag has been waiting on the merge for the time the priority timer has been set to","OTE(HX1T_10_MRG.PriorityStop)","14"
RCOMMENT,"MainProgram","HX1T_10_MRG","Accumulate the Merge line priority timer while in priority stop mode and the merge is actively merging bags onto the mainline","RTO(HX1T_10_MRG.MrgLPriorityTmr,?,?)","15"
RCOMMENT,"MainProgram","HX1T_10_MRG","Reset the Merge line priority timer if a bag merges from the merge before entering priority mode","RES(HX1T_10_MRG.MLPriorityTmr)","16"
RCOMMENT,"MainProgram","HX1T_10_MRG","Reset priority timers if there is no bag flow on the merge for X amount of time","RES(HX1T_10_MRG.MrgLPriorityTmr)","17"
RCOMMENT,"MainProgram","HX1T_10_MRG","Reset priority timers once the merge line has had priority for the preset time","RES(HX1T_10_MRG.MLPriorityTmr)","18"
RCOMMENT,"MainProgram","HX1T_10_MRG","Detect active bag flow on the merge","TON(HX1T_10_MRG.MrgLBagflow,?,?)","19"
RCOMMENT,"MainProgram","HX1T_10_MRG","Merge Run Control$N*************************************************$N$NReset the merge run timer when the merge, pre merge, pre pre merge photo-eyes have been blocked, or during a system startup","RES(HX1T_10_MRG.MergeRunTmr)","20"
RCOMMENT,"MainProgram","HX1T_10_MRG","Run the merge conveyor for the designated merge run time","RTO(HX1T_10_MRG.MergeRunTmr,?,?)","21"
RCOMMENT,"MainProgram","HX1T_10_MRG","When a bag merges, send a bag Arrival message to the UL.$N","JSR(R_MSG_TO_UL_Add,0)","22"
RCOMMENT,"MainProgram","HX1T_10_MRG_CAPT","Merge Distance capture routine.$NOnly call routine when setting up merge or testing merge$N*******************************************************************************$N$NClear the tail to head counter when a bag unblocks the capture photo-eye","MOV(0,HX1T_10_MRG.TailHeadAcc)","0"
RCOMMENT,"MainProgram","HX1T_10_MRG_CAPT","When a bag blocks the capture photo-eye, capture the current values of the: $NHead to Head count$NTail to head count.$Nand Zero the Head to Head count","MOV(0,HX1T_10_MRG.HeadHeadAcc)","1"
RCOMMENT,"MainProgram","HX1T_10_MRG_CAPT","For each pulse of the encoder increment the Head to Head and Tail the Head count","ADD(1,HX1T_10_MRG.TailHeadAcc,HX1T_10_MRG.TailHeadAcc)","2"
RCOMMENT,"MainProgram","HX1T_10_MRG_CAPT","Computer the bags Head to Head distance based on the number of pulses received during the last window","CPT(HX1T_10_MRG.LastBagMrgWndo,HX1T_10_MRG.HeadHeadCnt*CL1T_26_BTx.RES)","3"
RCOMMENT,"MainProgram","HX1T_10_MRG_CAPT","Computer the Tail to head distance based on the number of pulses received during the last gap","CPT(HX1T_10_MRG.LastBagGapDist,HX1T_10_MRG.TailHeadCnt*CL1T_26_BTx.RES)","4"
RCOMMENT,"MainProgram","HX1T_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","HX1T_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","HX1T_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","HX1T_GFX","Conveyor Graphic$N$N$N","MOV(HX1T_10_MTR.G,G_HX1T_10_STS)","1"
RCOMMENT,"MainProgram","HX1T_GFX","Conveyor Graphic$N$N$N","MOV(HX1T_09_MTR.G,G_HX1T_09_STS)","2"
RCOMMENT,"MainProgram","HX1T_GFX","Conveyor Graphic$N$N$N","MOV(HX1T_08_MTR.G,G_HX1T_08_STS)","3"
RCOMMENT,"MainProgram","HX1T_GFX","Conveyor Graphic$N$N$N","MOV(HX1T_07_MTR.G,G_HX1T_07_STS)","4"
RCOMMENT,"MainProgram","HX1T_GFX","Conveyor Graphic$N$N$N","MOV(HX1T_06_MTR.G,G_HX1T_06_STS)","5"
RCOMMENT,"MainProgram","HX1T_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","HX1T_JAMS","Jam Detection$N$N","RTO(HX1T_10A_PE.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","HX1T_JAMS","Jam Detection$N$N","RTO(HX1T_10_PE.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","HX1T_JAMS","Jam Detection$N$N","RTO(HX1T_09_PE.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","HX1T_JAMS","Jam Detection$N$N","RTO(HX1T_08_PE.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","HX1T_JAMS","Jam Detection$N$N","RTO(HX1T_07_PE.JAM_TMR,?,?)","13"
RCOMMENT,"MainProgram","HX1T_JAMS","Jam Detection$N$N","RTO(HX1T_06_PE.JAM_TMR,?,?)","16"
RCOMMENT,"MainProgram","HX1T_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","HX1T_MTRS","System Start Request","OTE(HX1T.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","HX1T_MTRS","Motor run expander.","OTE(HX1T.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","HX1T_MTRS","PE Grouping","OTE(HX1T.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","HX1T_MTRS","Reset Run Timer","RES(HX1T.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","HX1T_MTRS","Send downstream start request","OTE(HX1T.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","HX1T_MTRS","Run Timer","RTO(HX1T.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","HX1T_MTRS","Run Latch","OTE(HX1T.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","HX1T_MTRS","Motor HX1T_10$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","HX1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(HX1T_10_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","HX1T_MTRS","JRB Filter","OTE(HX1T_10_MTR.JRB_FILT)","10"
RCOMMENT,"MainProgram","HX1T_MTRS","Motor No Fault detection","OTE(HX1T_10_MTR.NO_FAULT)","11"
RCOMMENT,"MainProgram","HX1T_MTRS","Internal Motor timer.","TON(HX1T_10_MTR.IM_TMR,?,?)","12"
RCOMMENT,"MainProgram","HX1T_MTRS","Internal Motor.","OTE(HX1T_10_MTR.INTL_MTR)","13"
RCOMMENT,"MainProgram","HX1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(HX1T_10_MTR.T2H_SPACE_TMR)","14"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor Running.","OTE(HX1T_10_MTR.START_EN)","18"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(HX1T_10_MTR.ON_TMR,?,?)","22"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(HX1T_10_MTR.OFF_TMR,?,?)","23"
RCOMMENT,"MainProgram","HX1T_MTRS","Motor HX1T_09$N$N$N","NOP()","24"
RCOMMENT,"MainProgram","HX1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(HX1T_09_MTR.ANTI_CASC)","25"
RCOMMENT,"MainProgram","HX1T_MTRS","Motor No Fault detection","OTE(HX1T_09_MTR.NO_FAULT)","26"
RCOMMENT,"MainProgram","HX1T_MTRS","Internal Motor timer.","TON(HX1T_09_MTR.IM_TMR,?,?)","27"
RCOMMENT,"MainProgram","HX1T_MTRS","Internal Motor.","OTE(HX1T_09_MTR.INTL_MTR)","28"
RCOMMENT,"MainProgram","HX1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(HX1T_09_MTR.T2H_SPACE_TMR)","29"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor Running.","OTE(HX1T_09_MTR.START_EN)","33"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(HX1T_09_MTR.ON_TMR,?,?)","36"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(HX1T_09_MTR.OFF_TMR,?,?)","37"
RCOMMENT,"MainProgram","HX1T_MTRS","Motor HX1T_08$N$N$N","NOP()","38"
RCOMMENT,"MainProgram","HX1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(HX1T_08_MTR.ANTI_CASC)","39"
RCOMMENT,"MainProgram","HX1T_MTRS","Motor No Fault detection","OTE(HX1T_08_MTR.NO_FAULT)","40"
RCOMMENT,"MainProgram","HX1T_MTRS","Internal Motor timer.","TON(HX1T_08_MTR.IM_TMR,?,?)","41"
RCOMMENT,"MainProgram","HX1T_MTRS","Internal Motor.","OTE(HX1T_08_MTR.INTL_MTR)","42"
RCOMMENT,"MainProgram","HX1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(HX1T_08_MTR.T2H_SPACE_TMR)","43"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor Running.","OTE(HX1T_08_MTR.START_EN)","47"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(HX1T_08_MTR.ON_TMR,?,?)","50"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(HX1T_08_MTR.OFF_TMR,?,?)","51"
RCOMMENT,"MainProgram","HX1T_MTRS","Motor HX1T_07$N$N$N","NOP()","52"
RCOMMENT,"MainProgram","HX1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(HX1T_07_MTR.ANTI_CASC)","53"
RCOMMENT,"MainProgram","HX1T_MTRS","Motor No Fault detection","OTE(HX1T_07_MTR.NO_FAULT)","54"
RCOMMENT,"MainProgram","HX1T_MTRS","Internal Motor timer.","TON(HX1T_07_MTR.IM_TMR,?,?)","55"
RCOMMENT,"MainProgram","HX1T_MTRS","Internal Motor.","OTE(HX1T_07_MTR.INTL_MTR)","56"
RCOMMENT,"MainProgram","HX1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(HX1T_07_MTR.T2H_SPACE_TMR)","57"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor Running.","OTE(HX1T_07_MTR.START_EN)","61"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(HX1T_07_MTR.ON_TMR,?,?)","64"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(HX1T_07_MTR.OFF_TMR,?,?)","65"
RCOMMENT,"MainProgram","HX1T_MTRS","Motor HX1T_06$N$N$N","NOP()","66"
RCOMMENT,"MainProgram","HX1T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(HX1T_06_MTR.ANTI_CASC)","67"
RCOMMENT,"MainProgram","HX1T_MTRS","Motor No Fault detection","OTE(HX1T_06_MTR.NO_FAULT)","68"
RCOMMENT,"MainProgram","HX1T_MTRS","Internal Motor timer.","TON(HX1T_06_MTR.IM_TMR,?,?)","69"
RCOMMENT,"MainProgram","HX1T_MTRS","Internal Motor.","OTE(HX1T_06_MTR.INTL_MTR)","70"
RCOMMENT,"MainProgram","HX1T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(HX1T_06_MTR.T2H_SPACE_TMR)","71"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor Running.","OTE(HX1T_06_MTR.START_EN)","75"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(HX1T_06_MTR.ON_TMR,?,?)","78"
RCOMMENT,"MainProgram","HX1T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(HX1T_06_MTR.OFF_TMR,?,?)","79"
RCOMMENT,"MainProgram","HX1T_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","HX1T_PE_Filters","Photoeye","OTE(HX1T_10A_PE.FILT)","1"
RCOMMENT,"MainProgram","HX1T_PE_Filters","Photoeye","OTE(HX1T_10_PE.FILT)","4"
RCOMMENT,"MainProgram","HX1T_PE_Filters","Photoeye","OTE(HX1T_09_PE.FILT)","8"
RCOMMENT,"MainProgram","HX1T_PE_Filters","Photoeye","OTE(HX1T_08_PE.FILT)","12"
RCOMMENT,"MainProgram","HX1T_PE_Filters","Photoeye","OTE(HX1T_07_PE.FILT)","16"
RCOMMENT,"MainProgram","HX1T_PE_Filters","Photoeye","OTE(HX1T_06_PE.FILT)","20"
RCOMMENT,"MainProgram","HX1T_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","HX1T_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","HX1T_STATUS","Conveyor Status$N$N$N","NOP()","18"
RCOMMENT,"MainProgram","HX1T_STATUS","Conveyor Status$N$N$N","NOP()","34"
RCOMMENT,"MainProgram","HX1T_STATUS","Conveyor Status$N$N$N","NOP()","50"
RCOMMENT,"MainProgram","HX1T_STATUS","Conveyor Status$N$N$N","NOP()","66"
RCOMMENT,"MainProgram","HX1T_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","HX1T_VFDS","Motor HX1T_10 VFD$N***************************$N","TON(HX1T_10_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","HX1T_VFDS","Motor HX1T_09 VFD$N***************************$N","TON(HX1T_09_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","HX1T_VFDS","Motor HX1T_08 VFD$N***************************$N","TON(HX1T_08_VFD.POWERED_DLY_TMR,?,?)","5"
RCOMMENT,"MainProgram","HX1T_VFDS","Motor HX1T_07 VFD$N***************************$N","TON(HX1T_07_VFD.POWERED_DLY_TMR,?,?)","7"
RCOMMENT,"MainProgram","HX1T_VFDS","Motor HX1T_06 VFD$N***************************$N","TON(HX1T_06_VFD.POWERED_DLY_TMR,?,?)","9"
RCOMMENT,"MainProgram","I_RESET_STATS","****************************************************************$NThis routine resets all HMI and Upper Level statistics.$N$N$N****************************************************************","NOP()","0"
RCOMMENT,"MainProgram","I_RESET_STATS","Device Related and Misc Stats","NOP()","1"
RCOMMENT,"MainProgram","I_RESET_STATS","Clear Out Tracking Window Captures","NOP()","16"
RCOMMENT,"MainProgram","I_SET_BT_CONST","****************************************************************$NThis routine sets values for the associated encoders.$N$NNote:  It is important that the I_SET_MTR_CONST routine is called before this routine.$N$N$N****************************************************************$N$N***THIS ROUTINE IS NOT EXECUTED EVERY SCAN***","NOP()","0"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(BM1_12_BTx.FAULT_TIME,BM1_12_BT.FAULT_TIMER.PRE)","1"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(BM1_13_BTx.FAULT_TIME,BM1_13_BT.FAULT_TIMER.PRE)","2"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(BM1_14_BTx.FAULT_TIME,BM1_14_BT.FAULT_TIMER.PRE)","3"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(BM1_38_BTx.FAULT_TIME,BM1_38_BT.FAULT_TIMER.PRE)","4"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(O2T_18_BTx.FAULT_TIME,O2T_18_BT.FAULT_TIMER.PRE)","5"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(O2T_17_BTx.FAULT_TIME,O2T_17_BT.FAULT_TIMER.PRE)","6"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(C2T_17_BTx.FAULT_TIME,C2T_17_BT.FAULT_TIMER.PRE)","7"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(C2T_16_BTx.FAULT_TIME,C2T_16_BT.FAULT_TIMER.PRE)","8"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(O2T_10_BTx.FAULT_TIME,O2T_10_BT.FAULT_TIMER.PRE)","9"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(CL1T_26_BTx.FAULT_TIME,CL1T_26_BT.FAULT_TIMER.PRE)","10"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(HX1T_10_BTx.FAULT_TIME,HX1T_10_BT.FAULT_TIMER.PRE)","11"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(HX1T_09_BTx.FAULT_TIME,HX1T_09_BT.FAULT_TIMER.PRE)","12"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(T5T_08_BTx.FAULT_TIME,T5T_08_BT.FAULT_TIMER.PRE)","13"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(T5T_09_BTx.FAULT_TIME,T5T_09_BT.FAULT_TIMER.PRE)","14"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(XO2_05_BTx.FAULT_TIME,XO2_05_BT.FAULT_TIMER.PRE)","15"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(XO2_04_BTx.FAULT_TIME,XO2_04_BT.FAULT_TIMER.PRE)","16"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(O4T_10_BTx.FAULT_TIME,O4T_10_BT.FAULT_TIMER.PRE)","17"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(O4T_09_BTx.FAULT_TIME,O4T_09_BT.FAULT_TIMER.PRE)","18"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(BM1_23_BTx.FAULT_TIME,BM1_23_BT.FAULT_TIMER.PRE)","19"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(BM1_22_BTx.FAULT_TIME,BM1_22_BT.FAULT_TIMER.PRE)","20"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(O4T_20_BTx.FAULT_TIME,O4T_20_BT.FAULT_TIMER.PRE)","21"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(CL12T_36_BTx.FAULT_TIME,CL12T_36_BT.FAULT_TIMER.PRE)","22"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(CL12T_35_BTx.FAULT_TIME,CL12T_35_BTP.FAULT_TIMER.PRE)","23"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(C4_09_BTx.FAULT_TIME,C4_09_BT.FAULT_TIMER.PRE)","24"
RCOMMENT,"MainProgram","I_SET_BT_CONST","Set BT values and call BT calc routine.","MOV(O4_04_BTx.FAULT_TIME,O4_04_BT.FAULT_TIMER.PRE)","25"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","****************************************************************$NThis routine sets the values of constants used throughout the PLC.$N$N$N****************************************************************","NOP()","0"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","PLC device ID","MOV(101,INT.PLC_Number_Const)","1"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set the FIFO Array Constants","SUB(MSG_TO_UL_QUEUE.QUEUE_SIZE,1,MSG_TO_UL_QUEUE.QUEUE_SIZE_MIN1)","2"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","HMI Color Values","MOV(15,Status.Green)","4"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI Conveyor Status Values","OR(5242880,Status.Grey,Status.ConvEstopRes)","5"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI Diverter Status Values","OR(5373952,Status.Brown,Status.DivProxOverride)","6"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI Diverter Position Values","MOV(4,Status.DivPosHomeAndExt)","7"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI Pusher Status Values","OR(3932160,Status.Green,Status.PusherRunning)","8"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI BSD Status Values","OR(5046272,Status.Cyan,Status.BSDPrintEnabled)","9"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI ATR Status Values","OR(131072,Status.Yellow,Status.ATRULFault)","10"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI BDS Status Values","OR(5111808,Status.Black,Status.BDSTimeOutReady)","11"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI MCP Status Values","OR(720896,Status.Blue,Status.MCPCTCTRFlt)","12"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI ISD Status Values","OR(851968,Status.Magenta,Status.ISDDieBack)","13"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI ISD Mode Values","MOV(14,Status.ISDModexRayMin)","14"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI Door Status Values","OR(3407877,Status.Green_DKGreen,Status.DoorOvRide)","15"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI Door Position Values","MOV(3,Status.DoorPOSClosed)","16"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI MEC Status Values","OR(2293760,Status.Grey,Status.MECIdle)","17"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI Vertisorter Status Values","OR(3932160,Status.Green,Status.VSRunning)","18"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Set HMI Vertisorter Position Values","MOV(4,Status.VSPOSUpAndDn)","19"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","$N$N$N========================= UPPER LEVEL MESSAGING =========================$N$N$N$NMessage type IDs.","MOV(60,MsgConst.MsgID_BDS)","20"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Event Codes.","MOV(5009,MsgConst.Event_TUCBRARemoved)","21"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Reason Codes.","MOV(50014,MsgConst.Rson_TUUpstreamPurge)","22"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","Sort Method Codes.","MOV(10008,MsgConst.Sort_TooManyBcds)","23"
RCOMMENT,"MainProgram","I_SET_CONSTANTS","General Codes.","MOV(-1,MsgConst.NA)","24"
RCOMMENT,"MainProgram","I_SET_DIV_CONST","Set HSD Constants$NDiverter XO2","MOV(8,XO2_HSDx.HMI_STATE[3].LEN)","0"
RCOMMENT,"MainProgram","I_SET_DIV_CONST","Set HSD Constants$NDiverter XO1","MOV(8,XO1_HSDx.HMI_STATE[3].LEN)","1"
RCOMMENT,"MainProgram","I_SET_MRG_CONST","****************************************************************$NThis routine sets values for the associated merges.$N****************************************************************$N$N***THIS ROUTINE IS NOT EXECUTED EVERY SCAN***","NOP()","0"
RCOMMENT,"MainProgram","I_SET_MRG_CONST","Find the size of the merge length mask. This is the maximum allowable length of a bag plus its gap, measured in encoder pulses.","MOV(Merge_mask_size,MrgSetupShiftControl.LEN)","2"
RCOMMENT,"MainProgram","I_SET_MRG_CONST","Set up the merge length masks.","FLL(0,MrgLenMask3[0],Merge_mask_size)","4"
RCOMMENT,"MainProgram","I_SET_MRG_CONST","Set the maximum length for each merge.","ADD(1,MaxLengthSetupCount,MaxLengthSetupCount)","7"
RCOMMENT,"MainProgram","I_SET_MRG_CONST","*************$NNext 3 rungs are required to set the merge run timer preset value for each merge in this plc.$NRung 1 of 3$NGet the size of the MRG array, so we know how many run timer values to set.$NFill the array index pointer with 0","MOV(0,MRG_array_index)","9"
RCOMMENT,"MainProgram","I_SET_MRG_CONST","Rung 2 of 3$NJump to label for the loop$N","NOP()","10"
RCOMMENT,"MainProgram","I_SET_MRG_CONST","Rung 3 of 3$NMove 10000 into the MergeRunTmr.Pre$NIndex the array pointer.$NIf the array pointer is less than the length of the MRG array, loop back around.$N***********************************","JMP(SET_MRG_RUN_TMR_PRE)","11"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","****************************************************************$NThis routine sets values for the associated motors and motor groups.$N$N$N****************************************************************$N$N***THIS ROUTINE IS NOT EXECUTED EVERY SCAN***","NOP()","0"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","=============== MOTOR ASSOCIATED VALUES ===============","NOP()","1"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,BM1_30_MTR,BM1_30_MTRx,BM1_30_MTR)","2"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,BM1_29_MTR,BM1_29_MTRx,BM1_29_MTR)","3"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,BM1_28_MTR,BM1_28_MTRx,BM1_28_MTR)","4"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,BM1_27_MTR,BM1_27_MTRx,BM1_27_MTR)","5"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_26_MTR.OFF_TMR.PRE)","6"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_25_MTR.OFF_TMR.PRE)","7"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_24_MTR.OFF_TMR.PRE)","8"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_23_MTR.OFF_TMR.PRE)","9"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_22_MTR.OFF_TMR.PRE)","10"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_21_MTR.OFF_TMR.PRE)","11"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_20_MTR.OFF_TMR.PRE)","12"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_19_MTR.OFF_TMR.PRE)","13"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_18_MTR.OFF_TMR.PRE)","14"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_17_MTR.OFF_TMR.PRE)","15"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_16_MTR.OFF_TMR.PRE)","16"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_15_MTR.OFF_TMR.PRE)","17"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_14_MTR.OFF_TMR.PRE)","18"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_38_MTR.OFF_TMR.PRE)","19"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_37_MTR.OFF_TMR.PRE)","20"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_36_MTR.OFF_TMR.PRE)","21"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_35_MTR.OFF_TMR.PRE)","22"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_34_MTR.OFF_TMR.PRE)","23"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_13_MTR.OFF_TMR.PRE)","24"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_12_MTR.OFF_TMR.PRE)","25"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_11_MTR.OFF_TMR.PRE)","26"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_10_MTR.OFF_TMR.PRE)","27"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_09_MTR.OFF_TMR.PRE)","28"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_08_MTR.OFF_TMR.PRE)","29"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,BM1_07_MTR.OFF_TMR.PRE)","30"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,BM1_06_MTR,BM1_06_MTRx,BM1_06_MTR)","31"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,BM1_05_MTR,BM1_05_MTRx,BM1_05_MTR)","32"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,BM1_04_MTR,BM1_04_MTRx,BM1_04_MTR)","33"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,BM1_03_MTR,BM1_03_MTRx,BM1_03_MTR)","34"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,BM1_02_MTR,BM1_02_MTRx,BM1_02_MTR)","35"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,BM1_01_MTR,BM1_01_MTRx,BM1_01_MTR)","36"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_18_MTR.OFF_TMR.PRE)","37"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_17_MTR.OFF_TMR.PRE)","38"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_16_MTR.OFF_TMR.PRE)","39"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_15_MTR.OFF_TMR.PRE)","40"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_14_MTR.OFF_TMR.PRE)","41"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_13_MTR.OFF_TMR.PRE)","42"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_12_MTR.OFF_TMR.PRE)","43"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_11_MTR.OFF_TMR.PRE)","44"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_10_MTR.OFF_TMR.PRE)","45"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_09_MTR.OFF_TMR.PRE)","46"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_08_MTR.OFF_TMR.PRE)","47"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_07_MTR.OFF_TMR.PRE)","48"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_06_MTR.OFF_TMR.PRE)","49"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_05_MTR.OFF_TMR.PRE)","50"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O2T_04_MTR.OFF_TMR.PRE)","51"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,C2T_17_MTR.OFF_TMR.PRE)","52"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,C2T_16_MTR.OFF_TMR.PRE)","53"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,C2T_15_MTR.OFF_TMR.PRE)","54"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,C2T_14_MTR.OFF_TMR.PRE)","55"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,C2T_13_MTR.OFF_TMR.PRE)","56"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,C2T_12_MTR.OFF_TMR.PRE)","57"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL2T_09_MTR.OFF_TMR.PRE)","58"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL2T_08_MTR.OFF_TMR.PRE)","59"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL2T_07_MTR.OFF_TMR.PRE)","60"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL2T_06_MTR.OFF_TMR.PRE)","61"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL2T_05_MTR,CL2T_05_MTRx,CL2T_05_MTR)","62"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL2T_04_MTR,CL2T_04_MTRx,CL2T_04_MTR)","63"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL2T_03_MTR,CL2T_03_MTRx,CL2T_03_MTR)","64"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL2T_02_MTR,CL2T_02_MTRx,CL2T_02_MTR)","65"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL2T_01_MTR,CL2T_01_MTRx,CL2T_01_MTR)","66"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL3T_08_MTR.OFF_TMR.PRE)","67"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL3T_07_MTR.OFF_TMR.PRE)","68"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL3T_06_MTR.OFF_TMR.PRE)","69"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL3T_05_MTR.OFF_TMR.PRE)","70"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL3T_04_MTR,CL3T_04_MTRx,CL3T_04_MTR)","71"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL3T_03_MTR,CL3T_03_MTRx,CL3T_03_MTR)","72"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL3T_02_MTR,CL3T_02_MTRx,CL3T_02_MTR)","73"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL3T_01_MTR,CL3T_01_MTRx,CL3T_01_MTR)","74"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,O4T_13_MTR,O4T_13_MTRx,O4T_13_MTR)","75"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O4T_12_MTR.OFF_TMR.PRE)","76"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O4T_11_MTR.OFF_TMR.PRE)","77"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O4T_10_MTR.OFF_TMR.PRE)","78"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O4T_09_MTR.OFF_TMR.PRE)","79"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O4T_08_MTR.OFF_TMR.PRE)","80"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O4T_07_MTR.OFF_TMR.PRE)","81"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O4T_06_MTR.OFF_TMR.PRE)","82"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O4T_05_MTR.OFF_TMR.PRE)","83"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,XO1_03_MTR.OFF_TMR.PRE)","84"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,XO1_02_MTR.OFF_TMR.PRE)","85"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,XO1_01_MTR,XO1_01_MTRx,XO1_01_MTR)","86"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,T5T_09_MTR.OFF_TMR.PRE)","87"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,T5T_08_MTR.OFF_TMR.PRE)","88"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,XO2_05_MTR.OFF_TMR.PRE)","89"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,XO2_04_MTR.OFF_TMR.PRE)","90"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,XO2_03_MTR.OFF_TMR.PRE)","91"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,XO2_02_MTR.OFF_TMR.PRE)","92"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,XO2_01_MTR.OFF_TMR.PRE)","93"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_26_MTR.OFF_TMR.PRE)","94"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL1T_25_MTR,CL1T_25_MTRx,CL1T_25_MTR)","95"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_24_MTR.OFF_TMR.PRE)","96"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_23_MTR.OFF_TMR.PRE)","97"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL1T_22_MTR,CL1T_22_MTRx,CL1T_22_MTR)","98"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_21_MTR.OFF_TMR.PRE)","99"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_20_MTR.OFF_TMR.PRE)","100"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_19_MTR.OFF_TMR.PRE)","101"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_18_MTR.OFF_TMR.PRE)","102"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_17_MTR.OFF_TMR.PRE)","103"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_16_MTR.OFF_TMR.PRE)","104"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_15_MTR.OFF_TMR.PRE)","105"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_14_MTR.OFF_TMR.PRE)","106"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_13_MTR.OFF_TMR.PRE)","107"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_12_MTR.OFF_TMR.PRE)","108"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_11_MTR.OFF_TMR.PRE)","109"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_10_MTR.OFF_TMR.PRE)","110"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_09_MTR.OFF_TMR.PRE)","111"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_08_MTR.OFF_TMR.PRE)","112"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_07_MTR.OFF_TMR.PRE)","113"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_06_MTR.OFF_TMR.PRE)","114"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_05_MTR.OFF_TMR.PRE)","115"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL1T_04_MTR.OFF_TMR.PRE)","116"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL1T_03_MTR,CL1T_03_MTRx,CL1T_03_MTR)","117"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL1T_02_MTR,CL1T_02_MTRx,CL1T_02_MTR)","118"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,CL1T_01_MTR,CL1T_01_MTRx,CL1T_01_MTR)","119"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,HX1T_10A_MTR,HX1T_10A_MTRx,HX1T_10A_MTR)","120"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,HX1T_10_MTR.OFF_TMR.PRE)","121"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,HX1T_09_MTR.OFF_TMR.PRE)","122"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,HX1T_08_MTR.OFF_TMR.PRE)","123"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,HX1T_07_MTR.OFF_TMR.PRE)","124"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,HX1T_06_MTR.OFF_TMR.PRE)","125"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,O4T_22_MTR,O4T_22_MTRx,O4T_22_MTR)","126"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,O4T_21_MTR,O4T_21_MTRx,O4T_21_MTR)","127"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O4T_20_MTR.OFF_TMR.PRE)","128"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O4T_19_MTR.OFF_TMR.PRE)","129"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O4T_18_MTR.OFF_TMR.PRE)","130"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O4T_17_MTR.OFF_TMR.PRE)","131"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O3T_21_MTR.OFF_TMR.PRE)","132"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","JSR(R_CALC_MTR_CONST,2,O3T_20_MTR,O3T_20_MTRx,O3T_20_MTR)","133"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O3T_19_MTR.OFF_TMR.PRE)","134"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O3T_18_MTR.OFF_TMR.PRE)","135"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,O3T_17_MTR.OFF_TMR.PRE)","136"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL12T_36_MTR.OFF_TMR.PRE)","137"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set motor values and call motor calc routine.","MOV(0,CL12T_35_MTR.OFF_TMR.PRE)","138"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","=============== MOTOR GROUP ASSOCIATED VALUES =========","NOP()","139"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,BM1_A.MTR_GRP.AUTO_STOP_TIMER.PRE)","140"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,BM1_B.MTR_GRP.AUTO_STOP_TIMER.PRE)","141"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,BM1_C.MTR_GRP.AUTO_STOP_TIMER.PRE)","142"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,MCP_03.MTR_GRP.AUTO_STOP_TIMER.PRE)","143"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,C2T.MTR_GRP.AUTO_STOP_TIMER.PRE)","144"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,CL2T.MTR_GRP.AUTO_STOP_TIMER.PRE)","145"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,CL3T.MTR_GRP.AUTO_STOP_TIMER.PRE)","146"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,O4T_2.MTR_GRP.AUTO_STOP_TIMER.PRE)","147"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,T5T.MTR_GRP.AUTO_STOP_TIMER.PRE)","148"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,XO2.MTR_GRP.AUTO_STOP_TIMER.PRE)","149"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,CL1T.MTR_GRP.AUTO_STOP_TIMER.PRE)","150"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,HX1T.MTR_GRP.AUTO_STOP_TIMER.PRE)","151"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,O3T.MTR_GRP.AUTO_STOP_TIMER.PRE)","152"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,O4T.MTR_GRP.AUTO_STOP_TIMER.PRE)","153"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,CL12T.MTR_GRP.AUTO_STOP_TIMER.PRE)","154"
RCOMMENT,"MainProgram","I_SET_MTR_CONST","Set autostop timer preset value for motor group.","MOV(300000,XO1.MTR_GRP.AUTO_STOP_TIMER.PRE)","155"
RCOMMENT,"MainProgram","I_SET_PE_CONST","****************************************************************$NThis routine sets values for the associated photoeyes.$N$N$N****************************************************************$N$N***THIS ROUTINE IS NOT EXECUTED EVERY SCAN***","NOP()","0"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_06_PE2,BM1_06_MTRx,BM1_06_PE2)","1"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_06_PE1,BM1_06_MTRx,BM1_06_PE1)","2"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_07_PE,BM1_07_MTRx,BM1_07_PE)","3"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_08_PE,BM1_08_MTRx,BM1_08_PE)","4"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_09_PE,BM1_09_MTRx,BM1_09_PE)","5"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_10_PE,BM1_10_MTRx,BM1_10_PE)","6"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_11_PE,BM1_11_MTRx,BM1_11_PE)","7"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_12_PE,BM1_12_MTRx,BM1_12_PE)","8"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_13_PE,BM1_13_MTRx,BM1_13_PE)","9"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_14_PE2,BM1_14_MTRx,BM1_14_PE2)","10"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_14_PE1,BM1_14_MTRx,BM1_14_PE1)","11"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_15_PE,BM1_15_MTRx,BM1_15_PE)","12"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_16_PE,BM1_16_MTRx,BM1_16_PE)","13"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_17_PE,BM1_17_MTRx,BM1_17_PE)","14"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_18_PE,BM1_18_MTRx,BM1_18_PE)","15"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_19_PE2,BM1_19_MTRx,BM1_19_PE2)","16"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_19_PE1,BM1_19_MTRx,BM1_19_PE1)","17"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_20_PE,BM1_20_MTRx,BM1_20_PE)","18"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_21_PE,BM1_21_MTRx,BM1_21_PE)","19"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_22_PE,BM1_22_MTRx,BM1_22_PE)","20"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_23_PE2,BM1_23_MTRx,BM1_23_PE2)","21"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_23_PE1,BM1_23_MTRx,BM1_23_PE1)","22"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_23_PE,BM1_23_MTRx,BM1_23_PE)","23"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_24_PE,BM1_24_MTRx,BM1_24_PE)","24"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_25_PE,BM1_25_MTRx,BM1_25_PE)","25"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_26_PE,BM1_26_MTRx,BM1_26_PE)","26"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_27_PE2,BM1_27_MTRx,BM1_27_PE2)","27"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_27_PE1,BM1_27_MTRx,BM1_27_PE1)","28"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_28_PE2,BM1_28_MTRx,BM1_28_PE2)","29"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_28_PE1,BM1_28_MTRx,BM1_28_PE1)","30"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_29_PE2,BM1_29_MTRx,BM1_29_PE2)","31"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_29_PE1,BM1_29_MTRx,BM1_29_PE1)","32"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_30_PE3,BM1_30_MTRx,BM1_30_PE3)","33"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_30_PE2,BM1_30_MTRx,BM1_30_PE2)","34"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_30_PE1,BM1_30_MTRx,BM1_30_PE1)","35"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_34_PE,BM1_34_MTRx,BM1_34_PE)","36"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_35_PE,BM1_35_MTRx,BM1_35_PE)","37"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_36_PE,BM1_36_MTRx,BM1_36_PE)","38"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_37_PE,BM1_37_MTRx,BM1_37_PE)","39"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,BM1_38_PE,BM1_38_MTRx,BM1_38_PE)","40"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_18_PE,O2T_18_MTRx,O2T_18_PE)","41"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_17_PE,O2T_17_MTRx,O2T_17_PE)","42"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_16_PE,O2T_16_MTRx,O2T_16_PE)","43"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_15_PE,O2T_15_MTRx,O2T_15_PE)","44"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_14_PE,O2T_14_MTRx,O2T_14_PE)","45"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_13_PE,O2T_13_MTRx,O2T_13_PE)","46"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_12_PE,O2T_12_MTRx,O2T_12_PE)","47"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_11_PE,O2T_11_MTRx,O2T_11_PE)","48"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_10_PE,O2T_10_MTRx,O2T_10_PE)","49"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_09_PE,O2T_09_MTRx,O2T_09_PE)","50"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_08_PE,O2T_08_MTRx,O2T_08_PE)","51"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_07_PE,O2T_07_MTRx,O2T_07_PE)","52"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_06_PE,O2T_06_MTRx,O2T_06_PE)","53"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_05_PE,O2T_05_MTRx,O2T_05_PE)","54"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O2T_04_PE,O2T_04_MTRx,O2T_04_PE)","55"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,C2T_17_PE,C2T_17_MTRx,C2T_17_PE)","56"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,C2T_16_PE,C2T_16_MTRx,C2T_16_PE)","57"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,C2T_15_PE,C2T_15_MTRx,C2T_15_PE)","58"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,C2T_14_PE,C2T_14_MTRx,C2T_14_PE)","59"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,C2T_13_PE,C2T_13_MTRx,C2T_13_PE)","60"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,C2T_12_PE,C2T_12_MTRx,C2T_12_PE)","61"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL2T_09_PE,CL2T_09_MTRx,CL2T_09_PE)","62"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL2T_08_PE,CL2T_08_MTRx,CL2T_08_PE)","63"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL2T_07_PE,CL2T_07_MTRx,CL2T_07_PE)","64"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL2T_06_PE,CL2T_06_MTRx,CL2T_06_PE)","65"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL2T_05_PE,CL2T_05_MTRx,CL2T_05_PE)","66"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL2T_04_PE,CL2T_04_MTRx,CL2T_04_PE)","67"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL2T_03_PE,CL2T_03_MTRx,CL2T_03_PE)","68"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL2T_02_PE,CL2T_02_MTRx,CL2T_02_PE)","69"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL2T_01_PE,CL2T_01_MTRx,CL2T_01_PE)","70"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL3T_08_PE,CL3T_08_MTRx,CL3T_08_PE)","71"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL3T_07_PE,CL3T_07_MTRx,CL3T_07_PE)","72"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL3T_06_PE,CL3T_06_MTRx,CL3T_06_PE)","73"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL3T_05_PE,CL3T_05_MTRx,CL3T_05_PE)","74"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL3T_04_PE,CL3T_04_MTRx,CL3T_04_PE)","75"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL3T_03_PE,CL3T_03_MTRx,CL3T_03_PE)","76"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL3T_02_PE,CL3T_02_MTRx,CL3T_02_PE)","77"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL3T_01_PE,CL3T_01_MTRx,CL3T_01_PE)","78"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_13_PE,O4T_13_MTRx,O4T_13_PE)","79"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_12_PE,O4T_12_MTRx,O4T_12_PE)","80"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_11_PE,O4T_11_MTRx,O4T_11_PE)","81"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_10_PE1,O4T_10_MTRx,O4T_10_PE1)","82"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_10_PE2,O4T_10_MTRx,O4T_10_PE2)","83"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_09_PE,O4T_09_MTRx,O4T_09_PE)","84"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_08_PE,O4T_08_MTRx,O4T_08_PE)","85"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_07_PE,O4T_07_MTRx,O4T_07_PE)","86"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_06_PE,O4T_06_MTRx,O4T_06_PE)","87"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_05_PE,O4T_05_MTRx,O4T_05_PE)","88"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,XO1_03_PE,XO1_03_MTRx,XO1_03_PE)","89"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,XO1_02_PE,XO1_02_MTRx,XO1_02_PE)","90"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,XO1_01_PE,XO1_01_MTRx,XO1_01_PE)","91"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,XO1_01_PE2,XO1_01_MTRx,XO1_01_PE2)","92"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,T5T_09_PE,T5T_09_MTRx,T5T_09_PE)","93"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,T5T_08_PE,T5T_08_MTRx,T5T_08_PE)","94"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,XO2_05_PE,XO2_05_MTRx,XO2_05_PE)","95"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,XO2_04_PE,XO2_04_MTRx,XO2_04_PE)","96"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,XO2_03_PE,XO2_03_MTRx,XO2_03_PE)","97"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,XO2_02_PE,XO2_02_MTRx,XO2_02_PE)","98"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,XO2_01_PE,XO2_01_MTRx,XO2_01_PE)","99"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_26_PE1,CL1T_26_MTRx,CL1T_26_PE1)","100"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_26_PE2,CL1T_26_MTRx,CL1T_26_PE2)","101"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_24_PE,CL1T_24_MTRx,CL1T_24_PE)","102"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_23_PE,CL1T_23_MTRx,CL1T_23_PE)","103"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_21_PE,CL1T_21_MTRx,CL1T_21_PE)","104"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_20_PE,CL1T_20_MTRx,CL1T_20_PE)","105"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_19_PE,CL1T_19_MTRx,CL1T_19_PE)","106"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_18_PE,CL1T_18_MTRx,CL1T_18_PE)","107"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_17_PE,CL1T_17_MTRx,CL1T_17_PE)","108"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_16_PE,CL1T_16_MTRx,CL1T_16_PE)","109"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_15_PE,CL1T_15_MTRx,CL1T_15_PE)","110"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_14_PE,CL1T_14_MTRx,CL1T_14_PE)","111"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_13_PE,CL1T_13_MTRx,CL1T_13_PE)","112"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_12_PE,CL1T_12_MTRx,CL1T_12_PE)","113"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_11_PE,CL1T_11_MTRx,CL1T_11_PE)","114"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_10_PE,CL1T_10_MTRx,CL1T_10_PE)","115"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_09_PE,CL1T_09_MTRx,CL1T_09_PE)","116"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_08_PE,CL1T_08_MTRx,CL1T_08_PE)","117"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_07_PE,CL1T_07_MTRx,CL1T_07_PE)","118"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_06_PE,CL1T_06_MTRx,CL1T_06_PE)","119"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_05_PE,CL1T_05_MTRx,CL1T_05_PE)","120"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_04_PE,CL1T_04_MTRx,CL1T_04_PE)","121"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_03_PE,CL1T_03_MTRx,CL1T_03_PE)","122"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_02_PE,CL1T_02_MTRx,CL1T_02_PE)","123"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL1T_01_PE,CL1T_01_MTRx,CL1T_01_PE)","124"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,HX1T_10A_PE,HX1T_10A_MTRx,HX1T_10A_PE)","125"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,HX1T_10_PE,HX1T_10_MTRx,HX1T_10_PE)","126"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,HX1T_09_PE,HX1T_09_MTRx,HX1T_09_PE)","127"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,HX1T_08_PE,HX1T_08_MTRx,HX1T_08_PE)","128"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,HX1T_07_PE,HX1T_07_MTRx,HX1T_07_PE)","129"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,HX1T_06_PE,HX1T_06_MTRx,HX1T_06_PE)","130"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_22_PE,O4T_22_MTRx,O4T_22_PE)","131"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_21_PE,O4T_21_MTRx,O4T_21_PE)","132"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_20_PE,O4T_20_MTRx,O4T_20_PE)","133"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_19_PE,O4T_19_MTRx,O4T_19_PE)","134"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_18_PE,O4T_18_MTRx,O4T_18_PE)","135"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_17_PE,O4T_17_MTRx,O4T_17_PE)","136"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O4T_16_PE,O3T_21_MTRx,O4T_16_PE)","137"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O3T_20_PE,O3T_20_MTRx,O3T_20_PE)","138"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O3T_19_PE,O3T_19_MTRx,O3T_19_PE)","139"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O3T_18_PE,O3T_18_MTRx,O3T_18_PE)","140"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,O3T_17_PE,O3T_17_MTRx,O3T_17_PE)","141"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL12T_36_PE,CL12T_36_MTRx,CL12T_36_PE)","142"
RCOMMENT,"MainProgram","I_SET_PE_CONST","Call PE calc routine.","JSR(R_CALC_PE_CONST,2,CL12T_35_PE,CL12T_35_MTRx,CL12T_35_PE)","143"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","****************************************************************$NThis routine sets values for the associated spacers.$N$NNote:  It is important that the I_SET_MTR_CONST and the I_SET_BT_CONST routine is called before this routine.$N$N$N****************************************************************$N$N***THIS ROUTINE IS NOT EXECUTED EVERY SCAN***","NOP()","0"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_14_MTRx,BM1_38_MTRx,BM1_38_MTR,BM1_38_MTRx,BM1_38_MTR)","1"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_38_MTRx,BM1_37_MTRx,BM1_37_MTR,BM1_37_MTRx,BM1_37_MTR)","2"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_37_MTRx,BM1_36_MTRx,BM1_36_MTR,BM1_36_MTRx,BM1_36_MTR)","3"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_36_MTRx,BM1_35_MTRx,BM1_35_MTR,BM1_35_MTRx,BM1_35_MTR)","4"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_35_MTRx,BM1_34_MTRx,BM1_34_MTR,BM1_34_MTRx,BM1_34_MTR)","5"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_26_MTRx,BM1_25_MTRx,BM1_25_MTR,BM1_25_MTRx,BM1_25_MTR)","6"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_25_MTRx,BM1_24_MTRx,BM1_24_MTR,BM1_24_MTRx,BM1_24_MTR)","7"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_24_MTRx,BM1_23_MTRx,BM1_23_MTR,BM1_23_MTRx,BM1_23_MTR)","8"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_23_MTRx,BM1_22_MTRx,BM1_22_MTR,BM1_22_MTRx,BM1_22_MTR)","9"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_22_MTRx,BM1_21_MTRx,BM1_21_MTR,BM1_21_MTRx,BM1_21_MTR)","10"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_21_MTRx,BM1_20_MTRx,BM1_20_MTR,BM1_20_MTRx,BM1_20_MTR)","11"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_20_MTRx,BM1_19_MTRx,BM1_19_MTR,BM1_19_MTRx,BM1_19_MTR)","12"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_19_MTRx,BM1_18_MTRx,BM1_18_MTR,BM1_18_MTRx,BM1_18_MTR)","13"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_18_MTRx,BM1_17_MTRx,BM1_17_MTR,BM1_17_MTRx,BM1_17_MTR)","14"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_17_MTRx,BM1_16_MTRx,BM1_16_MTR,BM1_16_MTRx,BM1_16_MTR)","15"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_16_MTRx,BM1_15_MTRx,BM1_15_MTR,BM1_15_MTRx,BM1_15_MTR)","16"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_15_MTRx,BM1_14_MTRx,BM1_14_MTR,BM1_14_MTRx,BM1_14_MTR)","17"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_14_MTRx,BM1_13_MTRx,BM1_13_MTR,BM1_13_MTRx,BM1_13_MTR)","18"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_13_MTRx,BM1_12_MTRx,BM1_12_MTR,BM1_12_MTRx,BM1_12_MTR)","19"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_12_MTRx,BM1_11_MTRx,BM1_11_MTR,BM1_11_MTRx,BM1_11_MTR)","20"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_11_MTRx,BM1_10_MTRx,BM1_10_MTR,BM1_10_MTRx,BM1_10_MTR)","21"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_10_MTRx,BM1_09_MTRx,BM1_09_MTR,BM1_09_MTRx,BM1_09_MTR)","22"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_09_MTRx,BM1_08_MTRx,BM1_08_MTR,BM1_08_MTRx,BM1_08_MTR)","23"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_08_MTRx,BM1_07_MTRx,BM1_07_MTR,BM1_07_MTRx,BM1_07_MTR)","24"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_14_MTRx,O2T_18_MTRx,O2T_18_MTR,O2T_18_MTRx,O2T_18_MTR)","25"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_18_MTRx,O2T_17_MTRx,O2T_17_MTR,O2T_17_MTRx,O2T_17_MTR)","26"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_17_MTRx,O2T_16_MTRx,O2T_16_MTR,O2T_16_MTRx,O2T_16_MTR)","27"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_16_MTRx,O2T_15_MTRx,O2T_15_MTR,O2T_15_MTRx,O2T_15_MTR)","28"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_15_MTRx,O2T_14_MTRx,O2T_14_MTR,O2T_14_MTRx,O2T_14_MTR)","29"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_14_MTRx,O2T_13_MTRx,O2T_13_MTR,O2T_13_MTRx,O2T_13_MTR)","30"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_13_MTRx,O2T_12_MTRx,O2T_12_MTR,O2T_12_MTRx,O2T_12_MTR)","31"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_12_MTRx,O2T_11_MTRx,O2T_11_MTR,O2T_11_MTRx,O2T_11_MTR)","32"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_11_MTRx,O2T_10_MTRx,O2T_10_MTR,O2T_10_MTRx,O2T_10_MTR)","33"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_10_MTRx,O2T_09_MTRx,O2T_09_MTR,O2T_09_MTRx,O2T_09_MTR)","34"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_09_MTRx,O2T_08_MTRx,O2T_08_MTR,O2T_08_MTRx,O2T_08_MTR)","35"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_08_MTRx,O2T_07_MTRx,O2T_07_MTR,O2T_07_MTRx,O2T_07_MTR)","36"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_07_MTRx,O2T_06_MTRx,O2T_06_MTR,O2T_06_MTRx,O2T_06_MTR)","37"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_06_MTRx,O2T_05_MTRx,O2T_05_MTR,O2T_05_MTRx,O2T_05_MTR)","38"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_05_MTRx,O2T_04_MTRx,O2T_04_MTR,O2T_04_MTRx,O2T_04_MTR)","39"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O2T_10_MTRx,C2T_17_MTRx,C2T_17_MTR,C2T_17_MTRx,C2T_17_MTR)","40"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,C2T_17_MTRx,C2T_16_MTRx,C2T_16_MTR,C2T_16_MTRx,C2T_16_MTR)","41"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,C2T_16_MTRx,C2T_15_MTRx,C2T_15_MTR,C2T_15_MTRx,C2T_15_MTR)","42"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,C2T_15_MTRx,C2T_14_MTRx,C2T_14_MTR,C2T_14_MTRx,C2T_14_MTR)","43"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,C2T_14_MTRx,C2T_13_MTRx,C2T_13_MTR,C2T_13_MTRx,C2T_13_MTR)","44"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,C2T_13_MTRx,C2T_12_MTRx,C2T_12_MTR,C2T_12_MTRx,C2T_12_MTR)","45"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4_06ZZ_MTRx,CL2T_09_MTRx,CL2T_09_MTR,CL2T_09_MTRx,CL2T_09_MTR)","46"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL2T_09_MTRx,CL2T_08_MTRx,CL2T_08_MTR,CL2T_08_MTRx,CL2T_08_MTR)","47"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL2T_08_MTRx,CL2T_07_MTRx,CL2T_07_MTR,CL2T_07_MTRx,CL2T_07_MTR)","48"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL2T_07_MTRx,CL2T_06_MTRx,CL2T_06_MTR,CL2T_06_MTRx,CL2T_06_MTR)","49"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,T5_10ZZ_MTRx,CL3T_08_MTRx,CL3T_08_MTR,CL3T_08_MTRx,CL3T_08_MTR)","50"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL3T_08_MTRx,CL3T_07_MTRx,CL3T_07_MTR,CL3T_07_MTRx,CL3T_07_MTR)","51"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL3T_07_MTRx,CL3T_06_MTRx,CL3T_06_MTR,CL3T_06_MTRx,CL3T_06_MTR)","52"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL3T_06_MTRx,CL3T_05_MTRx,CL3T_05_MTR,CL3T_05_MTRx,CL3T_05_MTR)","53"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_30_MTRx,O4T_13_MTRx,O4T_13_MTR,O4T_13_MTRx,O4T_13_MTR)","54"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_13_MTRx,O4T_12_MTRx,O4T_12_MTR,O4T_12_MTRx,O4T_12_MTR)","55"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_12_MTRx,O4T_11_MTRx,O4T_11_MTR,O4T_11_MTRx,O4T_11_MTR)","56"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_11_MTRx,O4T_10_MTRx,O4T_10_MTR,O4T_10_MTRx,O4T_10_MTR)","57"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_10_MTRx,O4T_09_MTRx,O4T_09_MTR,O4T_09_MTRx,O4T_09_MTR)","58"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_09_MTRx,O4T_08_MTRx,O4T_08_MTR,O4T_08_MTRx,O4T_08_MTR)","59"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_08_MTRx,O4T_07_MTRx,O4T_07_MTR,O4T_07_MTRx,O4T_07_MTR)","60"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_07_MTRx,O4T_06_MTRx,O4T_06_MTR,O4T_06_MTRx,O4T_06_MTR)","61"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_06_MTRx,O4T_05_MTRx,O4T_05_MTR,O4T_05_MTRx,O4T_05_MTR)","62"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,BM1_34_MTRx,XO1_03_MTRx,XO1_03_MTR,XO1_03_MTRx,XO1_03_MTR)","63"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,XO1_03_MTRx,XO1_02_MTRx,XO1_02_MTR,XO1_02_MTRx,XO1_02_MTR)","64"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4_04ZZ_MTRx,T5T_09_MTRx,T5T_09_MTR,T5T_09_MTRx,T5T_09_MTR)","65"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,T5T_09_MTRx,T5T_08_MTRx,T5T_08_MTR,T5T_08_MTRx,T5T_08_MTR)","66"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,C4_09ZZ_MTRx,XO2_05_MTRx,XO2_05_MTR,XO2_05_MTRx,XO2_05_MTR)","67"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,XO2_05_MTRx,XO2_04_MTRx,XO2_04_MTR,XO2_04_MTRx,XO2_04_MTR)","68"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,XO2_04_MTRx,XO2_03_MTRx,XO2_03_MTR,XO2_03_MTRx,XO2_03_MTR)","69"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,XO2_03_MTRx,XO2_02_MTRx,XO2_02_MTR,XO2_02_MTRx,XO2_02_MTR)","70"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,XO2_02_MTRx,XO2_01_MTRx,XO2_01_MTR,XO2_01_MTRx,XO2_01_MTR)","71"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,HXA_ZZ_MTRx,HX1T_10A_MTRx,HX1T_10A_MTR,HX1T_10A_MTRx,HX1T_10A_MTR)","72"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,HX1T_10A_MTRx,CL1T_26_MTRx,CL1T_26_MTR,CL1T_26_MTRx,CL1T_26_MTR)","73"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_25_MTRx,CL1T_24_MTRx,CL1T_24_MTR,CL1T_24_MTRx,CL1T_24_MTR)","74"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_24_MTRx,CL1T_23_MTRx,CL1T_23_MTR,CL1T_23_MTRx,CL1T_23_MTR)","75"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_22_MTRx,CL1T_21_MTRx,CL1T_21_MTR,CL1T_21_MTRx,CL1T_21_MTR)","76"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_21_MTRx,CL1T_20_MTRx,CL1T_20_MTR,CL1T_20_MTRx,CL1T_20_MTR)","77"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_20_MTRx,CL1T_19_MTRx,CL1T_19_MTR,CL1T_19_MTRx,CL1T_19_MTR)","78"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_19_MTRx,CL1T_18_MTRx,CL1T_18_MTR,CL1T_18_MTRx,CL1T_18_MTR)","79"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_18_MTRx,CL1T_17_MTRx,CL1T_17_MTR,CL1T_17_MTRx,CL1T_17_MTR)","80"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_17_MTRx,CL1T_16_MTRx,CL1T_16_MTR,CL1T_16_MTRx,CL1T_16_MTR)","81"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_16_MTRx,CL1T_15_MTRx,CL1T_15_MTR,CL1T_15_MTRx,CL1T_15_MTR)","82"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_15_MTRx,CL1T_14_MTRx,CL1T_14_MTR,CL1T_14_MTRx,CL1T_14_MTR)","83"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_14_MTRx,CL1T_13_MTRx,CL1T_13_MTR,CL1T_13_MTRx,CL1T_13_MTR)","84"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_13_MTRx,CL1T_12_MTRx,CL1T_12_MTR,CL1T_12_MTRx,CL1T_12_MTR)","85"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_12_MTRx,CL1T_11_MTRx,CL1T_11_MTR,CL1T_11_MTRx,CL1T_11_MTR)","86"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_11_MTRx,CL1T_10_MTRx,CL1T_10_MTR,CL1T_10_MTRx,CL1T_10_MTR)","87"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_10_MTRx,CL1T_09_MTRx,CL1T_09_MTR,CL1T_09_MTRx,CL1T_09_MTR)","88"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_09_MTRx,CL1T_08_MTRx,CL1T_08_MTR,CL1T_08_MTRx,CL1T_08_MTR)","89"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_08_MTRx,CL1T_07_MTRx,CL1T_07_MTR,CL1T_07_MTRx,CL1T_07_MTR)","90"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_07_MTRx,CL1T_06_MTRx,CL1T_06_MTR,CL1T_06_MTRx,CL1T_06_MTR)","91"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_06_MTRx,CL1T_05_MTRx,CL1T_05_MTR,CL1T_05_MTRx,CL1T_05_MTR)","92"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_05_MTRx,CL1T_04_MTRx,CL1T_04_MTR,CL1T_04_MTRx,CL1T_04_MTR)","93"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL1T_26_MTRx,HX1T_10_MTRx,HX1T_10_MTR,HX1T_10_MTRx,HX1T_10_MTR)","94"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,HX1T_10_MTRx,HX1T_09_MTRx,HX1T_09_MTR,HX1T_09_MTRx,HX1T_09_MTR)","95"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,HX1T_09_MTRx,HX1T_08_MTRx,HX1T_08_MTR,HX1T_08_MTRx,HX1T_08_MTR)","96"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,HX1T_08_MTRx,HX1T_07_MTRx,HX1T_07_MTR,HX1T_07_MTRx,HX1T_07_MTR)","97"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,HX1T_07_MTRx,HX1T_06_MTRx,HX1T_06_MTR,HX1T_06_MTRx,HX1T_06_MTR)","98"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_22_MTRx,O4T_21_MTRx,O4T_21_MTR,O4T_21_MTRx,O4T_21_MTR)","99"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_21_MTRx,O4T_20_MTRx,O4T_20_MTR,O4T_20_MTRx,O4T_20_MTR)","100"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_20_MTRx,O4T_19_MTRx,O4T_19_MTR,O4T_19_MTRx,O4T_19_MTR)","101"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_19_MTRx,O4T_18_MTRx,O4T_18_MTR,O4T_18_MTRx,O4T_18_MTR)","102"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_18_MTRx,O4T_17_MTRx,O4T_17_MTR,O4T_17_MTRx,O4T_17_MTR)","103"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_17_MTRx,O3T_21_MTRx,O3T_21_MTR,O3T_21_MTRx,O3T_21_MTR)","104"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O3T_20_MTRx,O3T_19_MTRx,O3T_19_MTR,O3T_19_MTRx,O3T_19_MTR)","105"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O3T_19_MTRx,O3T_18_MTRx,O3T_18_MTR,O3T_18_MTRx,O3T_18_MTR)","106"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O3T_18_MTRx,O3T_17_MTRx,O3T_17_MTR,O3T_17_MTRx,O3T_17_MTR)","107"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,O4T_20_MTRx,CL12T_36_MTRx,CL12T_36_MTR,CL12T_36_MTRx,CL12T_36_MTR)","108"
RCOMMENT,"MainProgram","I_SET_SPACER_CONST","Set Spacer distance and call Spacer calc routine.","JSR(R_CALC_SPACER_CONST,4,2.0,CL12T_36_MTRx,CL12T_35_MTRx,CL12T_35_MTR,CL12T_35_MTRx,CL12T_35_MTR)","109"
RCOMMENT,"MainProgram","LENGTH_CALC","BM1_12 Length Set Routine$N**************************************************************************************************************************************************************************$NThis subroutine is used to measure the bag length.  It works in conjunction with the  tracking.  When data is deposited into a tracking zone by the length measuring photocell, this routine starts measuring the length of the bag.  When the photocell clears the length measurement is put into the .LENGTH  field of the Bag_Data array at index position - Bag_ID.$N$NWhen the photoeye is blocked, start measuring the length.","OTE(BM1_12_LEN.MEASURE)","0"
RCOMMENT,"MainProgram","LENGTH_CALC","When the PE clears, stop measuring length.  Do one shot.","OTE(BM1_12_LEN.SB1)","1"
RCOMMENT,"MainProgram","LENGTH_CALC","On one shot of PE clearing, put length measurement into the Bag_Data table.","MOV(BM1_12_LEN.BAG_LENGTH,BM1_13_MRG.Length)","3"
RCOMMENT,"MainProgram","LENGTH_CALC","Count BT pulses for measurement while PE is blocked.","ADD(1,BM1_12_LEN.BAG_LENGTH,BM1_12_LEN.BAG_LENGTH)","4"
RCOMMENT,"MainProgram","LENGTH_CALC","Clear length measurement when PE clears.","MOV(0,BM1_12_LEN.BAG_LENGTH)","5"
RCOMMENT,"MainProgram","LENGTH_CALC","O2T_17 Length Set Routine$N**************************************************************************************************************************************************************************$NThis subroutine is used to measure the bag length.  It works in conjunction with the  tracking.  When data is deposited into a tracking zone by the length measuring photocell, this routine starts measuring the length of the bag.  When the photocell clears the length measurement is put into the .LENGTH  field of the Bag_Data array at index position - Bag_ID.$N$NWhen the photoeye is blocked, start measuring the length.","OTE(O2T_17_LEN.MEASURE)","6"
RCOMMENT,"MainProgram","LENGTH_CALC","When the PE clears, stop measuring length.  Do one shot.","OTE(O2T_17_LEN.SB1)","7"
RCOMMENT,"MainProgram","LENGTH_CALC","On one shot of PE clearing, put length measurement into the Bag_Data table.","MOV(O2T_17_LEN.BAG_LENGTH,O2T_18_MRG.Length)","9"
RCOMMENT,"MainProgram","LENGTH_CALC","Count BT pulses for measurement while PE is blocked.","ADD(1,O2T_17_LEN.BAG_LENGTH,O2T_17_LEN.BAG_LENGTH)","10"
RCOMMENT,"MainProgram","LENGTH_CALC","Clear length measurement when PE clears.","MOV(0,O2T_17_LEN.BAG_LENGTH)","11"
RCOMMENT,"MainProgram","LENGTH_CALC","C2T_16 Length Set Routine$N**************************************************************************************************************************************************************************$NThis subroutine is used to measure the bag length.  It works in conjunction with the  tracking.  When data is deposited into a tracking zone by the length measuring photocell, this routine starts measuring the length of the bag.  When the photocell clears the length measurement is put into the .LENGTH  field of the Bag_Data array at index position - Bag_ID.$N$NWhen the photoeye is blocked, start measuring the length.","OTE(C2T_16_LEN.MEASURE)","12"
RCOMMENT,"MainProgram","LENGTH_CALC","When the PE clears, stop measuring length.  Do one shot.","OTE(C2T_16_LEN.SB1)","13"
RCOMMENT,"MainProgram","LENGTH_CALC","On one shot of PE clearing, put length measurement into the Bag_Data table.","MOV(C2T_16_LEN.BAG_LENGTH,C2T_17_MRG.Length)","15"
RCOMMENT,"MainProgram","LENGTH_CALC","Count BT pulses for measurement while PE is blocked.","ADD(1,C2T_16_LEN.BAG_LENGTH,C2T_16_LEN.BAG_LENGTH)","16"
RCOMMENT,"MainProgram","LENGTH_CALC","Clear length measurement when PE clears.","MOV(0,C2T_16_LEN.BAG_LENGTH)","17"
RCOMMENT,"MainProgram","LENGTH_CALC","T5T_08 Length Set Routine$N**************************************************************************************************************************************************************************$NThis subroutine is used to measure the bag length.  It works in conjunction with the  tracking.  When data is deposited into a tracking zone by the length measuring photocell, this routine starts measuring the length of the bag.  When the photocell clears the length measurement is put into the .LENGTH  field of the Bag_Data array at index position - Bag_ID.$N$NWhen the photoeye is blocked, start measuring the length.","OTE(T5T_08_LEN.MEASURE)","18"
RCOMMENT,"MainProgram","LENGTH_CALC","When the PE clears, stop measuring length.  Do one shot.","OTE(T5T_08_LEN.SB1)","19"
RCOMMENT,"MainProgram","LENGTH_CALC","On one shot of PE clearing, put length measurement into the Bag_Data table.","MOV(T5T_08_LEN.BAG_LENGTH,T5T_09_MRG.Length)","21"
RCOMMENT,"MainProgram","LENGTH_CALC","Count BT pulses for measurement while PE is blocked.","ADD(1,T5T_08_LEN.BAG_LENGTH,T5T_08_LEN.BAG_LENGTH)","22"
RCOMMENT,"MainProgram","LENGTH_CALC","Clear length measurement when PE clears.","MOV(0,T5T_08_LEN.BAG_LENGTH)","23"
RCOMMENT,"MainProgram","LENGTH_CALC","XO2_04 Length Set Routine$N**************************************************************************************************************************************************************************$NThis subroutine is used to measure the bag length.  It works in conjunction with the  tracking.  When data is deposited into a tracking zone by the length measuring photocell, this routine starts measuring the length of the bag.  When the photocell clears the length measurement is put into the .LENGTH  field of the Bag_Data array at index position - Bag_ID.$N$NWhen the photoeye is blocked, start measuring the length.","OTE(XO2_04_LEN.MEASURE)","24"
RCOMMENT,"MainProgram","LENGTH_CALC","When the PE clears, stop measuring length.  Do one shot.","OTE(XO2_04_LEN.SB1)","25"
RCOMMENT,"MainProgram","LENGTH_CALC","On one shot of PE clearing, put length measurement into the Bag_Data table.","MOV(XO2_04_LEN.BAG_LENGTH,XO2_05_MRG.Length)","27"
RCOMMENT,"MainProgram","LENGTH_CALC","Count BT pulses for measurement while PE is blocked.","ADD(1,XO2_04_LEN.BAG_LENGTH,XO2_04_LEN.BAG_LENGTH)","28"
RCOMMENT,"MainProgram","LENGTH_CALC","Clear length measurement when PE clears.","MOV(0,XO2_04_LEN.BAG_LENGTH)","29"
RCOMMENT,"MainProgram","LENGTH_CALC","HX1T_09 Length Set Routine$N**************************************************************************************************************************************************************************$NThis subroutine is used to measure the bag length.  It works in conjunction with the  tracking.  When data is deposited into a tracking zone by the length measuring photocell, this routine starts measuring the length of the bag.  When the photocell clears the length measurement is put into the .LENGTH  field of the Bag_Data array at index position - Bag_ID.$N$NWhen the photoeye is blocked, start measuring the length.","OTE(HX1T_09_LEN.MEASURE)","30"
RCOMMENT,"MainProgram","LENGTH_CALC","When the PE clears, stop measuring length.  Do one shot.","OTE(HX1T_09_LEN.SB1)","31"
RCOMMENT,"MainProgram","LENGTH_CALC","On one shot of PE clearing, put length measurement into the Bag_Data table.","MOV(HX1T_09_LEN.BAG_LENGTH,HX1T_10_MRG.Length)","32"
RCOMMENT,"MainProgram","LENGTH_CALC","Count BT pulses for measurement while PE is blocked.","ADD(1,HX1T_09_LEN.BAG_LENGTH,HX1T_09_LEN.BAG_LENGTH)","33"
RCOMMENT,"MainProgram","LENGTH_CALC","Clear length measurement when PE clears.","MOV(0,HX1T_09_LEN.BAG_LENGTH)","34"
RCOMMENT,"MainProgram","MainRoutine","****************************************************************************************************$NThis routine is the main entry point of the program.$NThis routine contains some $Qsystem$Q level logic for controlling things like how the logic is scanned, statistics, and globally used signals.$NAll calls to other routines stem from this routine.$N****************************************************************************************************$N$N","NOP()","0"
RCOMMENT,"MainProgram","MainRoutine","Set Always True Instruction","OTE(INT.ALWAYS_TRUE)","1"
RCOMMENT,"MainProgram","MainRoutine","Set Always False Instruction","OTE(INT.ALWAYS_FALSE)","2"
RCOMMENT,"MainProgram","MainRoutine","Constants Initialization","OTU(INT.SET_CONSTANTS)","5"
RCOMMENT,"MainProgram","MainRoutine","Stats Reset Control","OTU(RESET_STATS_REQ.0)","12"
RCOMMENT,"MainProgram","MainRoutine","Common flasher bit used for audible alarms and lights.","TON(INT.FlasherOn_TON,?,?)","14"
RCOMMENT,"MainProgram","MainRoutine","Common fast flasher bit used for audible alarms and lights.","TON(INT.Flasher2On_TON,?,?)","16"
RCOMMENT,"MainProgram","MainRoutine","Get coordinated system time from controller $N $NThe tag CST is used throughout the program were a time pulse is needed$N","GSV(CST,?,CurrentValue,CST[0])","18"
RCOMMENT,"MainProgram","MainRoutine","Create a two second pulse","OTE(INT.TWO_S_PULSE)","20"
RCOMMENT,"MainProgram","MainRoutine","PLC status routine.","JSR(PLC_STATUS,0)","21"
RCOMMENT,"MainProgram","MainRoutine","Communication status routine.","JSR(COM_STATUS,0)","22"
RCOMMENT,"MainProgram","MainRoutine","Automod testing version of the Communication status routine$Nthe call to this routine should be deleted before installing on site along with any other references to the zzz_Emulate bit","JSR(AM_COM_STATUS,0)","23"
RCOMMENT,"MainProgram","MainRoutine","EStop routine","JSR(E_STOPS,0)","25"
RCOMMENT,"MainProgram","MainRoutine","Reconcile Subroutine calls into one location","JSR(SUBR_CALLS,0)","26"
RCOMMENT,"MainProgram","MainRoutine","COMMUNICATIONS","JSR(R_MSG_TO_UL_Send,0)","29"
RCOMMENT,"MainProgram","MCP_01_DEVICES","****************************************************************************************************$NThis routine controls devices associated with the MCP.$NThis routine also sets HMI statuses for the MCP.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","MCP_01_DEVICES","Control Station Operators$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","MCP_01_DEVICES","Beacons or Stacklights$N$N$N","NOP()","6"
RCOMMENT,"MainProgram","MCP_01_DEVICES","MCP Inputs$N","OTE(F_MCP_01_FIRE_ALM_FAULT)","10"
RCOMMENT,"MainProgram","MCP_01_DEVICES","MCP Graphic$N$N$N","MOV(BM1_B.STATUS.G,G_MCP_01_STS)","12"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","****************************************************************************************************$NThis subroutine monitors the status/faults for the associated motor group such as: Emergency Stops,  Motor Overloads, Jams and Motor Startup.$N$NThe output of this routine is used for controlling the beacons/audible alarms.$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","System Ready","OTE(BM1_B.STATUS.READY)","1"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","E-stop Monitor","OTE(BM1_B.STATUS.E_STOP_MONITOR)","2"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","E-stop Alarm Trigger","RES(BM1_B.STATUS.E_STOP_ALM_TMR)","3"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","E-stop Alarm","TON(BM1_B.STATUS.E_STOP_ALM_TMR,?,?)","4"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Motor Safety Disconnect Off Monitor","OTE(BM1_B.STATUS.MSD_OFF_MONITOR)","5"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Motor Safety Disconnect Off Alarm Trigger","RES(BM1_B.STATUS.MSD_OFF_ALM_TMR)","6"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Motor Safety Disconnect Off Alarm","TON(BM1_B.STATUS.MSD_OFF_ALM_TMR,?,?)","7"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Motor Overload Monitor","OTE(BM1_B.STATUS.MOL_MONITOR)","8"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Motor Overload Alarm Trigger","RES(BM1_B.STATUS.MOL_ALM_TMR)","9"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Motor Overload Alarm","TON(BM1_B.STATUS.MOL_ALM_TMR,?,?)","10"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","VFD Fault Monitor","OTE(BM1_B.STATUS.VFD_FLT_MONITOR)","11"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","VFD Fault Alarm Trigger","RES(BM1_B.STATUS.VFD_FLT_ALM_TMR)","12"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","VFD Fault Alarm","TON(BM1_B.STATUS.VFD_FLT_ALM_TMR,?,?)","13"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Contactor Fault Monitor","OTE(BM1_B.STATUS.CTCTR_FLT_MONITOR)","14"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Contactor Fault Alarm Trigger","RES(BM1_B.STATUS.CTCTR_FLT_ALM_TMR)","15"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Contactor Fault Alarm","TON(BM1_B.STATUS.CTCTR_FLT_ALM_TMR,?,?)","16"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Jam Monitor","OTE(BM1_B.STATUS.JAM_MONITOR)","17"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Jam Alarm Trigger","RES(BM1_B.STATUS.JAM_ALM_TMR)","18"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Jam Alarm","TON(BM1_B.STATUS.JAM_ALM_TMR,?,?)","19"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Missing Bag Jam Monitor","OTE(BM1_B.STATUS.MB_JAM_MONITOR)","20"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Missing Bag Jam Alarm Trigger","RES(BM1_B.STATUS.MB_JAM_ALM_TMR)","21"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Missing Bag Jam Alarm","TON(BM1_B.STATUS.MB_JAM_ALM_TMR,?,?)","22"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Door Fault Monitor","OTE(BM1_B.STATUS.DR_FLT_MONITOR)","23"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Door Fault Alarm Trigger","RES(BM1_B.STATUS.DR_FLT_ALM_TMR)","24"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Door Fault Alarm","TON(BM1_B.STATUS.DR_FLT_ALM_TMR,?,?)","25"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Vertical Sorter Fault Monitor","OTE(BM1_B.STATUS.VSU_FLT_MONITOR)","26"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Vertical Sorter Fault Alarm Trigger","RES(BM1_B.STATUS.VSU_FLT_ALM_TMR)","27"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Vertical Sorter Fault Alarm","TON(BM1_B.STATUS.VSU_FLT_ALM_TMR,?,?)","28"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Diverter Fault Monitor","OTE(BM1_B.STATUS.DIV_FLT_MONITOR)","29"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Diverter Fault Alarm Trigger","RES(BM1_B.STATUS.DIV_FLT_ALM_TMR)","30"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Diverter Fault Alarm","TON(BM1_B.STATUS.DIV_FLT_ALM_TMR,?,?)","31"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Vertical Merge Fault Monitor","OTE(BM1_B.STATUS.VMU_FLT_MONITOR)","32"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Vertical Merge Fault Alarm Trigger","RES(BM1_B.STATUS.VMU_FLT_ALM_TMR)","33"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Vertical Merge Fault Alarm","TON(BM1_B.STATUS.VMU_FLT_ALM_TMR,?,?)","34"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","STARTUP WARNING","OTE(BM1_B.STATUS.STARTUP_WARN)","35"
RCOMMENT,"MainProgram","MCP_01_MONITOR_ALARMS","Fire Alarm","NOP()","36"
RCOMMENT,"MainProgram","MCP_02_DEVICES","****************************************************************************************************$NThis routine controls devices associated with the MCP.$NThis routine also sets HMI statuses for the MCP.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","MCP_02_DEVICES","Control Station Operators$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","MCP_02_DEVICES","Beacons or Stacklights$N$N$N","NOP()","6"
RCOMMENT,"MainProgram","MCP_02_DEVICES","MCP Inputs$N","OTE(F_MCP_02_FIRE_ALM_FAULT)","10"
RCOMMENT,"MainProgram","MCP_02_DEVICES","MCP Graphic$N$N$N","MOV(BM1_C.STATUS.G,G_MCP_02_STS)","12"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","****************************************************************************************************$NThis subroutine monitors the status/faults for the associated motor group such as: Emergency Stops,  Motor Overloads, Jams and Motor Startup.$N$NThe output of this routine is used for controlling the beacons/audible alarms.$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","System Ready","OTE(BM1_C.STATUS.READY)","1"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","E-stop Monitor","OTE(BM1_C.STATUS.E_STOP_MONITOR)","2"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","E-stop Alarm Trigger","RES(BM1_C.STATUS.E_STOP_ALM_TMR)","3"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","E-stop Alarm","TON(BM1_C.STATUS.E_STOP_ALM_TMR,?,?)","4"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Motor Safety Disconnect Off Monitor","OTE(BM1_C.STATUS.MSD_OFF_MONITOR)","5"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Motor Safety Disconnect Off Alarm Trigger","RES(BM1_C.STATUS.MSD_OFF_ALM_TMR)","6"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Motor Safety Disconnect Off Alarm","TON(BM1_C.STATUS.MSD_OFF_ALM_TMR,?,?)","7"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Motor Overload Monitor","OTE(BM1_C.STATUS.MOL_MONITOR)","8"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Motor Overload Alarm Trigger","RES(BM1_C.STATUS.MOL_ALM_TMR)","9"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Motor Overload Alarm","TON(BM1_C.STATUS.MOL_ALM_TMR,?,?)","10"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","VFD Fault Monitor","OTE(BM1_C.STATUS.VFD_FLT_MONITOR)","11"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","VFD Fault Alarm Trigger","RES(BM1_C.STATUS.VFD_FLT_ALM_TMR)","12"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","VFD Fault Alarm","TON(BM1_C.STATUS.VFD_FLT_ALM_TMR,?,?)","13"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Contactor Fault Monitor","OTE(BM1_C.STATUS.CTCTR_FLT_MONITOR)","14"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Contactor Fault Alarm Trigger","RES(BM1_C.STATUS.CTCTR_FLT_ALM_TMR)","15"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Contactor Fault Alarm","TON(BM1_C.STATUS.CTCTR_FLT_ALM_TMR,?,?)","16"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Jam Monitor","OTE(BM1_C.STATUS.JAM_MONITOR)","17"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Jam Alarm Trigger","RES(BM1_C.STATUS.JAM_ALM_TMR)","18"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Jam Alarm","TON(BM1_C.STATUS.JAM_ALM_TMR,?,?)","19"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Missing Bag Jam Monitor","OTE(BM1_C.STATUS.MB_JAM_MONITOR)","20"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Missing Bag Jam Alarm Trigger","RES(BM1_C.STATUS.MB_JAM_ALM_TMR)","21"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Missing Bag Jam Alarm","TON(BM1_C.STATUS.MB_JAM_ALM_TMR,?,?)","22"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Door Fault Monitor","OTE(BM1_C.STATUS.DR_FLT_MONITOR)","23"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Door Fault Alarm Trigger","RES(BM1_C.STATUS.DR_FLT_ALM_TMR)","24"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Door Fault Alarm","TON(BM1_C.STATUS.DR_FLT_ALM_TMR,?,?)","25"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Vertical Sorter Fault Monitor","OTE(BM1_C.STATUS.VSU_FLT_MONITOR)","26"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Vertical Sorter Fault Alarm Trigger","RES(BM1_C.STATUS.VSU_FLT_ALM_TMR)","27"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Vertical Sorter Fault Alarm","TON(BM1_C.STATUS.VSU_FLT_ALM_TMR,?,?)","28"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Diverter Fault Monitor","OTE(BM1_C.STATUS.DIV_FLT_MONITOR)","29"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Diverter Fault Alarm Trigger","RES(BM1_C.STATUS.DIV_FLT_ALM_TMR)","30"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Diverter Fault Alarm","TON(BM1_C.STATUS.DIV_FLT_ALM_TMR,?,?)","31"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Vertical Merge Fault Monitor","OTE(BM1_C.STATUS.VMU_FLT_MONITOR)","32"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Vertical Merge Fault Alarm Trigger","RES(BM1_C.STATUS.VMU_FLT_ALM_TMR)","33"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Vertical Merge Fault Alarm","TON(BM1_C.STATUS.VMU_FLT_ALM_TMR,?,?)","34"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","STARTUP WARNING","OTE(BM1_C.STATUS.STARTUP_WARN)","35"
RCOMMENT,"MainProgram","MCP_02_MONITOR_ALARMS","Fire Alarm","NOP()","36"
RCOMMENT,"MainProgram","MCP_03_DEVICES","****************************************************************************************************$NThis routine controls devices associated with the MCP.$NThis routine also sets HMI statuses for the MCP.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","MCP_03_DEVICES","Control Station Operators$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","MCP_03_DEVICES","Beacons or Stacklights$N$N$N","NOP()","6"
RCOMMENT,"MainProgram","MCP_03_DEVICES","MCP Inputs$N","OTE(F_MCP_03_FIRE_ALM_FAULT)","10"
RCOMMENT,"MainProgram","MCP_03_DEVICES","MCP Graphic$N$N$N","MOV(MCP_03.STATUS.G,G_MCP_03_STS)","12"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","****************************************************************************************************$NThis subroutine monitors the status/faults for the associated motor group such as: Emergency Stops,  Motor Overloads, Jams and Motor Startup.$N$NThe output of this routine is used for controlling the beacons/audible alarms.$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","System Ready","OTE(MCP_03.STATUS.READY)","1"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","E-stop Monitor","OTE(MCP_03.STATUS.E_STOP_MONITOR)","2"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","E-stop Alarm Trigger","RES(MCP_03.STATUS.E_STOP_ALM_TMR)","3"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","E-stop Alarm","TON(MCP_03.STATUS.E_STOP_ALM_TMR,?,?)","4"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Motor Safety Disconnect Off Monitor","OTE(MCP_03.STATUS.MSD_OFF_MONITOR)","5"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Motor Safety Disconnect Off Alarm Trigger","RES(MCP_03.STATUS.MSD_OFF_ALM_TMR)","6"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Motor Safety Disconnect Off Alarm","TON(MCP_03.STATUS.MSD_OFF_ALM_TMR,?,?)","7"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Motor Overload Monitor","OTE(MCP_03.STATUS.MOL_MONITOR)","8"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Motor Overload Alarm Trigger","RES(MCP_03.STATUS.MOL_ALM_TMR)","9"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Motor Overload Alarm","TON(MCP_03.STATUS.MOL_ALM_TMR,?,?)","10"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","VFD Fault Monitor","OTE(MCP_03.STATUS.VFD_FLT_MONITOR)","11"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","VFD Fault Alarm Trigger","RES(MCP_03.STATUS.VFD_FLT_ALM_TMR)","12"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","VFD Fault Alarm","TON(MCP_03.STATUS.VFD_FLT_ALM_TMR,?,?)","13"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Contactor Fault Monitor","OTE(MCP_03.STATUS.CTCTR_FLT_MONITOR)","14"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Contactor Fault Alarm Trigger","RES(MCP_03.STATUS.CTCTR_FLT_ALM_TMR)","15"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Contactor Fault Alarm","TON(MCP_03.STATUS.CTCTR_FLT_ALM_TMR,?,?)","16"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Jam Monitor","OTE(MCP_03.STATUS.JAM_MONITOR)","17"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Jam Alarm Trigger","RES(MCP_03.STATUS.JAM_ALM_TMR)","18"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Jam Alarm","TON(MCP_03.STATUS.JAM_ALM_TMR,?,?)","19"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Missing Bag Jam Monitor","OTE(MCP_03.STATUS.MB_JAM_MONITOR)","20"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Missing Bag Jam Alarm Trigger","RES(MCP_03.STATUS.MB_JAM_ALM_TMR)","21"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Missing Bag Jam Alarm","TON(MCP_03.STATUS.MB_JAM_ALM_TMR,?,?)","22"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Door Fault Monitor","OTE(MCP_03.STATUS.DR_FLT_MONITOR)","23"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Door Fault Alarm Trigger","RES(MCP_03.STATUS.DR_FLT_ALM_TMR)","24"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Door Fault Alarm","TON(MCP_03.STATUS.DR_FLT_ALM_TMR,?,?)","25"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Vertical Sorter Fault Monitor","OTE(MCP_03.STATUS.VSU_FLT_MONITOR)","26"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Vertical Sorter Fault Alarm Trigger","RES(MCP_03.STATUS.VSU_FLT_ALM_TMR)","27"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Vertical Sorter Fault Alarm","TON(MCP_03.STATUS.VSU_FLT_ALM_TMR,?,?)","28"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Diverter Fault Monitor","OTE(MCP_03.STATUS.DIV_FLT_MONITOR)","29"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Diverter Fault Alarm Trigger","RES(MCP_03.STATUS.DIV_FLT_ALM_TMR)","30"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Diverter Fault Alarm","TON(MCP_03.STATUS.DIV_FLT_ALM_TMR,?,?)","31"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Vertical Merge Fault Monitor","OTE(MCP_03.STATUS.VMU_FLT_MONITOR)","32"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Vertical Merge Fault Alarm Trigger","RES(MCP_03.STATUS.VMU_FLT_ALM_TMR)","33"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Vertical Merge Fault Alarm","TON(MCP_03.STATUS.VMU_FLT_ALM_TMR,?,?)","34"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","STARTUP WARNING","OTE(MCP_03.STATUS.STARTUP_WARN)","35"
RCOMMENT,"MainProgram","MCP_03_MONITOR_ALARMS","Fire Alarm","NOP()","36"
RCOMMENT,"MainProgram","MCP_16_DEVICES","****************************************************************************************************$NThis routine controls devices associated with the MCP.$NThis routine also sets HMI statuses for the MCP.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","MCP_16_DEVICES","Control Station Operators$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","MCP_16_DEVICES","Beacons or Stacklights$N$N$N","NOP()","6"
RCOMMENT,"MainProgram","MCP_16_DEVICES","MCP Inputs$N","OTE(F_MCP_16_FIRE_ALM_FAULT)","10"
RCOMMENT,"MainProgram","MCP_16_DEVICES","MCP Graphic$N$N$N","MOV(C2T.STATUS.G,G_MCP_16_STS)","12"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","****************************************************************************************************$NThis subroutine monitors the status/faults for the associated motor group such as: Emergency Stops,  Motor Overloads, Jams and Motor Startup.$N$NThe output of this routine is used for controlling the beacons/audible alarms.$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","System Ready","OTE(C2T.STATUS.READY)","1"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","E-stop Monitor","OTE(C2T.STATUS.E_STOP_MONITOR)","2"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","E-stop Alarm Trigger","RES(C2T.STATUS.E_STOP_ALM_TMR)","3"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","E-stop Alarm","TON(C2T.STATUS.E_STOP_ALM_TMR,?,?)","4"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Motor Safety Disconnect Off Monitor","OTE(C2T.STATUS.MSD_OFF_MONITOR)","5"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Motor Safety Disconnect Off Alarm Trigger","RES(C2T.STATUS.MSD_OFF_ALM_TMR)","6"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Motor Safety Disconnect Off Alarm","TON(C2T.STATUS.MSD_OFF_ALM_TMR,?,?)","7"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Motor Overload Monitor","OTE(C2T.STATUS.MOL_MONITOR)","8"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Motor Overload Alarm Trigger","RES(C2T.STATUS.MOL_ALM_TMR)","9"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Motor Overload Alarm","TON(C2T.STATUS.MOL_ALM_TMR,?,?)","10"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","VFD Fault Monitor","OTE(C2T.STATUS.VFD_FLT_MONITOR)","11"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","VFD Fault Alarm Trigger","RES(C2T.STATUS.VFD_FLT_ALM_TMR)","12"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","VFD Fault Alarm","TON(C2T.STATUS.VFD_FLT_ALM_TMR,?,?)","13"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Contactor Fault Monitor","OTE(C2T.STATUS.CTCTR_FLT_MONITOR)","14"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Contactor Fault Alarm Trigger","RES(C2T.STATUS.CTCTR_FLT_ALM_TMR)","15"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Contactor Fault Alarm","TON(C2T.STATUS.CTCTR_FLT_ALM_TMR,?,?)","16"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Jam Monitor","OTE(C2T.STATUS.JAM_MONITOR)","17"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Jam Alarm Trigger","RES(C2T.STATUS.JAM_ALM_TMR)","18"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Jam Alarm","TON(C2T.STATUS.JAM_ALM_TMR,?,?)","19"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Missing Bag Jam Monitor","OTE(C2T.STATUS.MB_JAM_MONITOR)","20"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Missing Bag Jam Alarm Trigger","RES(C2T.STATUS.MB_JAM_ALM_TMR)","21"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Missing Bag Jam Alarm","TON(C2T.STATUS.MB_JAM_ALM_TMR,?,?)","22"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Door Fault Monitor","OTE(C2T.STATUS.DR_FLT_MONITOR)","23"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Door Fault Alarm Trigger","RES(C2T.STATUS.DR_FLT_ALM_TMR)","24"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Door Fault Alarm","TON(C2T.STATUS.DR_FLT_ALM_TMR,?,?)","25"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Vertical Sorter Fault Monitor","OTE(C2T.STATUS.VSU_FLT_MONITOR)","26"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Vertical Sorter Fault Alarm Trigger","RES(C2T.STATUS.VSU_FLT_ALM_TMR)","27"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Vertical Sorter Fault Alarm","TON(C2T.STATUS.VSU_FLT_ALM_TMR,?,?)","28"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Diverter Fault Monitor","OTE(C2T.STATUS.DIV_FLT_MONITOR)","29"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Diverter Fault Alarm Trigger","RES(C2T.STATUS.DIV_FLT_ALM_TMR)","30"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Diverter Fault Alarm","TON(C2T.STATUS.DIV_FLT_ALM_TMR,?,?)","31"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Vertical Merge Fault Monitor","OTE(C2T.STATUS.VMU_FLT_MONITOR)","32"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Vertical Merge Fault Alarm Trigger","RES(C2T.STATUS.VMU_FLT_ALM_TMR)","33"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Vertical Merge Fault Alarm","TON(C2T.STATUS.VMU_FLT_ALM_TMR,?,?)","34"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","STARTUP WARNING","OTE(C2T.STATUS.STARTUP_WARN)","35"
RCOMMENT,"MainProgram","MCP_16_MONITOR_ALARMS","Fire Alarm","NOP()","36"
RCOMMENT,"MainProgram","MCP_BM1_DEVICES","****************************************************************************************************$NThis routine controls devices associated with the MCP.$NThis routine also sets HMI statuses for the MCP.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","MCP_BM1_DEVICES","Control Station Operators$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","MCP_BM1_DEVICES","Beacons or Stacklights$N$N$N","NOP()","7"
RCOMMENT,"MainProgram","MCP_BM1_DEVICES","MCP Inputs$N","OTE(F_MCP_BM1_FIRE_ALM_FAULT)","11"
RCOMMENT,"MainProgram","MCP_BM1_DEVICES","MCP Graphic$N$N$N","MOV(BM1_A.STATUS.G,G_MCP_BM1_STS)","12"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","****************************************************************************************************$NThis subroutine monitors the status/faults for the associated motor group such as: Emergency Stops,  Motor Overloads, Jams and Motor Startup.$N$NThe output of this routine is used for controlling the beacons/audible alarms.$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","System Ready","OTE(BM1_A.STATUS.READY)","1"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","E-stop Monitor","OTE(BM1_A.STATUS.E_STOP_MONITOR)","2"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","E-stop Alarm Trigger","RES(BM1_A.STATUS.E_STOP_ALM_TMR)","3"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","E-stop Alarm","TON(BM1_A.STATUS.E_STOP_ALM_TMR,?,?)","4"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Motor Safety Disconnect Off Monitor","OTE(BM1_A.STATUS.MSD_OFF_MONITOR)","5"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Motor Safety Disconnect Off Alarm Trigger","RES(BM1_A.STATUS.MSD_OFF_ALM_TMR)","6"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Motor Safety Disconnect Off Alarm","TON(BM1_A.STATUS.MSD_OFF_ALM_TMR,?,?)","7"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Motor Overload Monitor","OTE(BM1_A.STATUS.MOL_MONITOR)","8"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Motor Overload Alarm Trigger","RES(BM1_A.STATUS.MOL_ALM_TMR)","9"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Motor Overload Alarm","TON(BM1_A.STATUS.MOL_ALM_TMR,?,?)","10"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","VFD Fault Monitor","OTE(BM1_A.STATUS.VFD_FLT_MONITOR)","11"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","VFD Fault Alarm Trigger","RES(BM1_A.STATUS.VFD_FLT_ALM_TMR)","12"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","VFD Fault Alarm","TON(BM1_A.STATUS.VFD_FLT_ALM_TMR,?,?)","13"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Contactor Fault Monitor","OTE(BM1_A.STATUS.CTCTR_FLT_MONITOR)","14"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Contactor Fault Alarm Trigger","RES(BM1_A.STATUS.CTCTR_FLT_ALM_TMR)","15"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Contactor Fault Alarm","TON(BM1_A.STATUS.CTCTR_FLT_ALM_TMR,?,?)","16"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Jam Monitor","OTE(BM1_A.STATUS.JAM_MONITOR)","17"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Jam Alarm Trigger","RES(BM1_A.STATUS.JAM_ALM_TMR)","18"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Jam Alarm","TON(BM1_A.STATUS.JAM_ALM_TMR,?,?)","19"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Missing Bag Jam Monitor","OTE(BM1_A.STATUS.MB_JAM_MONITOR)","20"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Missing Bag Jam Alarm Trigger","RES(BM1_A.STATUS.MB_JAM_ALM_TMR)","21"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Missing Bag Jam Alarm","TON(BM1_A.STATUS.MB_JAM_ALM_TMR,?,?)","22"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Door Fault Monitor","OTE(BM1_A.STATUS.DR_FLT_MONITOR)","23"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Door Fault Alarm Trigger","RES(BM1_A.STATUS.DR_FLT_ALM_TMR)","24"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Door Fault Alarm","TON(BM1_A.STATUS.DR_FLT_ALM_TMR,?,?)","25"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Vertical Sorter Fault Monitor","OTE(BM1_A.STATUS.VSU_FLT_MONITOR)","26"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Vertical Sorter Fault Alarm Trigger","RES(BM1_A.STATUS.VSU_FLT_ALM_TMR)","27"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Vertical Sorter Fault Alarm","TON(BM1_A.STATUS.VSU_FLT_ALM_TMR,?,?)","28"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Diverter Fault Monitor","OTE(BM1_A.STATUS.DIV_FLT_MONITOR)","29"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Diverter Fault Alarm Trigger","RES(BM1_A.STATUS.DIV_FLT_ALM_TMR)","30"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Diverter Fault Alarm","TON(BM1_A.STATUS.DIV_FLT_ALM_TMR,?,?)","31"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Vertical Merge Fault Monitor","OTE(BM1_A.STATUS.VMU_FLT_MONITOR)","32"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Vertical Merge Fault Alarm Trigger","RES(BM1_A.STATUS.VMU_FLT_ALM_TMR)","33"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Vertical Merge Fault Alarm","TON(BM1_A.STATUS.VMU_FLT_ALM_TMR,?,?)","34"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","STARTUP WARNING","OTE(BM1_A.STATUS.STARTUP_WARN)","35"
RCOMMENT,"MainProgram","MCP_BM1_MONITOR_ALARMS","Fire Alarm","NOP()","36"
RCOMMENT,"MainProgram","O2T_18_MRG","Merge Routine - Fixed Gap size$N*********************************************$N$NThis rung will fill the mainline bit shift register with a 1 when the merge inhibit photoeye is blocked.","OTL(O2T_18_MRG.MainLineBS[1].15)","0"
RCOMMENT,"MainProgram","O2T_18_MRG","For each mainline belt tach pulse do the following:$NBit shift right the mainline bit shift register$NIncrement the leading gap counter accumulator","ADD(1,O2T_18_MRG.Lead_Gap_Acc,O2T_18_MRG.Lead_Gap_Acc)","1"
RCOMMENT,"MainProgram","O2T_18_MRG","This rung will add the distance the bag on the merge has coasted to the required minimum leading gap.$NThe variable $Q_MRGx.Lead_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged behind.","ADD(O2T_18_MRG.BagPastPE,O2T_18_MRGx.Lead_Gap,O2T_18_MRG.Lead_Gap)","2"
RCOMMENT,"MainProgram","O2T_18_MRG","As the BSR is unloading ones from the mainline bit shift register at element zero bit zero clear the leading gap counter accumulator.$NThis insures the leading gap counter only increments based on the tail of the mainline bag.","CLR(O2T_18_MRG.Lead_Gap_Acc)","3"
RCOMMENT,"MainProgram","O2T_18_MRG","Once the leading gap counter has accumulated to the leading gap constant the merge behind condition has been met.","OTE(O2T_18_MRG.Lead_Gap_DN)","4"
RCOMMENT,"MainProgram","O2T_18_MRG","Sync Run logic for non tracked merges.$NThis allows the merge to restart when the mainline stops and a bag is mid merge","RES(O2T_18_MRG.SyncRunTmr)","5"
RCOMMENT,"MainProgram","O2T_18_MRG","On the positive transition of the photoeye seal, populate the merge line bit shift registers.$NThe merge line bit shift registers are compared to the mainline bit shift registers to see if a bag can merge without crashing into another bag.$NThe variable $Q_MRGx.Trail_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged ahead of.$NThe variable $Q_MRGx.MinLength$Q is used when the merging bag does not have its length defined.  In such a case, you must assume the bag is the max size the system is designed to handle.$NIf the bag does have its length defined, the bag$'s length is added to $Q_MRGx.Trail_Gap$Q to define the value populated into the merge line shift register.$NThe variable $Q_MRGx.MaxLength$Q represents the number of the highest element in the $QMrgLenMask$Q arrays.  If the bag length + gap ends up greater than $Q_MRGx.MaxLength$Q, then $Q_MRGx.MaxLength$Q is used.","CLR(O2T_18_MRG.BagPastPE)","8"
RCOMMENT,"MainProgram","O2T_18_MRG","Shift the merge line bit shift one position for each pulse detected after the photoeye seal has been on but the bag is not merging as detected by the merge seal.$NThis will adjust the merge line bit shift register for any coasting of the merge conveyor.","ADD(1,O2T_18_MRG.BagPastPE,O2T_18_MRG.BagPastPE)","9"
RCOMMENT,"MainProgram","O2T_18_MRG","This rung compares the mainline bit shift registers to the merge line bit shift registers.$NIf the mainline bit shift register has ones in the merge line bit shift register it will be passed through to the interference array.","AND(O2T_18_MRG.MainLineBS[2],O2T_18_MRG.MrgLineBS[2],O2T_18_MRG.Intrfr[2])","10"
RCOMMENT,"MainProgram","O2T_18_MRG","If the interference arrays are empty then the merge ahead conditions have been met.$NIf the leading gap accumulator is done then the merge behind conditions have been met.$NSet the merge ok bit and generate a positive transition when the mainline is clear for a bag to merge in.","OTE(O2T_18_MRG.MrgOK)","11"
RCOMMENT,"MainProgram","O2T_18_MRG","If there are no faults on the merge conveyor, the photoeye seal is set and the merge ok bit is on then seal on the merge seal bit.$NThe merge seal bit is used in the motor logic to turn on the merge conveyor.","OTU(O2T_18_MRG.Hold_Align)","12"
RCOMMENT,"MainProgram","O2T_18_MRG","Priority logic below$N***********************************************************$N$NAccumulate the Mainline priority timer if a bag is waiting on the merge and the mainline is running","RTO(O2T_18_MRG.MLPriorityTmr,?,?)","13"
RCOMMENT,"MainProgram","O2T_18_MRG","Turn on the Priority stop bit when a bag has been waiting on the merge for the time the priority timer has been set to","OTE(O2T_18_MRG.PriorityStop)","14"
RCOMMENT,"MainProgram","O2T_18_MRG","Accumulate the Merge line priority timer while in priority stop mode and the merge is actively merging bags onto the mainline","RTO(O2T_18_MRG.MrgLPriorityTmr,?,?)","15"
RCOMMENT,"MainProgram","O2T_18_MRG","Reset the Merge line priority timer if a bag merges from the merge before entering priority mode","RES(O2T_18_MRG.MLPriorityTmr)","16"
RCOMMENT,"MainProgram","O2T_18_MRG","Reset priority timers if there is no bag flow on the merge for X amount of time","RES(O2T_18_MRG.MrgLPriorityTmr)","17"
RCOMMENT,"MainProgram","O2T_18_MRG","Reset priority timers once the merge line has had priority for the preset time","RES(O2T_18_MRG.MLPriorityTmr)","18"
RCOMMENT,"MainProgram","O2T_18_MRG","Detect active bag flow on the merge","TON(O2T_18_MRG.MrgLBagflow,?,?)","19"
RCOMMENT,"MainProgram","O2T_18_MRG","Merge Run Control$N*************************************************$N$NReset the merge run timer when the merge, pre merge, pre pre merge photo-eyes have been blocked, or during a system startup","RES(O2T_18_MRG.MergeRunTmr)","20"
RCOMMENT,"MainProgram","O2T_18_MRG","Run the merge conveyor for the designated merge run time","RTO(O2T_18_MRG.MergeRunTmr,?,?)","21"
RCOMMENT,"MainProgram","O2T_18_MRG","When a bag merges, send a bag Arrival message to the UL.$N","JSR(R_MSG_TO_UL_Add,0)","22"
RCOMMENT,"MainProgram","O2T_18_MRG_CAPT","Merge Distance capture routine.$NOnly call routine when setting up merge or testing merge$N*******************************************************************************$N$NClear the tail to head counter when a bag unblocks the capture photo-eye","MOV(0,O2T_18_MRG.TailHeadAcc)","0"
RCOMMENT,"MainProgram","O2T_18_MRG_CAPT","When a bag blocks the capture photo-eye, capture the current values of the: $NHead to Head count$NTail to head count.$Nand Zero the Head to Head count","MOV(0,O2T_18_MRG.HeadHeadAcc)","1"
RCOMMENT,"MainProgram","O2T_18_MRG_CAPT","For each pulse of the encoder increment the Head to Head and Tail the Head count","ADD(1,O2T_18_MRG.TailHeadAcc,O2T_18_MRG.TailHeadAcc)","2"
RCOMMENT,"MainProgram","O2T_18_MRG_CAPT","Computer the bags Head to Head distance based on the number of pulses received during the last window","CPT(O2T_18_MRG.LastBagMrgWndo,O2T_18_MRG.HeadHeadCnt*BM1_14_BTx.RES)","3"
RCOMMENT,"MainProgram","O2T_18_MRG_CAPT","Computer the Tail to head distance based on the number of pulses received during the last gap","CPT(O2T_18_MRG.LastBagGapDist,O2T_18_MRG.TailHeadCnt*BM1_14_BTx.RES)","4"
RCOMMENT,"MainProgram","O2T_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O2T_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","O2T_FIELD_IND","Control Station$N$N","NOP()","6"
RCOMMENT,"MainProgram","O2T_FIELD_IND","Control Station$N$N","NOP()","11"
RCOMMENT,"MainProgram","O2T_FIELD_IND","Control Station$N$N","NOP()","16"
RCOMMENT,"MainProgram","O2T_FIELD_IND","Control Station$N$N","NOP()","21"
RCOMMENT,"MainProgram","O2T_FIELD_IND","Control Station$N$N","NOP()","26"
RCOMMENT,"MainProgram","O2T_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","31"
RCOMMENT,"MainProgram","O2T_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","35"
RCOMMENT,"MainProgram","O2T_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_18_MTR.G,G_O2T_18_STS)","1"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_17_MTR.G,G_O2T_17_STS)","2"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_16_MTR.G,G_O2T_16_STS)","3"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_15_MTR.G,G_O2T_15_STS)","4"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_14_MTR.G,G_O2T_14_STS)","5"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_13_MTR.G,G_O2T_13_STS)","6"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_12_MTR.G,G_O2T_12_STS)","7"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_11_MTR.G,G_O2T_11_STS)","8"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_10_MTR.G,G_O2T_10_STS)","9"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_09_MTR.G,G_O2T_09_STS)","10"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_08_MTR.G,G_O2T_08_STS)","11"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_07_MTR.G,G_O2T_07_STS)","12"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_06_MTR.G,G_O2T_06_STS)","13"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_05_MTR.G,G_O2T_05_STS)","14"
RCOMMENT,"MainProgram","O2T_GFX","Conveyor Graphic$N$N$N","MOV(O2T_04_MTR.G,G_O2T_04_STS)","15"
RCOMMENT,"MainProgram","O2T_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_18_PE.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_17_PE.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_16_PE.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_15_PE.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_14_PE.JAM_TMR,?,?)","13"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_13_PE.JAM_TMR,?,?)","16"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_12_PE.JAM_TMR,?,?)","19"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_11_PE.JAM_TMR,?,?)","22"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_10_PE.JAM_TMR,?,?)","25"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_09_PE.JAM_TMR,?,?)","28"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_08_PE.JAM_TMR,?,?)","31"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_07_PE.JAM_TMR,?,?)","34"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_06_PE.JAM_TMR,?,?)","37"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_05_PE.JAM_TMR,?,?)","40"
RCOMMENT,"MainProgram","O2T_JAMS","Jam Detection$N$N","RTO(O2T_04_PE.JAM_TMR,?,?)","43"
RCOMMENT,"MainProgram","O2T_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O2T_MTRS","System Start Request","OTE(MCP_03.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","O2T_MTRS","Motor run expander.","OTE(MCP_03.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","O2T_MTRS","PE Grouping","OTE(MCP_03.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","O2T_MTRS","Reset Run Timer","RES(MCP_03.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","O2T_MTRS","Send downstream start request","OTE(MCP_03.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","O2T_MTRS","Run Timer","RTO(MCP_03.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","O2T_MTRS","Run Latch","OTE(MCP_03.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_18$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_18_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","O2T_MTRS","JRB Filter","OTE(O2T_18_MTR.JRB_FILT)","10"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_18_MTR.NO_FAULT)","11"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_18_MTR.IM_TMR,?,?)","12"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_18_MTR.INTL_MTR)","13"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_18_MTR.T2H_SPACE_TMR)","14"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_18_MTR.START_EN)","18"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_18_MTR.ON_TMR,?,?)","22"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_18_MTR.OFF_TMR,?,?)","23"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_17$N$N$N","NOP()","24"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_17_MTR.ANTI_CASC)","25"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_17_MTR.NO_FAULT)","26"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_17_MTR.IM_TMR,?,?)","27"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_17_MTR.INTL_MTR)","28"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_17_MTR.T2H_SPACE_TMR)","29"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_17_MTR.START_EN)","33"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_17_MTR.ON_TMR,?,?)","36"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_17_MTR.OFF_TMR,?,?)","37"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_16$N$N$N","NOP()","38"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_16_MTR.ANTI_CASC)","39"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_16_MTR.NO_FAULT)","40"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_16_MTR.IM_TMR,?,?)","41"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_16_MTR.INTL_MTR)","42"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_16_MTR.T2H_SPACE_TMR)","43"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_16_MTR.START_EN)","47"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_16_MTR.ON_TMR,?,?)","50"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_16_MTR.OFF_TMR,?,?)","51"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_15$N$N$N","NOP()","52"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_15_MTR.ANTI_CASC)","53"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_15_MTR.NO_FAULT)","54"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_15_MTR.IM_TMR,?,?)","55"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_15_MTR.INTL_MTR)","56"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_15_MTR.T2H_SPACE_TMR)","57"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_15_MTR.START_EN)","61"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_15_MTR.ON_TMR,?,?)","64"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_15_MTR.OFF_TMR,?,?)","65"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_14$N$N$N","NOP()","66"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_14_MTR.ANTI_CASC)","67"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_14_MTR.NO_FAULT)","68"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_14_MTR.IM_TMR,?,?)","69"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_14_MTR.INTL_MTR)","70"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_14_MTR.T2H_SPACE_TMR)","71"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_14_MTR.START_EN)","75"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_14_MTR.ON_TMR,?,?)","78"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_14_MTR.OFF_TMR,?,?)","79"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_13$N$N$N","NOP()","80"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_13_MTR.ANTI_CASC)","81"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_13_MTR.NO_FAULT)","82"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_13_MTR.IM_TMR,?,?)","83"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_13_MTR.INTL_MTR)","84"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_13_MTR.T2H_SPACE_TMR)","85"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_13_MTR.START_EN)","89"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_13_MTR.ON_TMR,?,?)","92"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_13_MTR.OFF_TMR,?,?)","93"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_12$N$N$N","NOP()","94"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_12_MTR.ANTI_CASC)","95"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_12_MTR.NO_FAULT)","96"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_12_MTR.IM_TMR,?,?)","97"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_12_MTR.INTL_MTR)","98"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_12_MTR.T2H_SPACE_TMR)","99"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_12_MTR.START_EN)","103"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_12_MTR.ON_TMR,?,?)","106"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_12_MTR.OFF_TMR,?,?)","107"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_11$N$N$N","NOP()","108"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_11_MTR.ANTI_CASC)","109"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_11_MTR.NO_FAULT)","110"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_11_MTR.IM_TMR,?,?)","111"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_11_MTR.INTL_MTR)","112"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_11_MTR.T2H_SPACE_TMR)","113"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_11_MTR.START_EN)","117"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_11_MTR.ON_TMR,?,?)","120"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_11_MTR.OFF_TMR,?,?)","121"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_10$N$N$N","NOP()","122"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_10_MTR.ANTI_CASC)","123"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_10_MTR.NO_FAULT)","124"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_10_MTR.IM_TMR,?,?)","125"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_10_MTR.INTL_MTR)","126"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_10_MTR.T2H_SPACE_TMR)","127"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_10_MTR.START_EN)","131"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_10_MTR.ON_TMR,?,?)","134"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_10_MTR.OFF_TMR,?,?)","135"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_09$N$N$N","NOP()","136"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_09_MTR.ANTI_CASC)","137"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_09_MTR.NO_FAULT)","138"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_09_MTR.IM_TMR,?,?)","139"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_09_MTR.INTL_MTR)","140"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_09_MTR.T2H_SPACE_TMR)","141"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_09_MTR.START_EN)","145"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_09_MTR.ON_TMR,?,?)","148"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_09_MTR.OFF_TMR,?,?)","149"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_08$N$N$N","NOP()","150"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_08_MTR.ANTI_CASC)","151"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_08_MTR.NO_FAULT)","152"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_08_MTR.IM_TMR,?,?)","153"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_08_MTR.INTL_MTR)","154"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_08_MTR.T2H_SPACE_TMR)","155"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_08_MTR.START_EN)","159"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_08_MTR.ON_TMR,?,?)","162"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_08_MTR.OFF_TMR,?,?)","163"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_07$N$N$N","NOP()","164"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_07_MTR.ANTI_CASC)","165"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_07_MTR.NO_FAULT)","166"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_07_MTR.IM_TMR,?,?)","167"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_07_MTR.INTL_MTR)","168"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_07_MTR.T2H_SPACE_TMR)","169"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_07_MTR.START_EN)","173"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_07_MTR.ON_TMR,?,?)","176"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_07_MTR.OFF_TMR,?,?)","177"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_06$N$N$N","NOP()","178"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_06_MTR.ANTI_CASC)","179"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_06_MTR.NO_FAULT)","180"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_06_MTR.IM_TMR,?,?)","181"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_06_MTR.INTL_MTR)","182"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_06_MTR.T2H_SPACE_TMR)","183"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_06_MTR.START_EN)","187"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_06_MTR.ON_TMR,?,?)","190"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_06_MTR.OFF_TMR,?,?)","191"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_05$N$N$N","NOP()","192"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_05_MTR.ANTI_CASC)","193"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_05_MTR.NO_FAULT)","194"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_05_MTR.IM_TMR,?,?)","195"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_05_MTR.INTL_MTR)","196"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_05_MTR.T2H_SPACE_TMR)","197"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_05_MTR.START_EN)","201"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_05_MTR.ON_TMR,?,?)","204"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_05_MTR.OFF_TMR,?,?)","205"
RCOMMENT,"MainProgram","O2T_MTRS","Motor O2T_04$N$N$N","NOP()","206"
RCOMMENT,"MainProgram","O2T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O2T_04_MTR.ANTI_CASC)","207"
RCOMMENT,"MainProgram","O2T_MTRS","Motor No Fault detection","OTE(O2T_04_MTR.NO_FAULT)","208"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor timer.","TON(O2T_04_MTR.IM_TMR,?,?)","209"
RCOMMENT,"MainProgram","O2T_MTRS","Internal Motor.","OTE(O2T_04_MTR.INTL_MTR)","210"
RCOMMENT,"MainProgram","O2T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O2T_04_MTR.T2H_SPACE_TMR)","211"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor Running.","OTE(O2T_04_MTR.START_EN)","215"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O2T_04_MTR.ON_TMR,?,?)","218"
RCOMMENT,"MainProgram","O2T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O2T_04_MTR.OFF_TMR,?,?)","219"
RCOMMENT,"MainProgram","O2T_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_18_PE.FILT)","1"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_17_PE.FILT)","4"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_16_PE.FILT)","8"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_15_PE.FILT)","12"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_14_PE.FILT)","16"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_13_PE.FILT)","20"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_12_PE.FILT)","24"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_11_PE.FILT)","28"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_10_PE.FILT)","32"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_09_PE.FILT)","36"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_08_PE.FILT)","40"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_07_PE.FILT)","44"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_06_PE.FILT)","48"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_05_PE.FILT)","52"
RCOMMENT,"MainProgram","O2T_PE_Filters","Photoeye","OTE(O2T_04_PE.FILT)","56"
RCOMMENT,"MainProgram","O2T_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","18"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","34"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","50"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","66"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","82"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","98"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","114"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","130"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","146"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","162"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","178"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","194"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","210"
RCOMMENT,"MainProgram","O2T_STATUS","Conveyor Status$N$N$N","NOP()","226"
RCOMMENT,"MainProgram","O2T_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_18 VFD$N***************************$N","TON(O2T_18_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_17 VFD$N***************************$N","TON(O2T_17_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_16 VFD$N***************************$N","TON(O2T_16_VFD.POWERED_DLY_TMR,?,?)","5"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_15 VFD$N***************************$N","TON(O2T_15_VFD.POWERED_DLY_TMR,?,?)","7"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_14 VFD$N***************************$N","TON(O2T_14_VFD.POWERED_DLY_TMR,?,?)","9"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_13 VFD$N***************************$N","TON(O2T_13_VFD.POWERED_DLY_TMR,?,?)","11"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_12 VFD$N***************************$N","TON(O2T_12_VFD.POWERED_DLY_TMR,?,?)","13"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_11 VFD$N***************************$N","TON(O2T_11_VFD.POWERED_DLY_TMR,?,?)","15"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_10 VFD$N***************************$N","TON(O2T_10_VFD.POWERED_DLY_TMR,?,?)","17"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_09 VFD$N***************************$N","TON(O2T_09_VFD.POWERED_DLY_TMR,?,?)","19"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_08 VFD$N***************************$N","TON(O2T_08_VFD.POWERED_DLY_TMR,?,?)","21"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_07 VFD$N***************************$N","TON(O2T_07_VFD.POWERED_DLY_TMR,?,?)","23"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_06 VFD$N***************************$N","TON(O2T_06_VFD.POWERED_DLY_TMR,?,?)","25"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_05 VFD$N***************************$N","TON(O2T_05_VFD.POWERED_DLY_TMR,?,?)","27"
RCOMMENT,"MainProgram","O2T_VFDS","Motor O2T_04 VFD$N***************************$N","TON(O2T_04_VFD.POWERED_DLY_TMR,?,?)","29"
RCOMMENT,"MainProgram","O3T_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O3T_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","O3T_FIELD_IND","Control Station$N$N","NOP()","6"
RCOMMENT,"MainProgram","O3T_FIELD_IND","Control Station$N$N","NOP()","11"
RCOMMENT,"MainProgram","O3T_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O3T_GFX","Conveyor Graphic$N$N$N","MOV(O3T_20_MTR.G,G_O3T_20_STS)","1"
RCOMMENT,"MainProgram","O3T_GFX","Conveyor Graphic$N$N$N","MOV(O3T_19_MTR.G,G_O3T_19_STS)","2"
RCOMMENT,"MainProgram","O3T_GFX","Conveyor Graphic$N$N$N","MOV(O3T_18_MTR.G,G_O3T_18_STS)","3"
RCOMMENT,"MainProgram","O3T_GFX","Conveyor Graphic$N$N$N","MOV(O3T_17_MTR.G,G_O3T_17_STS)","4"
RCOMMENT,"MainProgram","O3T_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O3T_JAMS","Jam Detection$N$N","RTO(O3T_20_PE.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","O3T_JAMS","Jam Detection$N$N","RTO(O3T_19_PE.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","O3T_JAMS","Jam Detection$N$N","RTO(O3T_18_PE.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","O3T_JAMS","Jam Detection$N$N","RTO(O3T_17_PE.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","O3T_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O3T_MTRS","System Start Request","OTE(O3T.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","O3T_MTRS","Motor run expander.","OTE(O3T.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","O3T_MTRS","PE Grouping","OTE(O3T.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","O3T_MTRS","Reset Run Timer","RES(O3T.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","O3T_MTRS","Send downstream start request","OTE(O3T.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","O3T_MTRS","Run Timer","RTO(O3T.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","O3T_MTRS","Run Latch","OTE(O3T.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","O3T_MTRS","Motor O3T_20$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","O3T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O3T_20_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","O3T_MTRS","Motor No Fault detection","OTE(O3T_20_MTR.NO_FAULT)","10"
RCOMMENT,"MainProgram","O3T_MTRS","Internal Motor timer.","TON(O3T_20_MTR.IM_TMR,?,?)","11"
RCOMMENT,"MainProgram","O3T_MTRS","Internal Motor.","OTE(O3T_20_MTR.INTL_MTR)","12"
RCOMMENT,"MainProgram","O3T_MTRS","Conveyor Running.","OTE(O3T_20_MTR.START_EN)","13"
RCOMMENT,"MainProgram","O3T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O3T_20_MTR.ON_TMR,?,?)","16"
RCOMMENT,"MainProgram","O3T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O3T_20_MTR.OFF_TMR,?,?)","17"
RCOMMENT,"MainProgram","O3T_MTRS","Motor O3T_19$N$N$N","NOP()","18"
RCOMMENT,"MainProgram","O3T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O3T_19_MTR.ANTI_CASC)","19"
RCOMMENT,"MainProgram","O3T_MTRS","Motor No Fault detection","OTE(O3T_19_MTR.NO_FAULT)","20"
RCOMMENT,"MainProgram","O3T_MTRS","Internal Motor timer.","TON(O3T_19_MTR.IM_TMR,?,?)","21"
RCOMMENT,"MainProgram","O3T_MTRS","Internal Motor.","OTE(O3T_19_MTR.INTL_MTR)","22"
RCOMMENT,"MainProgram","O3T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O3T_19_MTR.T2H_SPACE_TMR)","23"
RCOMMENT,"MainProgram","O3T_MTRS","Conveyor Running.","OTE(O3T_19_MTR.START_EN)","27"
RCOMMENT,"MainProgram","O3T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O3T_19_MTR.ON_TMR,?,?)","30"
RCOMMENT,"MainProgram","O3T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O3T_19_MTR.OFF_TMR,?,?)","31"
RCOMMENT,"MainProgram","O3T_MTRS","Motor O3T_18$N$N$N","NOP()","32"
RCOMMENT,"MainProgram","O3T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O3T_18_MTR.ANTI_CASC)","33"
RCOMMENT,"MainProgram","O3T_MTRS","Motor No Fault detection","OTE(O3T_18_MTR.NO_FAULT)","34"
RCOMMENT,"MainProgram","O3T_MTRS","Internal Motor timer.","TON(O3T_18_MTR.IM_TMR,?,?)","35"
RCOMMENT,"MainProgram","O3T_MTRS","Internal Motor.","OTE(O3T_18_MTR.INTL_MTR)","36"
RCOMMENT,"MainProgram","O3T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O3T_18_MTR.T2H_SPACE_TMR)","37"
RCOMMENT,"MainProgram","O3T_MTRS","Conveyor Running.","OTE(O3T_18_MTR.START_EN)","41"
RCOMMENT,"MainProgram","O3T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O3T_18_MTR.ON_TMR,?,?)","44"
RCOMMENT,"MainProgram","O3T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O3T_18_MTR.OFF_TMR,?,?)","45"
RCOMMENT,"MainProgram","O3T_MTRS","Motor O3T_17$N$N$N","NOP()","46"
RCOMMENT,"MainProgram","O3T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O3T_17_MTR.ANTI_CASC)","47"
RCOMMENT,"MainProgram","O3T_MTRS","Motor No Fault detection","OTE(O3T_17_MTR.NO_FAULT)","48"
RCOMMENT,"MainProgram","O3T_MTRS","Internal Motor timer.","TON(O3T_17_MTR.IM_TMR,?,?)","49"
RCOMMENT,"MainProgram","O3T_MTRS","Internal Motor.","OTE(O3T_17_MTR.INTL_MTR)","50"
RCOMMENT,"MainProgram","O3T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O3T_17_MTR.T2H_SPACE_TMR)","51"
RCOMMENT,"MainProgram","O3T_MTRS","Conveyor Running.","OTE(O3T_17_MTR.START_EN)","55"
RCOMMENT,"MainProgram","O3T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O3T_17_MTR.ON_TMR,?,?)","58"
RCOMMENT,"MainProgram","O3T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O3T_17_MTR.OFF_TMR,?,?)","59"
RCOMMENT,"MainProgram","O3T_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O3T_PE_Filters","Photoeye","OTE(O3T_20_PE.FILT)","1"
RCOMMENT,"MainProgram","O3T_PE_Filters","Photoeye","OTE(O3T_19_PE.FILT)","4"
RCOMMENT,"MainProgram","O3T_PE_Filters","Photoeye","OTE(O3T_18_PE.FILT)","8"
RCOMMENT,"MainProgram","O3T_PE_Filters","Photoeye","OTE(O3T_17_PE.FILT)","12"
RCOMMENT,"MainProgram","O3T_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O3T_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","O3T_STATUS","Conveyor Status$N$N$N","NOP()","17"
RCOMMENT,"MainProgram","O3T_STATUS","Conveyor Status$N$N$N","NOP()","33"
RCOMMENT,"MainProgram","O3T_STATUS","Conveyor Status$N$N$N","NOP()","49"
RCOMMENT,"MainProgram","O3T_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O3T_VFDS","Motor O3T_20 VFD$N***************************$N","TON(O3T_20_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","O3T_VFDS","Motor O3T_19 VFD$N***************************$N","TON(O3T_19_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","O3T_VFDS","Motor O3T_18 VFD$N***************************$N","TON(O3T_18_VFD.POWERED_DLY_TMR,?,?)","5"
RCOMMENT,"MainProgram","O3T_VFDS","Motor O3T_17 VFD$N***************************$N","TON(O3T_17_VFD.POWERED_DLY_TMR,?,?)","7"
RCOMMENT,"MainProgram","O4T_2_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_2_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_2_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_2_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_2_MTRS","System Start Request","OTE(O4T_2.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","O4T_2_MTRS","Motor run expander.","OTE(O4T_2.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","O4T_2_MTRS","PE Grouping","OTE(O4T_2.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","O4T_2_MTRS","Reset Run Timer","RES(O4T_2.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","O4T_2_MTRS","Send downstream start request","OTE(O4T_2.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","O4T_2_MTRS","Run Timer","RTO(O4T_2.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","O4T_2_MTRS","Run Latch","OTE(O4T_2.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","O4T_2_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_2_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","OTE(O4T_20_MTR.JAMMED)","0"
RCOMMENT,"MainProgram","O4T_2_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","O4T_FIELD_IND","Control Station$N$N","NOP()","6"
RCOMMENT,"MainProgram","O4T_FIELD_IND","Control Station$N$N","NOP()","11"
RCOMMENT,"MainProgram","O4T_FIELD_IND","Control Station$N$N","NOP()","16"
RCOMMENT,"MainProgram","O4T_FIELD_IND","Control Station$N$N","NOP()","21"
RCOMMENT,"MainProgram","O4T_FIELD_IND","Field Annunciator (Beacon or Audible or Stacklight or etc)$N$N","NOP()","26"
RCOMMENT,"MainProgram","O4T_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_13_MTR.G,G_O4T_13_STS)","1"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_12_MTR.G,G_O4T_12_STS)","2"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_11_MTR.G,G_O4T_11_STS)","3"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_10_MTR.G,G_O4T_10_STS)","4"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_09_MTR.G,G_O4T_09_STS)","5"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_08_MTR.G,G_O4T_08_STS)","6"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_07_MTR.G,G_O4T_07_STS)","7"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_06_MTR.G,G_O4T_06_STS)","8"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_05_MTR.G,G_O4T_05_STS)","9"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_22_MTR.G,G_O4T_22_STS)","10"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_21_MTR.G,G_O4T_21_STS)","11"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_20_MTR.G,G_O4T_20_STS)","12"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_19_MTR.G,G_O4T_19_STS)","13"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_18_MTR.G,G_O4T_18_STS)","14"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O4T_17_MTR.G,G_O4T_17_STS)","15"
RCOMMENT,"MainProgram","O4T_GFX","Conveyor Graphic$N$N$N","MOV(O3T_21_MTR.G,G_O4T_16_STS)","16"
RCOMMENT,"MainProgram","O4T_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_13_PE.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_12_PE.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_11_PE.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_10_PE1.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_10_PE2.JAM_TMR,?,?)","13"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_09_PE.JAM_TMR,?,?)","16"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_08_PE.JAM_TMR,?,?)","19"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_07_PE.JAM_TMR,?,?)","22"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_06_PE.JAM_TMR,?,?)","25"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_05_PE.JAM_TMR,?,?)","28"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_22_PE.JAM_TMR,?,?)","31"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_21_PE.JAM_TMR,?,?)","34"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_20_PE.JAM_TMR,?,?)","37"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_19_PE.JAM_TMR,?,?)","40"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_18_PE.JAM_TMR,?,?)","43"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_17_PE.JAM_TMR,?,?)","46"
RCOMMENT,"MainProgram","O4T_JAMS","Jam Detection$N$N","RTO(O4T_16_PE.JAM_TMR,?,?)","49"
RCOMMENT,"MainProgram","O4T_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_MTRS","System Start Request","OTE(O4T.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","O4T_MTRS","Motor run expander.","OTE(O4T.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","O4T_MTRS","PE Grouping","OTE(O4T.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","O4T_MTRS","Reset Run Timer","RES(O4T.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","O4T_MTRS","Send downstream start request","OTE(O4T.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","O4T_MTRS","Run Timer","RTO(O4T.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","O4T_MTRS","Run Latch","OTE(O4T.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_13$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_13_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_13_MTR.NO_FAULT)","10"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_13_MTR.IM_TMR,?,?)","11"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_13_MTR.INTL_MTR)","12"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_13_MTR.START_EN)","14"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_13_MTR.ON_TMR,?,?)","17"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_13_MTR.OFF_TMR,?,?)","18"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_12$N$N$N","NOP()","19"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_12_MTR.ANTI_CASC)","20"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_12_MTR.NO_FAULT)","21"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_12_MTR.IM_TMR,?,?)","22"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_12_MTR.INTL_MTR)","23"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O4T_12_MTR.T2H_SPACE_TMR)","24"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_12_MTR.START_EN)","28"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_12_MTR.ON_TMR,?,?)","31"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_12_MTR.OFF_TMR,?,?)","32"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_11$N$N$N","NOP()","33"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_11_MTR.ANTI_CASC)","34"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_11_MTR.NO_FAULT)","35"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_11_MTR.IM_TMR,?,?)","36"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_11_MTR.INTL_MTR)","37"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O4T_11_MTR.T2H_SPACE_TMR)","38"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_11_MTR.START_EN)","42"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_11_MTR.ON_TMR,?,?)","45"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_11_MTR.OFF_TMR,?,?)","46"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_10$N$N$N","NOP()","47"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_10_MTR.ANTI_CASC)","48"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_10_MTR.NO_FAULT)","49"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_10_MTR.IM_TMR,?,?)","50"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_10_MTR.INTL_MTR)","51"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O4T_10_MTR.T2H_SPACE_TMR)","52"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_10_MTR.START_EN)","56"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_10_MTR.ON_TMR,?,?)","63"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_10_MTR.OFF_TMR,?,?)","64"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_09$N$N$N","NOP()","65"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_09_MTR.ANTI_CASC)","66"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_09_MTR.NO_FAULT)","67"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_09_MTR.IM_TMR,?,?)","68"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_09_MTR.INTL_MTR)","69"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O4T_09_MTR.T2H_SPACE_TMR)","70"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_09_MTR.START_EN)","74"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_09_MTR.ON_TMR,?,?)","77"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_09_MTR.OFF_TMR,?,?)","78"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_08$N$N$N","NOP()","79"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_08_MTR.ANTI_CASC)","80"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_08_MTR.NO_FAULT)","81"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_08_MTR.IM_TMR,?,?)","82"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_08_MTR.INTL_MTR)","83"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O4T_08_MTR.T2H_SPACE_TMR)","84"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_08_MTR.START_EN)","88"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_08_MTR.ON_TMR,?,?)","91"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_08_MTR.OFF_TMR,?,?)","92"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_07$N$N$N","NOP()","93"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_07_MTR.ANTI_CASC)","94"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_07_MTR.NO_FAULT)","95"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_07_MTR.IM_TMR,?,?)","96"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_07_MTR.INTL_MTR)","97"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O4T_07_MTR.T2H_SPACE_TMR)","98"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_07_MTR.START_EN)","102"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_07_MTR.ON_TMR,?,?)","105"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_07_MTR.OFF_TMR,?,?)","106"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_06$N$N$N","NOP()","107"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_06_MTR.ANTI_CASC)","108"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_06_MTR.NO_FAULT)","109"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_06_MTR.IM_TMR,?,?)","110"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_06_MTR.INTL_MTR)","111"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O4T_06_MTR.T2H_SPACE_TMR)","112"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_06_MTR.START_EN)","116"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_06_MTR.ON_TMR,?,?)","119"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_06_MTR.OFF_TMR,?,?)","120"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_05$N$N$N","NOP()","121"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_05_MTR.ANTI_CASC)","122"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_05_MTR.NO_FAULT)","123"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_05_MTR.IM_TMR,?,?)","124"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_05_MTR.INTL_MTR)","125"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O4T_05_MTR.T2H_SPACE_TMR)","126"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_05_MTR.START_EN)","130"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_05_MTR.ON_TMR,?,?)","133"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_05_MTR.OFF_TMR,?,?)","134"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_22$N$N$N","NOP()","135"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_22_MTR.ANTI_CASC)","136"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_22_MTR.NO_FAULT)","137"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_22_MTR.IM_TMR,?,?)","138"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_22_MTR.INTL_MTR)","139"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_22_MTR.START_EN)","140"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_22_MTR.ON_TMR,?,?)","143"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_22_MTR.OFF_TMR,?,?)","144"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_21$N$N$N","NOP()","145"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_21_MTR.ANTI_CASC)","146"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_21_MTR.NO_FAULT)","147"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_21_MTR.IM_TMR,?,?)","148"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_21_MTR.INTL_MTR)","149"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_21_MTR.START_EN)","150"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_21_MTR.ON_TMR,?,?)","153"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_21_MTR.OFF_TMR,?,?)","154"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_20$N$N$N","NOP()","155"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_20_MTR.ANTI_CASC)","156"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_20_MTR.NO_FAULT)","157"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_20_MTR.IM_TMR,?,?)","158"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_20_MTR.INTL_MTR)","159"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O4T_20_MTR.T2H_SPACE_TMR)","160"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_20_MTR.START_EN)","164"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_20_MTR.ON_TMR,?,?)","167"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_20_MTR.OFF_TMR,?,?)","168"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_19$N$N$N","NOP()","169"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_19_MTR.ANTI_CASC)","170"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_19_MTR.NO_FAULT)","171"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_19_MTR.IM_TMR,?,?)","172"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_19_MTR.INTL_MTR)","173"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O4T_19_MTR.T2H_SPACE_TMR)","174"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_19_MTR.START_EN)","178"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_19_MTR.ON_TMR,?,?)","181"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_19_MTR.OFF_TMR,?,?)","182"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_18$N$N$N","NOP()","183"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_18_MTR.ANTI_CASC)","184"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_18_MTR.NO_FAULT)","185"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_18_MTR.IM_TMR,?,?)","186"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_18_MTR.INTL_MTR)","187"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O4T_18_MTR.T2H_SPACE_TMR)","188"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_18_MTR.START_EN)","192"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_18_MTR.ON_TMR,?,?)","195"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_18_MTR.OFF_TMR,?,?)","196"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_17$N$N$N","NOP()","197"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O4T_17_MTR.ANTI_CASC)","198"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O4T_17_MTR.NO_FAULT)","199"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O4T_17_MTR.IM_TMR,?,?)","200"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O4T_17_MTR.INTL_MTR)","201"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O4T_17_MTR.T2H_SPACE_TMR)","202"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O4T_17_MTR.START_EN)","206"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O4T_17_MTR.ON_TMR,?,?)","209"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O4T_17_MTR.OFF_TMR,?,?)","210"
RCOMMENT,"MainProgram","O4T_MTRS","Motor O4T_16$N$N$N","NOP()","211"
RCOMMENT,"MainProgram","O4T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(O3T_21_MTR.ANTI_CASC)","212"
RCOMMENT,"MainProgram","O4T_MTRS","Motor No Fault detection","OTE(O3T_21_MTR.NO_FAULT)","213"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor timer.","TON(O3T_21_MTR.IM_TMR,?,?)","214"
RCOMMENT,"MainProgram","O4T_MTRS","Internal Motor.","OTE(O3T_21_MTR.INTL_MTR)","215"
RCOMMENT,"MainProgram","O4T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(O3T_21_MTR.T2H_SPACE_TMR)","216"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor Running.","OTE(O3T_21_MTR.START_EN)","220"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(O3T_21_MTR.ON_TMR,?,?)","223"
RCOMMENT,"MainProgram","O4T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(O3T_21_MTR.OFF_TMR,?,?)","224"
RCOMMENT,"MainProgram","O4T_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_13_PE.FILT)","1"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_12_PE.FILT)","4"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_11_PE.FILT)","8"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_10_PE1.FILT)","12"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_10_PE2.FILT)","16"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_09_PE.FILT)","19"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_08_PE.FILT)","23"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_07_PE.FILT)","27"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_06_PE.FILT)","31"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_05_PE.FILT)","35"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_22_PE.FILT)","39"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_21_PE.FILT)","42"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_20_PE.FILT)","45"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_19_PE.FILT)","49"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_18_PE.FILT)","53"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_17_PE.FILT)","57"
RCOMMENT,"MainProgram","O4T_PE_Filters","Photoeye","OTE(O4T_16_PE.FILT)","61"
RCOMMENT,"MainProgram","O4T_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","17"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","33"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","49"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","65"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","81"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","97"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","113"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","129"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","145"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","161"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","177"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","193"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","209"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","225"
RCOMMENT,"MainProgram","O4T_STATUS","Conveyor Status$N$N$N","NOP()","241"
RCOMMENT,"MainProgram","O4T_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_13 VFD$N***************************$N","TON(O4T_13_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_12 VFD$N***************************$N","TON(O4T_12_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_11 VFD$N***************************$N","TON(O4T_11_VFD.POWERED_DLY_TMR,?,?)","5"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_10 VFD$N***************************$N","TON(O4T_10_VFD.POWERED_DLY_TMR,?,?)","7"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_09 VFD$N***************************$N","TON(O4T_09_VFD.POWERED_DLY_TMR,?,?)","9"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_08 VFD$N***************************$N","TON(O4T_08_VFD.POWERED_DLY_TMR,?,?)","11"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_07 VFD$N***************************$N","TON(O4T_07_VFD.POWERED_DLY_TMR,?,?)","13"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_06 VFD$N***************************$N","TON(O4T_06_VFD.POWERED_DLY_TMR,?,?)","15"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_05 VFD$N***************************$N","TON(O4T_05_VFD.POWERED_DLY_TMR,?,?)","17"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_22 VFD$N***************************$N","TON(O4T_22_VFD.POWERED_DLY_TMR,?,?)","19"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_21 VFD$N***************************$N","TON(O4T_21_VFD.POWERED_DLY_TMR,?,?)","21"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_20 VFD$N***************************$N","TON(O4T_20_VFD.POWERED_DLY_TMR,?,?)","23"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_19 VFD$N***************************$N","TON(O4T_19_VFD.POWERED_DLY_TMR,?,?)","25"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_18 VFD$N***************************$N","TON(O4T_18_VFD.POWERED_DLY_TMR,?,?)","27"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_17 VFD$N***************************$N","TON(O4T_17_VFD.POWERED_DLY_TMR,?,?)","29"
RCOMMENT,"MainProgram","O4T_VFDS","Motor O4T_16 VFD$N***************************$N","TON(O3T_21_VFD.POWERED_DLY_TMR,?,?)","31"
RCOMMENT,"MainProgram","PLC_STATUS","****************************************************************************************************$NThis routine captures PLC status information and moves it to tags for HMI display.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","PLC_STATUS","Capture the setting for the main task timed interrupt and set the $Qabove normal$Q and $Qcritical$Q scan time alarm thresholds.","SUB(PLC_101.SCAN_LOG_CRTCL_LMT,3000,PLC_101.SCAN_LOG_HI_LMT)","3"
RCOMMENT,"MainProgram","PLC_STATUS","Increment the index pointer for the scan time log.","MOV(S_PLC_101_LAST_SCAN,PLC_101.SCAN_LOG[PLC_101.SCAN_LOG_NDX])","4"
RCOMMENT,"MainProgram","PLC_STATUS","Count how many of the last 10 scans are above the $Qcritical$Q threshold.","ADD(PLC_101.SCAN_LOG_CRTCL_CNT,1,PLC_101.SCAN_LOG_CRTCL_CNT)","5"
RCOMMENT,"MainProgram","PLC_STATUS","If too many of the last 10 scans are above the $Qcritical$Q threshold, then activate the critical scan time alarm.","TOF(PLC_101.SCAN_CRTCL_TMR,?,?)","6"
RCOMMENT,"MainProgram","PLC_STATUS","Count how many of the last 10 scans are above the $Qabove normal$Q threshold.","ADD(PLC_101.SCAN_LOG_HI_CNT,1,PLC_101.SCAN_LOG_HI_CNT)","8"
RCOMMENT,"MainProgram","PLC_STATUS","If too many of the last 10 scans are above the $Qabove normal$Q threshold, then activate the critical scan time alarm.","TOF(PLC_101.SCAN_HI_TMR,?,?)","9"
RCOMMENT,"MainProgram","PLC_STATUS","HMI Reset of PLC status.","OTU(HMI_PLC_101_MAX_SCAN_RESET)","22"
RCOMMENT,"MainProgram","PLC_STATUS","****************************************************************************************************$NThe followings rungs check the redundancy of the PLCs$N****************************************************************************************************$N$N$NDetect If A Fault Is Detected With The Secondary (Redundant) Controller.","OTE(F_PLC_101_REDUNDANCY_FAULT)","25"
RCOMMENT,"MainProgram","PLC_STATUS","Detect If The Primary And Secondary Chassis$' Are Compatible","OTE(PLC_101.Compatible)","26"
RCOMMENT,"MainProgram","PLC_STATUS","Detect Which Processor Chassis (Chassis A or B) Is Active.","OTE(PLC_101.B_Active)","27"
RCOMMENT,"MainProgram","PLC_STATUS","Detect If Primary And Secondary Processors Are Compatible.","OTE(PLC_101.Peer_Compatible)","28"
RCOMMENT,"MainProgram","PLC_STATUS","Determine If The Primary And Secondary Processor Key Switches Match","OTE(PLC_101.Peer_KSW_Match)","29"
RCOMMENT,"MainProgram","PLC_STATUS","Detect If Active Primary With Qualified Secondary Processors Exists","OTE(PLC_101.Peer_Qualified)","30"
RCOMMENT,"MainProgram","PLC_STATUS","Detect If Secondary Processor Is In Run Mode","OTE(PLC_101.Peer_Run)","31"
RCOMMENT,"MainProgram","PLC_STATUS","Detect Secondary Processor Battery Status","OTE(PLC_101.Peer_Battery_Status)","32"
RCOMMENT,"MainProgram","Program_Fault_Handler","****************************************************************************************************$NThis routine is the Program Fault Handler.$NThis routine is called if a Major program fault occurs.  This routine attempts to reset the fault so that the PLC can keep running.  This routine also turns on an HMI alarm so that the operator is alerted to the fact that a major fault occurred.  This routine also captures the fault type and fault code for display on the HMI, as well as logging the last 10 major program faults.$N****************************************************************************************************$N$N$NNOTE:  You will not be able to edit any of the fault handling programs in certain redundancy states.  Refer to RSLogix 5000 Capabilities and Redundancy State for more information.","NOP()","0"
RCOMMENT,"MainProgram","Program_Fault_Handler","Get Major Fault Record","GSV(Program,THIS,MAJORFAULTRECORD,LAST_MAJOR_FAULT.Time_Low)","2"
RCOMMENT,"MainProgram","Program_Fault_Handler","IF THE MAJOR FAULT FIFO IS FULL, DISREGARD OLDEST ITEM TO MAKE ROOM FOR NEW ITEM.","FFU(MAJOR_FAULT_FIFO[0],MAJOR_FAULT_DISCARD,MAJOR_FAULT_FIFO_CONTROL,?,?)","4"
RCOMMENT,"MainProgram","Program_Fault_Handler","Move the new Fault into the Major Fault FIFO","FFL(LAST_MAJOR_FAULT,MAJOR_FAULT_FIFO[0],MAJOR_FAULT_FIFO_CONTROL,?,?)","7"
RCOMMENT,"MainProgram","Program_Fault_Handler","Turn on an HMI alarm and copy the fault code and fault type to HMI display tags.","MOV(LAST_MAJOR_FAULT.Code,S_PLC_101_PRG_FAULT_CODE)","9"
RCOMMENT,"MainProgram","Program_Fault_Handler","Clear the Fault Codes","CLR(LAST_MAJOR_FAULT.Code)","10"
RCOMMENT,"MainProgram","Program_Fault_Handler","Reset the Major Fault with SSV","SSV(Program,THIS,MAJORFAULTRECORD,LAST_MAJOR_FAULT.Time_Low)","11"
RCOMMENT,"MainProgram","R_CALC_BT_CONST","****************************************************************************************************$NThis routine sets values for the associated encoder based on the input values.$N$N$N****************************************************************************************************$N$N**** THIS ROUTINE IS NOT EXECUTED EVERY SCAN *****","CPT(R_CALC_BT_CONST_PP2S,R_CALC_BT_CONST_MTRx.CONV_SPEED*0.4/R_CALC_BT_CONST_BTx.RES)","0"
RCOMMENT,"MainProgram","R_CALC_DIV_CONST","****************************************************************************************************$NThis routine sets values for the associated diverter based on the input values.$N$N$N****************************************************************************************************$N$N**** THIS ROUTINE IS NOT EXECUTED EVERY SCAN *****","FLL(0,R_CALC_DIV_AC_MASK[0],3)","0"
RCOMMENT,"MainProgram","R_CALC_DIV_CONST","Add Extend Delay to Activation Constant so that if Extend Delay is non-zero, a bag which is to be diverted does not become identified as a  bag.","SUB(R_CALC_DIV_TC_CNT_PRE,R_CALC_DIV_EXT_DELAY,R_CALC_DIV_TC_CNT_PRE)","1"
RCOMMENT,"MainProgram","R_CALC_DIV_CONST","Determine Activation + Extend Delay reference point to start paddle area clear mask creation","DIV(R_CALC_DIV_ACT_CONST_ARY,32,R_CALC_DIV_ACT_CONST_ARY)","2"
RCOMMENT,"MainProgram","R_CALC_DIV_CONST","Paddle area clear mask creation","ADD(R_CALC_DIV_AC_NDX,1,R_CALC_DIV_AC_NDX)","3"
RCOMMENT,"MainProgram","R_CALC_MTR_CONST","****************************************************************************************************$NThis routine sets values for the associated motor based on the input values.$N$N$N****************************************************************************************************$N$N**** THIS ROUTINE IS NOT EXECUTED EVERY SCAN *****","MOV(1000,R_CALC_MTR_CONST_MTR.CTCTR_FLT_TMR.PRE)","0"
RCOMMENT,"MainProgram","R_CALC_PE_CONST","****************************************************************************************************$NThis routine sets values for the associated photoeye based on the input values.$N$N$N****************************************************************************************************$N$N**** THIS ROUTINE IS NOT EXECUTED EVERY SCAN *****","CPT(R_CALC_PE_CONST_PE.JAM_TMR.PRE,200/(R_CALC_PE_CONST_MTRx.CONV_SPEED*0.0002))","0"
RCOMMENT,"MainProgram","R_CALC_SPACER_CONST","Calculate the spacer pulse count if an encoder resolution is specified","DIV(R_CALC_SPACER_CONST_MTR2x.T2H_SPACE_DIST,R_CALC_SPACER_CONST_BTx.RES,R_CALC_SPACER_CONST_MTR2x.T2H_SPACE_SET)","1"
RCOMMENT,"MainProgram","R_CALC_SPACER_CONST","Calculate the spacer time setting","MOV(200,R_CALC_SPACER_CONST_MTR.T2H_SPACE_TMR.PRE)","2"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Add","****************************************************************************************************$NThis routine adds an item to the UL message FIFO Array.  If the FIFO Array is FULL then 10 messages in the array starting from the unload position will be removed to make room for the new message.$N$N$N****************************************************************************************************$N$N**** THIS ROUTINE DOES NOT EXECUTE EVERY SCAN ****$N$N$N","NOP()","0"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Add","IF FIFO is full, Discard the oldest one.$N$N$N","MOV(0,MSG_TO_UL_QUEUE.UNLD_POS)","1"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Add","Message added to FIFO Array and Load Position incremented by one$NThis message queue $'wraps around$' so after loading the highest array element, set the load position back to 0 and continue loading$N$N","MOV(0,MSG_TO_UL_QUEUE.LOAD_POS)","2"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Send","--------------------------------------------------------------$NUL COMMUNICATION$N---------------------------------------------------------------$N","NOP()","0"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Send","If the message queue Load position not equal to the unload position there are messages waiting in the queue.$N$NIf the MSG is ready, unload from the queue and trigger sending another message","OTE(R_MSG_TO_UL.EX_ONS)","1"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Send","Disable the HeartBeat if messages are currently being sent","CLR(R_MSG_TO_UL.HB_CNT)","2"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Send","Load a heartbeat message into the FIFO if no messages have been sent for a pre-determined amount of time.","CLR(R_MSG_TO_UL.HB_CNT)","4"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Send","Trigger the message to the Upper Level if new data has been unloaded from the fifo.$NIf the Upper Level is not available the message will remain enabled for 30 seconds before going into Error. Continually re-send the message every two seconds after the message has entered into Error","MSG(MESSAGE_TO_UL)","5"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Send","Create an HMI Alarm if the message goes into Error. The alarm will be reset once the Message completes successfully","OTE(F_PLC_101_MSG_TO_UL_FAIL)","6"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Send","Monitor the message queue - if it fills up completely, assert an HMI alarm.$N","OTE(F_PLC_101_MSG_TO_UL_FULL)","7"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Send","Since MSG status bits may change asynchronously, it is recommended to make a copy for reference$Ninstead of directly using the status bits.","COP(MESSAGE_TO_UL.Flags,R_MSG_TO_UL.FLAGS,1)","8"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Unload","****************************************************************************************************$NThis routine unloads multiple messages from the queue into a $'page$' of messages which is sent to the UL in one CIP message.$N$NThe message is sent whenever there are any messages available and doesn$'t wait for the page to be full$N$N$N****************************************************************************************************$N$N**** THIS ROUTINE DOES NOT EXECUTE EVERY SCAN ****","NOP()","0"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Unload","Loop until the page is full or the queue is empty","NOP()","2"
RCOMMENT,"MainProgram","R_MSG_TO_UL_Unload","This queue $'wraps around$' so after unloading the highest array element, the unload position drops back to 0. The queue is not empty until the unload position == the load position.","MOV(0,MSG_TO_UL_QUEUE.UNLD_POS)","3"
RCOMMENT,"MainProgram","SUBR_CALLS","***********************************************************************************************$NThis routine calls all of the general motor group (conveyor line) related subroutines.$N$N$N***********************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","1"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","10"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","19"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","27"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","36"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","45"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","53"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","61"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","69"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","78"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","87"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","95"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","104"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","112"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","121"
RCOMMENT,"MainProgram","SUBR_CALLS","Motor Group","NOP()","130"
RCOMMENT,"MainProgram","SUBR_CALLS","MCP Calls","JSR(MCP_BM1_MONITOR_ALARMS,0)","138"
RCOMMENT,"MainProgram","SUBR_CALLS","MCP Calls","JSR(MCP_01_MONITOR_ALARMS,0)","140"
RCOMMENT,"MainProgram","SUBR_CALLS","MCP Calls","JSR(MCP_02_MONITOR_ALARMS,0)","142"
RCOMMENT,"MainProgram","SUBR_CALLS","MCP Calls","JSR(MCP_03_MONITOR_ALARMS,0)","144"
RCOMMENT,"MainProgram","SUBR_CALLS","MCP Calls","JSR(MCP_16_MONITOR_ALARMS,0)","146"
RCOMMENT,"MainProgram","T5T_09_MRG","Merge Routine - Fixed Gap size$N*********************************************$N$NThis rung will fill the mainline bit shift register with a 1 when the merge inhibit photoeye is blocked.","OTL(T5T_09_MRG.MainLineBS[1].15)","0"
RCOMMENT,"MainProgram","T5T_09_MRG","For each mainline belt tach pulse do the following:$NBit shift right the mainline bit shift register$NIncrement the leading gap counter accumulator","ADD(1,T5T_09_MRG.Lead_Gap_Acc,T5T_09_MRG.Lead_Gap_Acc)","1"
RCOMMENT,"MainProgram","T5T_09_MRG","This rung will add the distance the bag on the merge has coasted to the required minimum leading gap.$NThe variable $Q_MRGx.Lead_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged behind.","ADD(T5T_09_MRG.BagPastPE,T5T_09_MRGx.Lead_Gap,T5T_09_MRG.Lead_Gap)","2"
RCOMMENT,"MainProgram","T5T_09_MRG","As the BSR is unloading ones from the mainline bit shift register at element zero bit zero clear the leading gap counter accumulator.$NThis insures the leading gap counter only increments based on the tail of the mainline bag.","CLR(T5T_09_MRG.Lead_Gap_Acc)","3"
RCOMMENT,"MainProgram","T5T_09_MRG","Once the leading gap counter has accumulated to the leading gap constant the merge behind condition has been met.","OTE(T5T_09_MRG.Lead_Gap_DN)","4"
RCOMMENT,"MainProgram","T5T_09_MRG","Sync Run logic for non tracked merges.$NThis allows the merge to restart when the mainline stops and a bag is mid merge","RES(T5T_09_MRG.SyncRunTmr)","5"
RCOMMENT,"MainProgram","T5T_09_MRG","On the positive transition of the photoeye seal, populate the merge line bit shift registers.$NThe merge line bit shift registers are compared to the mainline bit shift registers to see if a bag can merge without crashing into another bag.$NThe variable $Q_MRGx.Trail_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged ahead of.$NThe variable $Q_MRGx.MinLength$Q is used when the merging bag does not have its length defined.  In such a case, you must assume the bag is the max size the system is designed to handle.$NIf the bag does have its length defined, the bag$'s length is added to $Q_MRGx.Trail_Gap$Q to define the value populated into the merge line shift register.$NThe variable $Q_MRGx.MaxLength$Q represents the number of the highest element in the $QMrgLenMask$Q arrays.  If the bag length + gap ends up greater than $Q_MRGx.MaxLength$Q, then $Q_MRGx.MaxLength$Q is used.","CLR(T5T_09_MRG.BagPastPE)","8"
RCOMMENT,"MainProgram","T5T_09_MRG","Shift the merge line bit shift one position for each pulse detected after the photoeye seal has been on but the bag is not merging as detected by the merge seal.$NThis will adjust the merge line bit shift register for any coasting of the merge conveyor.","ADD(1,T5T_09_MRG.BagPastPE,T5T_09_MRG.BagPastPE)","9"
RCOMMENT,"MainProgram","T5T_09_MRG","This rung compares the mainline bit shift registers to the merge line bit shift registers.$NIf the mainline bit shift register has ones in the merge line bit shift register it will be passed through to the interference array.","AND(T5T_09_MRG.MainLineBS[2],T5T_09_MRG.MrgLineBS[2],T5T_09_MRG.Intrfr[2])","10"
RCOMMENT,"MainProgram","T5T_09_MRG","If the interference arrays are empty then the merge ahead conditions have been met.$NIf the leading gap accumulator is done then the merge behind conditions have been met.$NSet the merge ok bit and generate a positive transition when the mainline is clear for a bag to merge in.","OTE(T5T_09_MRG.MrgOK)","11"
RCOMMENT,"MainProgram","T5T_09_MRG","If there are no faults on the merge conveyor, the photoeye seal is set and the merge ok bit is on then seal on the merge seal bit.$NThe merge seal bit is used in the motor logic to turn on the merge conveyor.","OTU(T5T_09_MRG.Hold_Align)","12"
RCOMMENT,"MainProgram","T5T_09_MRG","Priority logic below$N***********************************************************$N$NAccumulate the Mainline priority timer if a bag is waiting on the merge and the mainline is running","RTO(T5T_09_MRG.MLPriorityTmr,?,?)","13"
RCOMMENT,"MainProgram","T5T_09_MRG","Turn on the Priority stop bit when a bag has been waiting on the merge for the time the priority timer has been set to","OTE(T5T_09_MRG.PriorityStop)","14"
RCOMMENT,"MainProgram","T5T_09_MRG","Accumulate the Merge line priority timer while in priority stop mode and the merge is actively merging bags onto the mainline","RTO(T5T_09_MRG.MrgLPriorityTmr,?,?)","15"
RCOMMENT,"MainProgram","T5T_09_MRG","Reset the Merge line priority timer if a bag merges from the merge before entering priority mode","RES(T5T_09_MRG.MLPriorityTmr)","16"
RCOMMENT,"MainProgram","T5T_09_MRG","Reset priority timers if there is no bag flow on the merge for X amount of time","RES(T5T_09_MRG.MrgLPriorityTmr)","17"
RCOMMENT,"MainProgram","T5T_09_MRG","Reset priority timers once the merge line has had priority for the preset time","RES(T5T_09_MRG.MLPriorityTmr)","18"
RCOMMENT,"MainProgram","T5T_09_MRG","Detect active bag flow on the merge","TON(T5T_09_MRG.MrgLBagflow,?,?)","19"
RCOMMENT,"MainProgram","T5T_09_MRG","Merge Run Control$N*************************************************$N$NReset the merge run timer when the merge, pre merge, pre pre merge photo-eyes have been blocked, or during a system startup","RES(T5T_09_MRG.MergeRunTmr)","20"
RCOMMENT,"MainProgram","T5T_09_MRG","Run the merge conveyor for the designated merge run time","RTO(T5T_09_MRG.MergeRunTmr,?,?)","21"
RCOMMENT,"MainProgram","T5T_09_MRG","When a bag merges, send a bag Arrival message to the UL.$N","JSR(R_MSG_TO_UL_Add,0)","22"
RCOMMENT,"MainProgram","T5T_09_MRG_CAPT","Merge Distance capture routine.$NOnly call routine when setting up merge or testing merge$N*******************************************************************************$N$NClear the tail to head counter when a bag unblocks the capture photo-eye","MOV(0,T5T_09_MRG.TailHeadAcc)","0"
RCOMMENT,"MainProgram","T5T_09_MRG_CAPT","When a bag blocks the capture photo-eye, capture the current values of the: $NHead to Head count$NTail to head count.$Nand Zero the Head to Head count","MOV(0,T5T_09_MRG.HeadHeadAcc)","1"
RCOMMENT,"MainProgram","T5T_09_MRG_CAPT","For each pulse of the encoder increment the Head to Head and Tail the Head count","ADD(1,T5T_09_MRG.TailHeadAcc,T5T_09_MRG.TailHeadAcc)","2"
RCOMMENT,"MainProgram","T5T_09_MRG_CAPT","Computer the bags Head to Head distance based on the number of pulses received during the last window","CPT(T5T_09_MRG.LastBagMrgWndo,T5T_09_MRG.HeadHeadCnt*O4_04_BTx.RES)","3"
RCOMMENT,"MainProgram","T5T_09_MRG_CAPT","Computer the Tail to head distance based on the number of pulses received during the last gap","CPT(T5T_09_MRG.LastBagGapDist,T5T_09_MRG.TailHeadCnt*O4_04_BTx.RES)","4"
RCOMMENT,"MainProgram","T5T_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","T5T_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","T5T_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","T5T_GFX","Conveyor Graphic$N$N$N","MOV(T5T_09_MTR.G,G_T5T_09_STS)","1"
RCOMMENT,"MainProgram","T5T_GFX","Conveyor Graphic$N$N$N","MOV(T5T_08_MTR.G,G_T5T_08_STS)","2"
RCOMMENT,"MainProgram","T5T_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","T5T_JAMS","Jam Detection$N$N","RTO(T5T_09_PE.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","T5T_JAMS","Jam Detection$N$N","RTO(T5T_08_PE.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","T5T_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","T5T_MTRS","System Start Request","OTE(T5T.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","T5T_MTRS","Motor run expander.","OTE(T5T.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","T5T_MTRS","PE Grouping","OTE(T5T.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","T5T_MTRS","Reset Run Timer","RES(T5T.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","T5T_MTRS","Send downstream start request","OTE(T5T.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","T5T_MTRS","Run Timer","RTO(T5T.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","T5T_MTRS","Run Latch","OTE(T5T.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","T5T_MTRS","Motor T5T_09$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","T5T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(T5T_09_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","T5T_MTRS","JRB Filter","OTE(T5T_09_MTR.JRB_FILT)","10"
RCOMMENT,"MainProgram","T5T_MTRS","Motor No Fault detection","OTE(T5T_09_MTR.NO_FAULT)","11"
RCOMMENT,"MainProgram","T5T_MTRS","Internal Motor timer.","TON(T5T_09_MTR.IM_TMR,?,?)","12"
RCOMMENT,"MainProgram","T5T_MTRS","Internal Motor.","OTE(T5T_09_MTR.INTL_MTR)","13"
RCOMMENT,"MainProgram","T5T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(T5T_09_MTR.T2H_SPACE_TMR)","14"
RCOMMENT,"MainProgram","T5T_MTRS","Conveyor Running.","OTE(T5T_09_MTR.START_EN)","18"
RCOMMENT,"MainProgram","T5T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(T5T_09_MTR.ON_TMR,?,?)","22"
RCOMMENT,"MainProgram","T5T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(T5T_09_MTR.OFF_TMR,?,?)","23"
RCOMMENT,"MainProgram","T5T_MTRS","Motor T5T_08$N$N$N","NOP()","24"
RCOMMENT,"MainProgram","T5T_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(T5T_08_MTR.ANTI_CASC)","25"
RCOMMENT,"MainProgram","T5T_MTRS","Motor No Fault detection","OTE(T5T_08_MTR.NO_FAULT)","26"
RCOMMENT,"MainProgram","T5T_MTRS","Internal Motor timer.","TON(T5T_08_MTR.IM_TMR,?,?)","27"
RCOMMENT,"MainProgram","T5T_MTRS","Internal Motor.","OTE(T5T_08_MTR.INTL_MTR)","28"
RCOMMENT,"MainProgram","T5T_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(T5T_08_MTR.T2H_SPACE_TMR)","29"
RCOMMENT,"MainProgram","T5T_MTRS","Conveyor Running.","OTE(T5T_08_MTR.START_EN)","33"
RCOMMENT,"MainProgram","T5T_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(T5T_08_MTR.ON_TMR,?,?)","36"
RCOMMENT,"MainProgram","T5T_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(T5T_08_MTR.OFF_TMR,?,?)","37"
RCOMMENT,"MainProgram","T5T_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","T5T_PE_Filters","Photoeye","OTE(T5T_09_PE.FILT)","1"
RCOMMENT,"MainProgram","T5T_PE_Filters","Photoeye","OTE(T5T_08_PE.FILT)","4"
RCOMMENT,"MainProgram","T5T_PE_Filters","Photoeye","OTE(O4_03_PE.FILT)","8"
RCOMMENT,"MainProgram","T5T_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","T5T_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","T5T_STATUS","Conveyor Status$N$N$N","NOP()","18"
RCOMMENT,"MainProgram","T5T_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","T5T_VFDS","Motor T5T_09 VFD$N***************************$N","TON(T5T_09_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","T5T_VFDS","Motor T5T_08 VFD$N***************************$N","TON(T5T_08_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","THROUGHPUT","****************************************************************************************************$NThis routine collects real time bag counts for display on UL.$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","THROUGHPUT","***********************************$NCL1T Bag Count$N***********************************$N","ADD(1,S_CL1T_03_THRU,S_CL1T_03_THRU)","1"
RCOMMENT,"MainProgram","THROUGHPUT","***********************************$NCL2T Bag Count$N***********************************$N","ADD(1,S_CL2T_03_THRU,S_CL2T_03_THRU)","2"
RCOMMENT,"MainProgram","THROUGHPUT","***********************************$NCL3T Bag Count$N***********************************$N","ADD(1,S_CL3T_03_THRU,S_CL3T_03_THRU)","3"
RCOMMENT,"MainProgram","THROUGHPUT","***********************************$NBM1_13 Bag Count$N***********************************$N","ADD(1,S_BM1_13_THRU,S_BM1_13_THRU)","4"
RCOMMENT,"MainProgram","THROUGHPUT","***********************************$NXO1 Bag Count$N***********************************$N","ADD(1,S_XO1_03_THRU,S_XO1_03_THRU)","5"
RCOMMENT,"MainProgram","THROUGHPUT","***********************************$NXO2 Bag Count$N***********************************$N","ADD(1,S_XO2_05_THRU,S_XO2_05_THRU)","6"
RCOMMENT,"MainProgram","THROUGHPUT","***********************************$NO2T Bag Count$N***********************************$N","ADD(1,S_O2T_14_THRU,S_O2T_14_THRU)","7"
RCOMMENT,"MainProgram","THROUGHPUT","***********************************$NO4T Bag Count$N***********************************$N","ADD(1,S_O4T_13_THRU,S_O4T_13_THRU)","8"
RCOMMENT,"MainProgram","THROUGHPUT","***********************************$NBM1_26 Bag Count$N***********************************$N","ADD(1,S_BM1_26_THRU,S_BM1_26_THRU)","9"
RCOMMENT,"MainProgram","THROUGHPUT","***********************************$NCL12T_36 Bag Count$N***********************************$N","ADD(1,S_CL12T_36_THRU,S_CL12T_36_THRU)","10"
RCOMMENT,"MainProgram","XO1_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO1_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","XO1_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO1_GFX","Conveyor Graphic$N$N$N","MOV(XO1_03_MTR.G,G_XO1_03_STS)","1"
RCOMMENT,"MainProgram","XO1_GFX","Conveyor Graphic$N$N$N","MOV(XO1_02_MTR.G,G_XO1_02_STS)","2"
RCOMMENT,"MainProgram","XO1_GFX","Conveyor Graphic$N$N$N","MOV(XO1_01_MTR.G,G_XO1_01_STS)","3"
RCOMMENT,"MainProgram","XO1_HSD","Siemens HSD2 Control Routine$NThe HSD has its own controller that monitors the HSD for faults and handles the actuation of the unit. This routine interfaces with the HSD and tells it when to switch position. Additionally there is fault detection for any faults which the BHS is capable of monitoring.$N$N=====================================================================================================================================================$N$N","OTE(XO1_HSD.HOME_FLTR)","0"
RCOMMENT,"MainProgram","XO1_HSD","If the diverter is in the home position and the motor disconnect is turned off, seal in the home position status.","OTE(XO1_HSD.HOME_FLTR_SEAL)","1"
RCOMMENT,"MainProgram","XO1_HSD","============================================The following rungs are added for Untracked Diverters.============================================$N$N","NOP()","4"
RCOMMENT,"MainProgram","XO1_HSD","Local Pulse Counter Clear Control.$NThis rung controls when the local pulse counter is cleared.$NThe intent of this rung is to only clear the counter when there are no bags in the zone or on the conveyor to conveyor transition.$NAuto_Trk bit is included in this rung to prevent counter from resetting (due to untracked zone) when bag is lost during setup.  The GEQ than 0 instruction in this rung ensures that the counter will be cleared if it ever goes negative.","OTE(O4T_10A_TD.DONT_CLR)","5"
RCOMMENT,"MainProgram","XO1_HSD","Local Pulse Counter Clear.$NThis rung clears the local pulse counter when the control rung indicates to do so.","CLR(O4T_10A_TD.BT_CNT)","6"
RCOMMENT,"MainProgram","XO1_HSD","Local Pulse Counter.$NThis rung counts pulses when the control rung is indicating to do so.","ADD(O4T_10A_TD.BT_CNT,1,O4T_10A_TD.BT_CNT)","7"
RCOMMENT,"MainProgram","XO1_HSD","============================================BHS detection of operational faults.============================================$N$N","NOP()","9"
RCOMMENT,"MainProgram","XO1_HSD","Failed to Extend","TON(XO1_HSD.FailedToExtend_TMR,?,?)","10"
RCOMMENT,"MainProgram","XO1_HSD","Failed to Retract","TON(XO1_HSD.FailedToRetract_TMR,?,?)","12"
RCOMMENT,"MainProgram","XO1_HSD","Position Fault","TON(XO1_HSD.PositionFault_TMR,?,?)","14"
RCOMMENT,"MainProgram","XO1_HSD","Fault Reset. Do not reset diverter faults until Home Prox is made and RPB has been depressed.$N$N","OTE(XO1_HSD.RESET_RDY)","17"
RCOMMENT,"MainProgram","XO1_HSD","Destination Line Full. Typically used for indexing piers.$N","OTE(XO1_HSD.FULL)","19"
RCOMMENT,"MainProgram","XO1_HSD","Removed Too Close Detection for Non-Tracked Diverter$N==================================================Upstream Too Close Detection======================================================$NThe following rungs detect if two bags are too close together for either of them to be diverted. Each time a bag clears the too close detection photo-eye, the count is reset. If another bag hits the photoeye before the counter is done, the downstream bag is flagged as $'too close trailing$' and the upstream bag is flagged as $'too close leading$'. When each of the bags reach the decision point of the diverter, their too close status will be read and the diverter will not switch.$N$N","NOP()","20"
RCOMMENT,"MainProgram","XO1_HSD","==================================================Paddle Area Clear======================================================$N","BSL(XO1_HSD.Area_Clear_Reg[0],XO1_HSD.Area_Clear_Cntrl,O4T_10_PE2.FILT,?)","21"
RCOMMENT,"MainProgram","XO1_HSD","============================================Load bag into FIFO and determine when to Cycle HSD============================================$NEach time a bag enters the tracking zone in front of the diverter, capture the ID.$N","FFL(XO1_HSD.ACT_FFL_DATA,XO1_HSD.ACT_FIFO[0],XO1_HSD.ACT_CNTRL,?,?)","23"
RCOMMENT,"MainProgram","XO1_HSD","When the bag is at the activate position for the diverter, unload the next bag from the FIFO.","FFU(XO1_HSD.ACT_FIFO[0],XO1_HSD.ACT_FFU_DATA,XO1_HSD.ACT_CNTRL,?,?)","24"
RCOMMENT,"MainProgram","XO1_HSD","Alternating bit for use with the 50/50 divert override mode.","OTE(XO1_HSD.DIV_HALF_CNT)","26"
RCOMMENT,"MainProgram","XO1_HSD","Divert Decision$NDetermine if this bag is to be diverted","MOV(XO1_HSDx.ID,O4T_10A_TD.Bag_Data[XO1_HSD.ACT_FFU_DATA.BAG_ID].Div_ID)","27"
RCOMMENT,"MainProgram","XO1_HSD","Determine if the bag can be diverted as planned.$NSet the reason code for UL reporting$N","NOP()","28"
RCOMMENT,"MainProgram","XO1_HSD","Divert and retract requests.","OTE(XO1_HSD.DIV_REQ)","33"
RCOMMENT,"MainProgram","XO1_HSD","Delayed Activation$N-When the Conveyor is not at full speed$N","ADD(XO1_HSD.ACT_POINT,XO1_HSDx.MedSpdDelay,XO1_HSD.ACT_POINT)","35"
RCOMMENT,"MainProgram","XO1_HSD","============================================Load Bag into FIFO and Determine When to Check if it Transferred Successfully============================================$NThis FIFO is used to create a delay to ensure that the diverter has time to move before the bag ID is transferred in tracking and to ensure messaging to the upper level is accurate. The setting for this delay (xxx.XFER_CONST) should be only slightly longer than it takes for the diverter to switch positions. In most cases this should only be a few pulses.","CLR(XO1_HSD.ACT_FFU_DATA.BAG_ID)","36"
RCOMMENT,"MainProgram","XO1_HSD","Send the divert command to the diverter.","TOF(XO1_HSD.EXT_TRIG_TMR,?,?)","38"
RCOMMENT,"MainProgram","XO1_HSD","If the diverter is in the middle of diverting a bag and the destination conveyor stops then stop the mainline conveyor as well, and vice versa.","OTE(XO1_HSD.SYNC_RUN)","42"
RCOMMENT,"MainProgram","XO1_HSD","When the current transfer ID reaches the delay setpoint, unload the data to be processed.$NIf the diverter faults while actuating for this bag, unload it and send the message so the diverter fault can be included in the message","OTE(XO1_HSD.UNLD_XFER_ID)","43"
RCOMMENT,"MainProgram","XO1_HSD","Unload a bag ID from the FIFO if the encoder pulse count reaches the transfer setting","FFU(XO1_HSD.XFER_FIFO[0],XO1_HSD.XFER_FIFO_DATA,XO1_HSD.XFER_CNTRL,?,?)","44"
RCOMMENT,"MainProgram","XO1_HSD","The Zone belt tach count must not be cleared while the diverter is tracking a bag","OTE(XO1_HSD.BT_DONT_CLEAR)","45"
RCOMMENT,"MainProgram","XO1_HSD","Trigger the XFER_ID_VALID once data has been unloaded from the FIFO. The XFER_ID_VALID is treated as a one shot as the ID will be cleared on the next scan.","OTE(XO1_HSD.XFER_ID_VALID)","46"
RCOMMENT,"MainProgram","XO1_HSD","For the current Bag ID, determine where the bag went by evaluating the current position of the diverter.$N","OTE(XO1_HSD.BAG_ERROR)","47"
RCOMMENT,"MainProgram","XO1_HSD","Set Event Code for the Bag$N","MOV(MsgConst.Event_DivError,XO1_HSD.Event)","48"
RCOMMENT,"MainProgram","XO1_HSD","Get reason code determined at the activation point.$NUpdate it with any faults that came up since then.","MOV(MsgConst.Rson_DivDisconnectOff,XO1_HSD.Reason)","49"
RCOMMENT,"MainProgram","XO1_HSD","If the bag was routed to its originally defined destination a reason code of N/A will be sent to the Upper Level.","OTE(XO1_HSD.Reason_NA)","50"
RCOMMENT,"MainProgram","XO1_HSD","Send message to the Upper Level.","JSR(R_MSG_TO_UL_Add,0)","51"
RCOMMENT,"MainProgram","XO1_HSD","============================================Motor Control for HSD============================================$N$N","OTE(XO1_HSD.NO_FAULT)","52"
RCOMMENT,"MainProgram","XO1_HSD","If there have been no bags in the general area of the diverter for a certain amount of time, then the diverter should retract.","TON(XO1_HSD.Auto_Retract_TMR,?,?)","55"
RCOMMENT,"MainProgram","XO1_HSD","Active Bag Detection for the HSD$NOnly run the HSD$'s paddle belt for a short time while bags are actively flowing on the mainline.","RES(XO1_HSD.PDL_RUN_TMR)","57"
RCOMMENT,"MainProgram","XO1_HSD","If the diverter is not in the home position and the diverter has a fault then stop the mainline.","OTE(XO1_HSD.ML_STOP_FLT)","63"
RCOMMENT,"MainProgram","XO1_HSD","Monitor the conveyor$'s acceleration to approximate current speed","TON(XO1_HSD.RAMP_UP_TMR,?,?)","64"
RCOMMENT,"MainProgram","XO1_HSD","============================================Statistic Counters==============================================$N","ADD(1,S_XO1_01_HSD_FLTS,S_XO1_01_HSD_FLTS)","65"
RCOMMENT,"MainProgram","XO1_HSD","============================================HMI Override Control============================================$N$N","OTE(F_XO1_01_HSD_OUTSERV)","69"
RCOMMENT,"MainProgram","XO1_HSD","============================================HMI Alarms below this point.============================================$N","TON(XO1_HSD.EN_DLY,?,?)","74"
RCOMMENT,"MainProgram","XO1_HSD","============================================HMI Status below this point.============================================$N","NOP()","80"
RCOMMENT,"MainProgram","XO1_HSD","This rung is used to set the HMI status of the HSD$N","MOV(XO1_HSD.G,G_XO1_01_HSD_STS)","88"
RCOMMENT,"MainProgram","XO1_HSD","This rung is used to set the Position of the HSD$N","MOV(XO1_HSD.P,G_XO1_01_HSD_POS)","89"
RCOMMENT,"MainProgram","XO1_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO1_JAMS","Jam Detection$N$N","RTO(XO1_03_PE.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","XO1_JAMS","Jam Detection$N$N","RTO(XO1_02_PE.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","XO1_JAMS","Jam Detection$N$N","RTO(XO1_01_PE.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","XO1_JAMS","Jam Detection$N$N","RTO(XO1_01_PE2.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","XO1_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO1_MTRS","System Start Request","OTE(XO1.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","XO1_MTRS","Motor run expander.","OTE(XO1.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","XO1_MTRS","PE Grouping","OTE(XO1.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","XO1_MTRS","Reset Run Timer","RES(XO1.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","XO1_MTRS","Send downstream start request","OTE(XO1.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","XO1_MTRS","Run Timer","RTO(XO1.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","XO1_MTRS","Run Latch","OTE(XO1.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","XO1_MTRS","Motor XO1_03$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","XO1_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(XO1_03_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","XO1_MTRS","Motor No Fault detection","OTE(XO1_03_MTR.NO_FAULT)","10"
RCOMMENT,"MainProgram","XO1_MTRS","Internal Motor timer.","TON(XO1_03_MTR.IM_TMR,?,?)","11"
RCOMMENT,"MainProgram","XO1_MTRS","Internal Motor.","OTE(XO1_03_MTR.INTL_MTR)","12"
RCOMMENT,"MainProgram","XO1_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(XO1_03_MTR.T2H_SPACE_TMR)","13"
RCOMMENT,"MainProgram","XO1_MTRS","Conveyor Running.","OTE(XO1_03_MTR.START_EN)","17"
RCOMMENT,"MainProgram","XO1_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(XO1_03_MTR.ON_TMR,?,?)","20"
RCOMMENT,"MainProgram","XO1_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(XO1_03_MTR.OFF_TMR,?,?)","21"
RCOMMENT,"MainProgram","XO1_MTRS","Motor XO1_02$N$N$N","NOP()","22"
RCOMMENT,"MainProgram","XO1_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(XO1_02_MTR.ANTI_CASC)","23"
RCOMMENT,"MainProgram","XO1_MTRS","Motor No Fault detection","OTE(XO1_02_MTR.NO_FAULT)","24"
RCOMMENT,"MainProgram","XO1_MTRS","Internal Motor timer.","TON(XO1_02_MTR.IM_TMR,?,?)","25"
RCOMMENT,"MainProgram","XO1_MTRS","Internal Motor.","OTE(XO1_02_MTR.INTL_MTR)","26"
RCOMMENT,"MainProgram","XO1_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(XO1_02_MTR.T2H_SPACE_TMR)","27"
RCOMMENT,"MainProgram","XO1_MTRS","Conveyor Running.","OTE(XO1_02_MTR.START_EN)","31"
RCOMMENT,"MainProgram","XO1_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(XO1_02_MTR.ON_TMR,?,?)","34"
RCOMMENT,"MainProgram","XO1_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(XO1_02_MTR.OFF_TMR,?,?)","35"
RCOMMENT,"MainProgram","XO1_MTRS","Motor XO1_01$N$N$N","NOP()","36"
RCOMMENT,"MainProgram","XO1_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(XO1_01_MTR.ANTI_CASC)","37"
RCOMMENT,"MainProgram","XO1_MTRS","Motor No Fault detection","OTE(XO1_01_MTR.NO_FAULT)","38"
RCOMMENT,"MainProgram","XO1_MTRS","Internal Motor timer.","TON(XO1_01_MTR.IM_TMR,?,?)","39"
RCOMMENT,"MainProgram","XO1_MTRS","Internal Motor.","OTE(XO1_01_MTR.INTL_MTR)","40"
RCOMMENT,"MainProgram","XO1_MTRS","Conveyor Running.","OTE(XO1_01_MTR.START_EN)","41"
RCOMMENT,"MainProgram","XO1_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(XO1_01_MTR.ON_TMR,?,?)","44"
RCOMMENT,"MainProgram","XO1_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(XO1_01_MTR.OFF_TMR,?,?)","45"
RCOMMENT,"MainProgram","XO1_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO1_PE_Filters","Photoeye","OTE(XO1_03_PE.FILT)","1"
RCOMMENT,"MainProgram","XO1_PE_Filters","Photoeye","OTE(XO1_02_PE.FILT)","5"
RCOMMENT,"MainProgram","XO1_PE_Filters","Photoeye","OTE(XO1_01_PE.FILT)","9"
RCOMMENT,"MainProgram","XO1_PE_Filters","Photoeye","OTE(XO1_01_PE2.FILT)","12"
RCOMMENT,"MainProgram","XO1_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO1_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","XO1_STATUS","Conveyor Status$N$N$N","NOP()","17"
RCOMMENT,"MainProgram","XO1_STATUS","Conveyor Status$N$N$N","NOP()","33"
RCOMMENT,"MainProgram","XO1_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO1_VFDS","Motor XO1_03 VFD$N***************************$N","TON(XO1_03_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","XO1_VFDS","Motor XO1_02 VFD$N***************************$N","TON(XO1_02_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","XO1_VFDS","Motor XO1_01 VFD$N***************************$N","TON(XO1_01_VFD.POWERED_DLY_TMR,?,?)","5"
RCOMMENT,"MainProgram","XO2_05_MRG","Merge Routine - Fixed Gap size$N*********************************************$N$NThis rung will fill the mainline bit shift register with a 1 when the merge inhibit photoeye is blocked.","OTL(XO2_05_MRG.MainLineBS[1].15)","0"
RCOMMENT,"MainProgram","XO2_05_MRG","For each mainline belt tach pulse do the following:$NBit shift right the mainline bit shift register$NIncrement the leading gap counter accumulator","ADD(1,XO2_05_MRG.Lead_Gap_Acc,XO2_05_MRG.Lead_Gap_Acc)","1"
RCOMMENT,"MainProgram","XO2_05_MRG","This rung will add the distance the bag on the merge has coasted to the required minimum leading gap.$NThe variable $Q_MRGx.Lead_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged behind.","ADD(XO2_05_MRG.BagPastPE,XO2_05_MRGx.Lead_Gap,XO2_05_MRG.Lead_Gap)","2"
RCOMMENT,"MainProgram","XO2_05_MRG","As the BSR is unloading ones from the mainline bit shift register at element zero bit zero clear the leading gap counter accumulator.$NThis insures the leading gap counter only increments based on the tail of the mainline bag.","CLR(XO2_05_MRG.Lead_Gap_Acc)","3"
RCOMMENT,"MainProgram","XO2_05_MRG","Once the leading gap counter has accumulated to the leading gap constant the merge behind condition has been met.","OTE(XO2_05_MRG.Lead_Gap_DN)","4"
RCOMMENT,"MainProgram","XO2_05_MRG","Sync Run logic for non tracked merges.$NThis allows the merge to restart when the mainline stops and a bag is mid merge","RES(XO2_05_MRG.SyncRunTmr)","5"
RCOMMENT,"MainProgram","XO2_05_MRG","On the positive transition of the photoeye seal, populate the merge line bit shift registers.$NThe merge line bit shift registers are compared to the mainline bit shift registers to see if a bag can merge without crashing into another bag.$NThe variable $Q_MRGx.Trail_Gap$Q is from the perspective of the merging bag.  I.e. the gap between the bag that merged and the bag that it merged ahead of.$NThe variable $Q_MRGx.MinLength$Q is used when the merging bag does not have its length defined.  In such a case, you must assume the bag is the max size the system is designed to handle.$NIf the bag does have its length defined, the bag$'s length is added to $Q_MRGx.Trail_Gap$Q to define the value populated into the merge line shift register.$NThe variable $Q_MRGx.MaxLength$Q represents the number of the highest element in the $QMrgLenMask$Q arrays.  If the bag length + gap ends up greater than $Q_MRGx.MaxLength$Q, then $Q_MRGx.MaxLength$Q is used.","CLR(XO2_05_MRG.BagPastPE)","8"
RCOMMENT,"MainProgram","XO2_05_MRG","Shift the merge line bit shift one position for each pulse detected after the photoeye seal has been on but the bag is not merging as detected by the merge seal.$NThis will adjust the merge line bit shift register for any coasting of the merge conveyor.","ADD(1,XO2_05_MRG.BagPastPE,XO2_05_MRG.BagPastPE)","9"
RCOMMENT,"MainProgram","XO2_05_MRG","This rung compares the mainline bit shift registers to the merge line bit shift registers.$NIf the mainline bit shift register has ones in the merge line bit shift register it will be passed through to the interference array.","AND(XO2_05_MRG.MainLineBS[2],XO2_05_MRG.MrgLineBS[2],XO2_05_MRG.Intrfr[2])","10"
RCOMMENT,"MainProgram","XO2_05_MRG","If the interference arrays are empty then the merge ahead conditions have been met.$NIf the leading gap accumulator is done then the merge behind conditions have been met.$NSet the merge ok bit and generate a positive transition when the mainline is clear for a bag to merge in.","OTE(XO2_05_MRG.MrgOK)","11"
RCOMMENT,"MainProgram","XO2_05_MRG","If there are no faults on the merge conveyor, the photoeye seal is set and the merge ok bit is on then seal on the merge seal bit.$NThe merge seal bit is used in the motor logic to turn on the merge conveyor.","OTU(XO2_05_MRG.Hold_Align)","12"
RCOMMENT,"MainProgram","XO2_05_MRG","Priority logic below$N***********************************************************$N$NAccumulate the Mainline priority timer if a bag is waiting on the merge and the mainline is running","RTO(XO2_05_MRG.MLPriorityTmr,?,?)","13"
RCOMMENT,"MainProgram","XO2_05_MRG","Turn on the Priority stop bit when a bag has been waiting on the merge for the time the priority timer has been set to","OTE(XO2_05_MRG.PriorityStop)","14"
RCOMMENT,"MainProgram","XO2_05_MRG","Accumulate the Merge line priority timer while in priority stop mode and the merge is actively merging bags onto the mainline","RTO(XO2_05_MRG.MrgLPriorityTmr,?,?)","15"
RCOMMENT,"MainProgram","XO2_05_MRG","Reset the Merge line priority timer if a bag merges from the merge before entering priority mode","RES(XO2_05_MRG.MLPriorityTmr)","16"
RCOMMENT,"MainProgram","XO2_05_MRG","Reset priority timers if there is no bag flow on the merge for X amount of time","RES(XO2_05_MRG.MrgLPriorityTmr)","17"
RCOMMENT,"MainProgram","XO2_05_MRG","Reset priority timers once the merge line has had priority for the preset time","RES(XO2_05_MRG.MLPriorityTmr)","18"
RCOMMENT,"MainProgram","XO2_05_MRG","Detect active bag flow on the merge","TON(XO2_05_MRG.MrgLBagflow,?,?)","19"
RCOMMENT,"MainProgram","XO2_05_MRG","Merge Run Control$N*************************************************$N$NReset the merge run timer when the merge, pre merge, pre pre merge photo-eyes have been blocked, or during a system startup","RES(XO2_05_MRG.MergeRunTmr)","20"
RCOMMENT,"MainProgram","XO2_05_MRG","Run the merge conveyor for the designated merge run time","RTO(XO2_05_MRG.MergeRunTmr,?,?)","21"
RCOMMENT,"MainProgram","XO2_05_MRG","When a bag merges, send a bag Arrival message to the UL.$N","JSR(R_MSG_TO_UL_Add,0)","22"
RCOMMENT,"MainProgram","XO2_05_MRG_CAPT","Merge Distance capture routine.$NOnly call routine when setting up merge or testing merge$N*******************************************************************************$N$NClear the tail to head counter when a bag unblocks the capture photo-eye","MOV(0,XO2_05_MRG.TailHeadAcc)","0"
RCOMMENT,"MainProgram","XO2_05_MRG_CAPT","When a bag blocks the capture photo-eye, capture the current values of the: $NHead to Head count$NTail to head count.$Nand Zero the Head to Head count","MOV(0,XO2_05_MRG.HeadHeadAcc)","1"
RCOMMENT,"MainProgram","XO2_05_MRG_CAPT","For each pulse of the encoder increment the Head to Head and Tail the Head count","ADD(1,XO2_05_MRG.TailHeadAcc,XO2_05_MRG.TailHeadAcc)","2"
RCOMMENT,"MainProgram","XO2_05_MRG_CAPT","Computer the bags Head to Head distance based on the number of pulses received during the last window","CPT(XO2_05_MRG.LastBagMrgWndo,XO2_05_MRG.HeadHeadCnt*C4_09_BTx.RES)","3"
RCOMMENT,"MainProgram","XO2_05_MRG_CAPT","Computer the Tail to head distance based on the number of pulses received during the last gap","CPT(XO2_05_MRG.LastBagGapDist,XO2_05_MRG.TailHeadCnt*C4_09_BTx.RES)","4"
RCOMMENT,"MainProgram","XO2_FIELD_IND","****************************************************************************************************$NThis routine controls field indicators like control station lights and beacons/stacklights.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO2_FIELD_IND","Control Station$N$N","NOP()","1"
RCOMMENT,"MainProgram","XO2_FIELD_IND","Control Station$N$N","NOP()","6"
RCOMMENT,"MainProgram","XO2_GFX","****************************************************************************************************$NThis routine is used to set the HMI graphic state of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO2_GFX","Conveyor Graphic$N$N$N","MOV(XO2_05_MTR.G,G_XO2_05_STS)","1"
RCOMMENT,"MainProgram","XO2_GFX","Conveyor Graphic$N$N$N","MOV(XO2_04_MTR.G,G_XO2_04_STS)","2"
RCOMMENT,"MainProgram","XO2_GFX","Conveyor Graphic$N$N$N","MOV(XO2_03_MTR.G,G_XO2_03_STS)","3"
RCOMMENT,"MainProgram","XO2_GFX","Conveyor Graphic$N$N$N","MOV(XO2_02_MTR.G,G_XO2_02_STS)","4"
RCOMMENT,"MainProgram","XO2_GFX","Conveyor Graphic$N$N$N","MOV(XO2_01_MTR.G,G_XO2_01_STS)","5"
RCOMMENT,"MainProgram","XO2_HSD","Siemens HSD2 Control Routine$NThe HSD has its own controller that monitors the HSD for faults and handles the actuation of the unit. This routine interfaces with the HSD and tells it when to switch position. Additionally there is fault detection for any faults which the BHS is capable of monitoring.$N$N=====================================================================================================================================================$N$N","OTE(XO2_HSD.HOME_FLTR)","0"
RCOMMENT,"MainProgram","XO2_HSD","If the diverter is in the home position and the motor disconnect is turned off, seal in the home position status.","OTE(XO2_HSD.HOME_FLTR_SEAL)","1"
RCOMMENT,"MainProgram","XO2_HSD","============================================The following rungs are added for Untracked Diverters.============================================$N$N","NOP()","4"
RCOMMENT,"MainProgram","XO2_HSD","Local Pulse Counter Clear Control.$NThis rung controls when the local pulse counter is cleared.$NThe intent of this rung is to only clear the counter when there are no bags in the zone or on the conveyor to conveyor transition.$NAuto_Trk bit is included in this rung to prevent counter from resetting (due to untracked zone) when bag is lost during setup.  The GEQ than 0 instruction in this rung ensures that the counter will be cleared if it ever goes negative.","OTE(PE2_BM1_23_TD.DONT_CLR)","5"
RCOMMENT,"MainProgram","XO2_HSD","Local Pulse Counter Clear.$NThis rung clears the local pulse counter when the control rung indicates to do so.","CLR(PE2_BM1_23_TD.BT_CNT)","6"
RCOMMENT,"MainProgram","XO2_HSD","Local Pulse Counter.$NThis rung counts pulses when the control rung is indicating to do so.","ADD(PE2_BM1_23_TD.BT_CNT,1,PE2_BM1_23_TD.BT_CNT)","7"
RCOMMENT,"MainProgram","XO2_HSD","============================================BHS detection of operational faults.============================================$N$N","NOP()","9"
RCOMMENT,"MainProgram","XO2_HSD","Failed to Extend","TON(XO2_HSD.FailedToExtend_TMR,?,?)","10"
RCOMMENT,"MainProgram","XO2_HSD","Failed to Retract","TON(XO2_HSD.FailedToRetract_TMR,?,?)","12"
RCOMMENT,"MainProgram","XO2_HSD","Position Fault","TON(XO2_HSD.PositionFault_TMR,?,?)","14"
RCOMMENT,"MainProgram","XO2_HSD","Fault Reset. Do not reset diverter faults until Home Prox is made and RPB has been depressed.$N$N","OTE(XO2_HSD.RESET_RDY)","17"
RCOMMENT,"MainProgram","XO2_HSD","Destination Line Full. Typically used for indexing piers.$N","OTE(XO2_HSD.FULL)","19"
RCOMMENT,"MainProgram","XO2_HSD","Removed Too Close Detection for Non-Tracked Diverter$N==================================================Upstream Too Close Detection======================================================$NThe following rungs detect if two bags are too close together for either of them to be diverted. Each time a bag clears the too close detection photo-eye, the count is reset. If another bag hits the photoeye before the counter is done, the downstream bag is flagged as $'too close trailing$' and the upstream bag is flagged as $'too close leading$'. When each of the bags reach the decision point of the diverter, their too close status will be read and the diverter will not switch.$N$N","NOP()","20"
RCOMMENT,"MainProgram","XO2_HSD","==================================================Paddle Area Clear======================================================$N","BSL(XO2_HSD.Area_Clear_Reg[0],XO2_HSD.Area_Clear_Cntrl,BM1_23_PE1.FILT,?)","21"
RCOMMENT,"MainProgram","XO2_HSD","============================================Load bag into FIFO and determine when to Cycle HSD============================================$NEach time a bag enters the tracking zone in front of the diverter, capture the ID.$N","FFL(XO2_HSD.ACT_FFL_DATA,XO2_HSD.ACT_FIFO[0],XO2_HSD.ACT_CNTRL,?,?)","23"
RCOMMENT,"MainProgram","XO2_HSD","When the bag is at the activate position for the diverter, unload the next bag from the FIFO.","FFU(XO2_HSD.ACT_FIFO[0],XO2_HSD.ACT_FFU_DATA,XO2_HSD.ACT_CNTRL,?,?)","24"
RCOMMENT,"MainProgram","XO2_HSD","Alternating bit for use with the 50/50 divert override mode.","OTE(XO2_HSD.DIV_HALF_CNT)","26"
RCOMMENT,"MainProgram","XO2_HSD","Divert Decision$NDetermine if this bag is to be diverted","MOV(XO2_HSDx.ID,PE2_BM1_23_TD.Bag_Data[XO2_HSD.ACT_FFU_DATA.BAG_ID].Div_ID)","27"
RCOMMENT,"MainProgram","XO2_HSD","Determine if the bag can be diverted as planned.$NSet the reason code for UL reporting$N","NOP()","28"
RCOMMENT,"MainProgram","XO2_HSD","Divert and retract requests.","OTE(XO2_HSD.DIV_REQ)","33"
RCOMMENT,"MainProgram","XO2_HSD","Delayed Activation$N-When the Conveyor is not at full speed$N","ADD(XO2_HSD.ACT_POINT,XO2_HSDx.MedSpdDelay,XO2_HSD.ACT_POINT)","35"
RCOMMENT,"MainProgram","XO2_HSD","============================================Load Bag into FIFO and Determine When to Check if it Transferred Successfully============================================$NThis FIFO is used to create a delay to ensure that the diverter has time to move before the bag ID is transferred in tracking and to ensure messaging to the upper level is accurate. The setting for this delay (xxx.XFER_CONST) should be only slightly longer than it takes for the diverter to switch positions. In most cases this should only be a few pulses.","CLR(XO2_HSD.ACT_FFU_DATA.BAG_ID)","36"
RCOMMENT,"MainProgram","XO2_HSD","Send the divert command to the diverter.","TOF(XO2_HSD.EXT_TRIG_TMR,?,?)","38"
RCOMMENT,"MainProgram","XO2_HSD","If the diverter is in the middle of diverting a bag and the destination conveyor stops then stop the mainline conveyor as well, and vice versa.","OTE(XO2_HSD.SYNC_RUN)","42"
RCOMMENT,"MainProgram","XO2_HSD","When the current transfer ID reaches the delay setpoint, unload the data to be processed.$NIf the diverter faults while actuating for this bag, unload it and send the message so the diverter fault can be included in the message","OTE(XO2_HSD.UNLD_XFER_ID)","43"
RCOMMENT,"MainProgram","XO2_HSD","Unload a bag ID from the FIFO if the encoder pulse count reaches the transfer setting","FFU(XO2_HSD.XFER_FIFO[0],XO2_HSD.XFER_FIFO_DATA,XO2_HSD.XFER_CNTRL,?,?)","44"
RCOMMENT,"MainProgram","XO2_HSD","The Zone belt tach count must not be cleared while the diverter is tracking a bag","OTE(XO2_HSD.BT_DONT_CLEAR)","45"
RCOMMENT,"MainProgram","XO2_HSD","Trigger the XFER_ID_VALID once data has been unloaded from the FIFO. The XFER_ID_VALID is treated as a one shot as the ID will be cleared on the next scan.","OTE(XO2_HSD.XFER_ID_VALID)","46"
RCOMMENT,"MainProgram","XO2_HSD","For the current Bag ID, determine where the bag went by evaluating the current position of the diverter.$N","OTE(XO2_HSD.BAG_ERROR)","47"
RCOMMENT,"MainProgram","XO2_HSD","Set Event Code for the Bag$N","MOV(MsgConst.Event_DivError,XO2_HSD.Event)","48"
RCOMMENT,"MainProgram","XO2_HSD","Get reason code determined at the activation point.$NUpdate it with any faults that came up since then.","MOV(MsgConst.Rson_DivDisconnectOff,XO2_HSD.Reason)","49"
RCOMMENT,"MainProgram","XO2_HSD","If the bag was routed to its originally defined destination a reason code of N/A will be sent to the Upper Level.","OTE(XO2_HSD.Reason_NA)","50"
RCOMMENT,"MainProgram","XO2_HSD","Send message to the Upper Level.","JSR(R_MSG_TO_UL_Add,0)","51"
RCOMMENT,"MainProgram","XO2_HSD","============================================Motor Control for HSD============================================$N$N","OTE(XO2_HSD.NO_FAULT)","52"
RCOMMENT,"MainProgram","XO2_HSD","If there have been no bags in the general area of the diverter for a certain amount of time, then the diverter should retract.","TON(XO2_HSD.Auto_Retract_TMR,?,?)","55"
RCOMMENT,"MainProgram","XO2_HSD","Active Bag Detection for the HSD$NOnly run the HSD$'s paddle belt for a short time while bags are actively flowing on the mainline.","RES(XO2_HSD.PDL_RUN_TMR)","57"
RCOMMENT,"MainProgram","XO2_HSD","If the diverter is not in the home position and the diverter has a fault then stop the mainline.","OTE(XO2_HSD.ML_STOP_FLT)","63"
RCOMMENT,"MainProgram","XO2_HSD","Monitor the conveyor$'s acceleration to approximate current speed","TON(XO2_HSD.RAMP_UP_TMR,?,?)","64"
RCOMMENT,"MainProgram","XO2_HSD","============================================Statistic Counters==============================================$N","ADD(1,S_XO2_01_HSD_FLTS,S_XO2_01_HSD_FLTS)","65"
RCOMMENT,"MainProgram","XO2_HSD","============================================HMI Override Control============================================$N$N","OTE(F_XO2_01_HSD_OUTSERV)","69"
RCOMMENT,"MainProgram","XO2_HSD","============================================HMI Alarms below this point.============================================$N","TON(XO2_HSD.EN_DLY,?,?)","74"
RCOMMENT,"MainProgram","XO2_HSD","============================================HMI Status below this point.============================================$N","NOP()","80"
RCOMMENT,"MainProgram","XO2_HSD","This rung is used to set the HMI status of the HSD$N","MOV(XO2_HSD.G,G_XO2_01_HSD_STS)","88"
RCOMMENT,"MainProgram","XO2_HSD","This rung is used to set the Position of the HSD$N","MOV(XO2_HSD.P,G_XO2_01_HSD_POS)","89"
RCOMMENT,"MainProgram","XO2_JAMS","****************************************************************************************************$NThis routine performs jam monitoring for all photoeyes in the associated motor group.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO2_JAMS","Jam Detection$N$N","RTO(XO2_05_PE.JAM_TMR,?,?)","1"
RCOMMENT,"MainProgram","XO2_JAMS","Jam Detection$N$N","RTO(XO2_04_PE.JAM_TMR,?,?)","4"
RCOMMENT,"MainProgram","XO2_JAMS","Jam Detection$N$N","RTO(XO2_03_PE.JAM_TMR,?,?)","7"
RCOMMENT,"MainProgram","XO2_JAMS","Jam Detection$N$N","RTO(XO2_02_PE.JAM_TMR,?,?)","10"
RCOMMENT,"MainProgram","XO2_JAMS","Jam Detection$N$N","RTO(XO2_01_PE.JAM_TMR,?,?)","13"
RCOMMENT,"MainProgram","XO2_MTRS","****************************************************************************************************$NThis routine performs the general start/stop control of the conveyors in the associated motor group.$NThis routine has two sections.  The first section includes logic to group the status$' of the motors into single bits, and logic for master system control such as kick starting the system and auto stopping the system.$NThe second part of this routine is a series of rungs programmed for each motor in the motor group.  The logic contained within this section is specific to each motor and may vary depending on type of drive (VFD or Full Voltage Starter) and the electromechanical braking mechanism installed (Separately  excited brake or Clutch brake).$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO2_MTRS","System Start Request","OTE(XO2.MTR_GRP.START)","1"
RCOMMENT,"MainProgram","XO2_MTRS","Motor run expander.","OTE(XO2.MTR_GRP.RUN_EXPAND)","2"
RCOMMENT,"MainProgram","XO2_MTRS","PE Grouping","OTE(XO2.MTR_GRP.PEs)","3"
RCOMMENT,"MainProgram","XO2_MTRS","Reset Run Timer","RES(XO2.MTR_GRP.AUTO_STOP_TIMER)","4"
RCOMMENT,"MainProgram","XO2_MTRS","Send downstream start request","OTE(XO2.MTR_GRP.START_DS)","5"
RCOMMENT,"MainProgram","XO2_MTRS","Run Timer","RTO(XO2.MTR_GRP.AUTO_STOP_TIMER,?,?)","6"
RCOMMENT,"MainProgram","XO2_MTRS","Run Latch","OTE(XO2.MTR_GRP.RUN_LATCH)","7"
RCOMMENT,"MainProgram","XO2_MTRS","Motor XO2_05$N$N$N","NOP()","8"
RCOMMENT,"MainProgram","XO2_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(XO2_05_MTR.ANTI_CASC)","9"
RCOMMENT,"MainProgram","XO2_MTRS","JRB Filter","OTE(XO2_05_MTR.JRB_FILT)","10"
RCOMMENT,"MainProgram","XO2_MTRS","Motor No Fault detection","OTE(XO2_05_MTR.NO_FAULT)","11"
RCOMMENT,"MainProgram","XO2_MTRS","Internal Motor timer.","TON(XO2_05_MTR.IM_TMR,?,?)","12"
RCOMMENT,"MainProgram","XO2_MTRS","Internal Motor.","OTE(XO2_05_MTR.INTL_MTR)","13"
RCOMMENT,"MainProgram","XO2_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(XO2_05_MTR.T2H_SPACE_TMR)","14"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor Running.","OTE(XO2_05_MTR.START_EN)","18"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(XO2_05_MTR.ON_TMR,?,?)","22"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(XO2_05_MTR.OFF_TMR,?,?)","23"
RCOMMENT,"MainProgram","XO2_MTRS","Motor XO2_04$N$N$N","NOP()","24"
RCOMMENT,"MainProgram","XO2_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(XO2_04_MTR.ANTI_CASC)","25"
RCOMMENT,"MainProgram","XO2_MTRS","Motor No Fault detection","OTE(XO2_04_MTR.NO_FAULT)","26"
RCOMMENT,"MainProgram","XO2_MTRS","Internal Motor timer.","TON(XO2_04_MTR.IM_TMR,?,?)","27"
RCOMMENT,"MainProgram","XO2_MTRS","Internal Motor.","OTE(XO2_04_MTR.INTL_MTR)","28"
RCOMMENT,"MainProgram","XO2_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(XO2_04_MTR.T2H_SPACE_TMR)","29"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor Running.","OTE(XO2_04_MTR.START_EN)","33"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(XO2_04_MTR.ON_TMR,?,?)","36"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(XO2_04_MTR.OFF_TMR,?,?)","37"
RCOMMENT,"MainProgram","XO2_MTRS","Motor XO2_03$N$N$N","NOP()","38"
RCOMMENT,"MainProgram","XO2_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(XO2_03_MTR.ANTI_CASC)","39"
RCOMMENT,"MainProgram","XO2_MTRS","Motor No Fault detection","OTE(XO2_03_MTR.NO_FAULT)","40"
RCOMMENT,"MainProgram","XO2_MTRS","Internal Motor timer.","TON(XO2_03_MTR.IM_TMR,?,?)","41"
RCOMMENT,"MainProgram","XO2_MTRS","Internal Motor.","OTE(XO2_03_MTR.INTL_MTR)","42"
RCOMMENT,"MainProgram","XO2_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(XO2_03_MTR.T2H_SPACE_TMR)","43"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor Running.","OTE(XO2_03_MTR.START_EN)","47"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(XO2_03_MTR.ON_TMR,?,?)","50"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(XO2_03_MTR.OFF_TMR,?,?)","51"
RCOMMENT,"MainProgram","XO2_MTRS","Motor XO2_02$N$N$N","NOP()","52"
RCOMMENT,"MainProgram","XO2_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(XO2_02_MTR.ANTI_CASC)","53"
RCOMMENT,"MainProgram","XO2_MTRS","Motor No Fault detection","OTE(XO2_02_MTR.NO_FAULT)","54"
RCOMMENT,"MainProgram","XO2_MTRS","Internal Motor timer.","TON(XO2_02_MTR.IM_TMR,?,?)","55"
RCOMMENT,"MainProgram","XO2_MTRS","Internal Motor.","OTE(XO2_02_MTR.INTL_MTR)","56"
RCOMMENT,"MainProgram","XO2_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(XO2_02_MTR.T2H_SPACE_TMR)","57"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor Running.","OTE(XO2_02_MTR.START_EN)","61"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(XO2_02_MTR.ON_TMR,?,?)","64"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(XO2_02_MTR.OFF_TMR,?,?)","65"
RCOMMENT,"MainProgram","XO2_MTRS","Motor XO2_01$N$N$N","NOP()","66"
RCOMMENT,"MainProgram","XO2_MTRS","Anti-Cascade is the functionality by which the $Qlatching$Q aspect of a head end stop can be bypassed allowing a conveyor to restart when the photoeye is cleared.","OTE(XO2_01_MTR.ANTI_CASC)","67"
RCOMMENT,"MainProgram","XO2_MTRS","Motor No Fault detection","OTE(XO2_01_MTR.NO_FAULT)","68"
RCOMMENT,"MainProgram","XO2_MTRS","Internal Motor timer.","TON(XO2_01_MTR.IM_TMR,?,?)","69"
RCOMMENT,"MainProgram","XO2_MTRS","Internal Motor.","OTE(XO2_01_MTR.INTL_MTR)","70"
RCOMMENT,"MainProgram","XO2_MTRS","Tail - Head Spacer - Hard$N==============================================================$N","RES(XO2_01_MTR.T2H_SPACE_TMR)","71"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor Running.","OTE(XO2_01_MTR.START_EN)","75"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor on timer.  This timer is used by the upstream conveyor to determine if this conveyor has run long enough before it is allowed to start.","TON(XO2_01_MTR.ON_TMR,?,?)","78"
RCOMMENT,"MainProgram","XO2_MTRS","Conveyor off timer.  This timer is used by the conveyor to ensure that if the conveyor stops, it stays stopped for a minimum amount of time.","TON(XO2_01_MTR.OFF_TMR,?,?)","79"
RCOMMENT,"MainProgram","XO2_PE_Filters","****************************************************************************************************$NThis routine performs the photoeye filtering for non tracked phtotoeyes.$NThis routine also contains photoeye Pos/Neg Transition logic for non tracked photoeyes.$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO2_PE_Filters","Photoeye","OTE(XO2_05_PE.FILT)","1"
RCOMMENT,"MainProgram","XO2_PE_Filters","Photoeye","OTE(XO2_04_PE.FILT)","4"
RCOMMENT,"MainProgram","XO2_PE_Filters","Photoeye","OTE(XO2_03_PE.FILT)","8"
RCOMMENT,"MainProgram","XO2_PE_Filters","Photoeye","OTE(XO2_02_PE.FILT)","12"
RCOMMENT,"MainProgram","XO2_PE_Filters","Photoeye","OTE(XO2_01_PE.FILT)","16"
RCOMMENT,"MainProgram","XO2_PE_Filters","Photoeye","OTE(C4_08_PE.FILT)","20"
RCOMMENT,"MainProgram","XO2_STATUS","****************************************************************************************************$NThis routine is primarily used to set the HMI status of the conveyors.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO2_STATUS","Conveyor Status$N$N$N","NOP()","1"
RCOMMENT,"MainProgram","XO2_STATUS","Conveyor Status$N$N$N","NOP()","18"
RCOMMENT,"MainProgram","XO2_STATUS","Conveyor Status$N$N$N","NOP()","34"
RCOMMENT,"MainProgram","XO2_STATUS","Conveyor Status$N$N$N","NOP()","50"
RCOMMENT,"MainProgram","XO2_STATUS","Conveyor Status$N$N$N","NOP()","66"
RCOMMENT,"MainProgram","XO2_VFDS","****************************************************************************************************$NThis routine contains VFD related logic including control and status monitoring.$N$N$N****************************************************************************************************$N","NOP()","0"
RCOMMENT,"MainProgram","XO2_VFDS","Motor XO2_05 VFD$N***************************$N","TON(XO2_05_VFD.POWERED_DLY_TMR,?,?)","1"
RCOMMENT,"MainProgram","XO2_VFDS","Motor XO2_04 VFD$N***************************$N","TON(XO2_04_VFD.POWERED_DLY_TMR,?,?)","3"
RCOMMENT,"MainProgram","XO2_VFDS","Motor XO2_03 VFD$N***************************$N","TON(XO2_03_VFD.POWERED_DLY_TMR,?,?)","5"
RCOMMENT,"MainProgram","XO2_VFDS","Motor XO2_02 VFD$N***************************$N","TON(XO2_02_VFD.POWERED_DLY_TMR,?,?)","7"
RCOMMENT,"MainProgram","XO2_VFDS","Motor XO2_01 VFD$N***************************$N","TON(XO2_01_VFD.POWERED_DLY_TMR,?,?)","9"
